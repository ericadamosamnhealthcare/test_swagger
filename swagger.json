{
  "openapi": "3.0.1",
  "info": {
    "title": "B4HealthWebAPI",
    "description": "<strong>Below section is about what to do with Auth/GetAccessToken, please read before you get started.</strong><br/><br/><br/><strong>Access Token:</strong> Most of our web APIs require role-based authorization, which means user has to sign in first with their username and password to get access token. Then the access token will be sent in request header with key 'Authorization'.<br/><br/>- When playing with SwaggerUI, you call any web API that requires authorization, please call Auth/GetAccessToken first to generate an access token, and put 'Bearer YourTokenString(value of the response.data.AccessToken field)' in the Authorization textbox on the popup that shows up after clicking below Authorize button. <br/>- Please note that access token gets expired in 10 minutes after it is generated, you may need to regenerate one if response says 'Unauthorized.'",
    "version": "v1"
  },
  "paths": {
    "/api/Admin/GetHospitalAdminProfile": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get Hospital Admin Profile",
        "parameters": [
          {
            "name": "AdminId",
            "in": "query",
            "description": "When adminId is null we get it from access token, which means getting profile of currently signed-in admin user",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalAdminProfileResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalAdminProfileResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalAdminProfileResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/GetUnitManagerProfile": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get Unit Manager Profile",
        "parameters": [
          {
            "name": "AdminId",
            "in": "query",
            "description": "When adminId is null we get it from access token, which means getting profile of currently signed-in admin user",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUnitManagerProfileResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUnitManagerProfileResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUnitManagerProfileResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/SaveUnitManagerProfile": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Save Unit Manager Profile",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveUnitManagerProfileRequest"
                  }
                ],
                "description": "Request of SaveUnitManagerProfile"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveUnitManagerProfileRequest"
                  }
                ],
                "description": "Request of SaveUnitManagerProfile"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveUnitManagerProfileRequest"
                  }
                ],
                "description": "Request of SaveUnitManagerProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveUnitManagerProfileResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveUnitManagerProfileResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveUnitManagerProfileResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/SaveUnitManagerUnits": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Save Unit Manager Facilities/Units",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveUnitManagerUnitsRequest"
                  }
                ],
                "description": "Request of SaveUnitManagerUnits"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveUnitManagerUnitsRequest"
                  }
                ],
                "description": "Request of SaveUnitManagerUnits"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveUnitManagerUnitsRequest"
                  }
                ],
                "description": "Request of SaveUnitManagerUnits"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveUnitManagerUnitsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveUnitManagerUnitsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveUnitManagerUnitsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/GetHospitalAdminList": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get Hospital Admin List, sorting fields supported: \"UserLastName\", \"UserEmail\", \"UserPhone\", \"ProgramCategoryName\", \"UserLastSignin\", \"AdminIsBillingContact\", \"AdminIsSuperUser\", \"UserActive\"",
        "parameters": [
          {
            "name": "FacilityID",
            "in": "query",
            "description": "Facility ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Status, All: null or -1, Active: 1, Inactive: 0",
            "schema": {
              "maximum": 1,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalAdminListModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalAdminListModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalAdminListModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/GetAdminAdditionalReceiver": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get Hospital Admin Additional Receiver",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/SaveHospitalAdminProfile": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Save Hospital Admin Profile",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveHospitalAdminProfileRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveHospitalAdminProfileRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveHospitalAdminProfileRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveHospitalAdminProfileResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveHospitalAdminProfileResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveHospitalAdminProfileResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/DeleteAdmin": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Delete Admin",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteAdminRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteAdminRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteAdminRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAdminResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAdminResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAdminResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/GetUnitManagerList": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get Unit Manager List, sorting fields supported: \"AdminID\",\"Username\",\"FirstName\",\"LastName\",\"Phone\",\"PhoneExt\",\"Email\",\"Facility\",\"Unit\",\"Active\",\"ReceiverNotification\"",
        "parameters": [
          {
            "name": "FacilityID",
            "in": "query",
            "description": "Facility ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitID",
            "in": "query",
            "description": "Unit ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UserLastName",
            "in": "query",
            "description": "User Last Name filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Status, All: null or -1, Active: 1, Inactive: 0",
            "schema": {
              "maximum": 1,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUnitManagerListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUnitManagerListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUnitManagerListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/SaveProgramUserPermissions": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Save Program User Permissions",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveProgramUserPermissionsRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveProgramUserPermissionsRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveProgramUserPermissionsRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveProgramUserPermissionsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveProgramUserPermissionsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveProgramUserPermissionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/GetProgramPermissions": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get Program User Permission",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/GetAdminFacilities": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get Admin Facilities",
        "parameters": [
          {
            "name": "AdminID",
            "in": "query",
            "description": "Admin ID",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/SaveAdditionalMessageReceivers": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Save Additional Message Receivers",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveAdminMessageReceiversRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveAdminMessageReceiversRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveAdminMessageReceiversRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAdminMessageReceiversResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAdminMessageReceiversResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAdminMessageReceiversResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/GetAdminFacilitiesAndUnitsByAdminID": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get Admin Facility/Unit List",
        "parameters": [
          {
            "name": "AdminID",
            "in": "query",
            "description": "Admin ID",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityID",
            "in": "query",
            "description": "Facility ID",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAdminFacilitiesAndUnitsByAdminIDResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAdminFacilitiesAndUnitsByAdminIDResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAdminFacilitiesAndUnitsByAdminIDResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/SaveAdminFacilities": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Save Admin Facilities",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveAdminFacilitiesRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveAdminFacilitiesRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveAdminFacilitiesRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAdminFacilitiesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAdminFacilitiesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAdminFacilitiesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/SearchAdmins": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Search Admin\r\nSupported sort field names:  \"First Name\", \"Last Name\", \"Phone\", \"Email\", \"Program Category\", \"Last Signin\", \"Is Super User\", \"Is Billing Contract\"\r\nsort direction: 0 - Ascending, 1 - Descending",
        "parameters": [
          {
            "name": "FirstName",
            "in": "query",
            "description": "First Name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LastName",
            "in": "query",
            "description": "Last Name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SearchAdminsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchAdminsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchAdminsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/GetNurseSummary": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get Nurse Summary",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetNurseSummaryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNurseSummaryResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNurseSummaryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/GetNurses": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get Internal Professional List\r\nSupported sort field names:  \"User ID\",\"First Name\", \"Last Name\", \"Phone\", \"Email\", \"Position Type Name\", \"Last Signin\", \"Status\", \"Job Code\"",
        "parameters": [
          {
            "name": "Status",
            "in": "query",
            "description": "Status : A = Approved; I = Inactive; D = Denied; P = Pending",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SearchFirstName",
            "in": "query",
            "description": "Firstname for Searching",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SearchLastName",
            "in": "query",
            "description": "Lastname for Searching",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetNursesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNursesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNursesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/GetAdminDropDownList": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get Hospital Admin DropDwon List.",
        "description": "Case 1: Create/Edit Contract Assignment\r\n\r\n/HospitalAdmin/ContractAssignments/CreateContractAssignment.aspx\r\n\r\n/HospitalAdmin/Reconciliation/EditContractAssignment.aspx\r\n\r\nIf system has the setting CONTRACT_ACCOUNT_UNIT_MANAGER(166), set ByUnitManager to true.\r\n```\r\nByUnitManager = true;\r\n```\r\nOtherwise set it to false.\r\n```\r\nByUnitManager = false;\r\n```\r\nCase 2: Edit Requisition\r\n\r\nCreate Requisition - /HospitalAdmin/Requisition/EditRequisition.aspx\r\n\r\nIf system has the setting CONTRACT_ACCOUNT_MANAGER(159), set ByUnitManager to true.\r\n```\r\nByUnitManager = true;\r\n```\r\nOtherwise set it to false.\r\n```\r\nByUnitManager = false;\r\n```\r\nCase 3: For TNAA\r\n\r\nCredential Expiration and Verification Reports - /Registry/Reports/NurseCredentialReport.aspx\r\n\r\nSystemId is required.\r\n```\r\nSystemId = 152;\r\n```",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAdminDropDownListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAdminDropDownListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAdminDropDownListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/GetRequisitionApproverOptions": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get Requisition Next Level Approver Options",
        "parameters": [
          {
            "name": "RequisitionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseModelOfSelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseModelOfSelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseModelOfSelectableItems"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/GetAdminDropDownListByPerformanceEval": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get Hospital Admin DropDwon List By Performance Evaluation",
        "description": "Case 1: For JHU\r\n\r\nCreate Shift - /HospitalAdmin/Shifts/CreateShift.aspx\r\n\r\nEdit Shift - /HospitalAdmin/Reconciliation/EditShift.aspx\r\n\r\nPRN Performance Eval Request - /HospitalAdmin/Shifts/ViewShift.aspx\r\n\r\nPRN Performance Eval Request - /HospitalAdmin/Nurses/ViewNurse.aspx\r\n\r\nPRN Performance Eval Request - /HospitalAdmin/Nurses/ViewChosenNurse.aspx\r\n```\r\nByUnitManager = true;\r\nFacilityId = 317;\r\nUnitId = 3367;\r\nReceivePerformanceEvaluationNotification = true;\r\n```\r\nCase 2: System - VMS_UMMS(433)\r\n\r\nPerformance Evaluation Request - /HospitalAdmin/Reconciliation/EditContractAssignment.aspx\r\n```\r\nByUnitManager = false;\r\n```\r\nCase 3: System - VMS_UMMS(433)\r\n\r\nUSC Manager Eval Request - /HospitalAdmin/Reconciliation/EditContractAssignment.aspx\r\n```\r\nByUnitManager = false;\r\nReceivePerformanceEvaluationCompleteNotification = true;\r\n```",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ReceivePerformanceEvaluationNotification",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ReceivePerformanceEvaluationCompleteNotification",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAdminDropDownListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAdminDropDownListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAdminDropDownListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/GetSubRoles": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get id-name pairs to populate Roles when adding/editing admin profile",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agencies/GetAgencyList": {
      "get": {
        "tags": [
          "Agencies"
        ],
        "summary": "Get List of agency.",
        "parameters": [
          {
            "name": "ActiveOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ApprovedOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SystemId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "RegistryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProgramId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agencies/GetAgenciesByProgramIds": {
      "post": {
        "tags": [
          "Agencies"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetAgenciesByProgramsRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetAgenciesByProgramsRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetAgenciesByProgramsRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IdNamePairs"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdNamePairs"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdNamePairs"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/Agencies/UpdateAgencyIntegrationKey": {
      "post": {
        "tags": [
          "Registry Agencies"
        ],
        "summary": "Update Agency Integration Key",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAgencyIntegrationKeyRequest"
                  }
                ],
                "description": "Request of Update Agency Integration Key."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAgencyIntegrationKeyRequest"
                  }
                ],
                "description": "Request of Update Agency Integration Key."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAgencyIntegrationKeyRequest"
                  }
                ],
                "description": "Request of Update Agency Integration Key."
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/Agencies/GetAgencyContacts": {
      "get": {
        "tags": [
          "Registry Agencies"
        ],
        "summary": "Get Agency Contacts. Supported fields for sorting : \"First Name\",\"Last Name\" ,\"Phone\",\"Phone Extension\",\"Fax\",\"Email\",\"Is Billing Contact\",\"Receive Credential Messages\",\"Receive Shift Messages\",\"Time Rejection Messages\",\"Is Admin\"",
        "parameters": [
          {
            "name": "AgencyId",
            "in": "query",
            "description": "Agency ID",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FirstName",
            "in": "query",
            "description": "First Name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LastName",
            "in": "query",
            "description": "Last Name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UserStatus",
            "in": "query",
            "description": "Active=1, Inactive=0, All=-1",
            "schema": {
              "maximum": 1,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyContactsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyContactsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyContactsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Agencies/GetAgencyList": {
      "get": {
        "tags": [
          "Hospital Agencies"
        ],
        "summary": "Get List of agency.\r\nSupported sort field names:  \"Agency\", \"Address\",\r\nsort direction: 0 - Ascending, 1 - Descending",
        "parameters": [
          {
            "name": "Status",
            "in": "query",
            "description": "Status, including Approved(A), Pending(P), Denied(D), Inactive(I), Search(S), IDSearch(IDS), All(L)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AgencyName",
            "in": "query",
            "description": "AgencyName or part of AgencyName",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Agencies/ExportAgencies": {
      "get": {
        "tags": [
          "Hospital Agencies"
        ],
        "summary": "Download agencies",
        "parameters": [
          {
            "name": "Status",
            "in": "query",
            "description": "Status, including Approved(A), Pending(P), Denied(D), Inactive(I), Search(S), IDSearch(IDS), All(L)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Agencies/GetProgramSettingsByFacility": {
      "get": {
        "tags": [
          "Hospital Agencies"
        ],
        "summary": "Get List of agency.\r\nSupported sort field names:  \"Agency\", \"Address\",\r\nsort direction: 0 - Ascending, 1 - Descending",
        "parameters": [
          {
            "name": "FacilityId",
            "in": "query",
            "description": "FacilityId",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProgramId",
            "in": "query",
            "description": "ProgramId",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SelectedOnly",
            "in": "query",
            "description": "SelectedOnly, when it is true return selected agencies for requesting facility and program only, when it is false also include all the agency options",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Agencies/GetFacilitiesByAgencyAndProgram": {
      "get": {
        "tags": [
          "Hospital Agencies"
        ],
        "summary": "Get List of Facility by agency and program.",
        "parameters": [
          {
            "name": "AgencyId",
            "in": "query",
            "description": "AgencyId",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProgramId",
            "in": "query",
            "description": "ProgramId",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SelectedOnly",
            "in": "query",
            "description": "SelectedOnly, when it is true return selected facilities for requesting agency and program only, when it is false also include all the facility options",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Agencies/GetProgramSettingsByAgency": {
      "get": {
        "tags": [
          "Hospital Agencies"
        ],
        "summary": "Get List of Facility and Program by agency.",
        "parameters": [
          {
            "name": "AgencyId",
            "in": "query",
            "description": "AgencyId",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetProgramSettingsByAgencyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProgramSettingsByAgencyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProgramSettingsByAgencyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Agencies/SaveProgramSettings": {
      "post": {
        "tags": [
          "Hospital Agencies"
        ],
        "summary": "Save Agency Program Settings",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveProgramSettingsRequest"
                  }
                ],
                "description": "Request of SaveProgramSettings"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveProgramSettingsRequest"
                  }
                ],
                "description": "Request of SaveProgramSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveProgramSettingsRequest"
                  }
                ],
                "description": "Request of SaveProgramSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveProgramSettingsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveProgramSettingsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveProgramSettingsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Agencies/UpdateAgencyStatus": {
      "post": {
        "tags": [
          "Hospital Agencies"
        ],
        "summary": "Only allow SUPER_USER to Update Status",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAgencyStatusRequest"
                  }
                ],
                "description": "Request of update Agency Status."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAgencyStatusRequest"
                  }
                ],
                "description": "Request of update Agency Status."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAgencyStatusRequest"
                  }
                ],
                "description": "Request of update Agency Status."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAgencyStatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAgencyStatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAgencyStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAgencyStatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAgencyStatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAgencyStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Agencies/GetAgenciesWithAlignedProgramAgencyFacilityCount": {
      "get": {
        "tags": [
          "Hospital Agencies"
        ],
        "parameters": [
          {
            "name": "ProgramId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgenciesWithAlignedProgramAgencyFacilityCountResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgenciesWithAlignedProgramAgencyFacilityCountResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgenciesWithAlignedProgramAgencyFacilityCountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgenciesWithAlignedProgramAgencyFacilityCountResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgenciesWithAlignedProgramAgencyFacilityCountResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgenciesWithAlignedProgramAgencyFacilityCountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Agencies/GetAgencyDetail": {
      "get": {
        "tags": [
          "Hospital Agencies"
        ],
        "summary": "Get Agency Profile.",
        "parameters": [
          {
            "name": "AgencyID",
            "in": "query",
            "description": "Agency ID",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyProfileResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyProfileResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyProfileResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Agencies/GetAgencyContacts": {
      "get": {
        "tags": [
          "Hospital Agencies"
        ],
        "summary": "Get Agency Contacts. Supported fields for sorting : \"Contact Last Name\" ,\"Contact Phone\",\"Category\",\"Email\",\"Is Billing Contact\",\"Is Staffing Contact\",\"Is Admin\"",
        "parameters": [
          {
            "name": "AgencyID",
            "in": "query",
            "description": "Agency ID",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FirstName",
            "in": "query",
            "description": "First Name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LastName",
            "in": "query",
            "description": "Last Name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyContactsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyContactsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyContactsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Agencies/GetProfessionalList": {
      "get": {
        "tags": [
          "Hospital Agencies"
        ],
        "summary": "Get Professional List",
        "parameters": [
          {
            "name": "AgencyID",
            "in": "query",
            "description": "Agency ID",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityID",
            "in": "query",
            "description": "Facility ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PositionTypeID",
            "in": "query",
            "description": "Position Type ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CareTypeIDs",
            "in": "query",
            "description": "CareType IDs",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FirstName",
            "in": "query",
            "description": "First Name",
            "schema": {
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "LastName",
            "in": "query",
            "description": "Last Name",
            "schema": {
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfessionalListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfessionalListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfessionalListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Agencies/GetBillableRates": {
      "get": {
        "tags": [
          "Hospital Agencies"
        ],
        "summary": "Get Billable Rates",
        "parameters": [
          {
            "name": "AgencyID",
            "in": "query",
            "description": "Agency ID",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityID",
            "in": "query",
            "description": "Facility ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Status; True = Active, False = Inactive, null = All",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetBillableRatesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBillableRatesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBillableRatesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Agencies/GetAllowAccessPositionTypes": {
      "get": {
        "tags": [
          "Hospital Agencies"
        ],
        "summary": "Get Allow Access Position Types",
        "parameters": [
          {
            "name": "AgencyId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ActiveOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllowAccessPositionTypesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllowAccessPositionTypesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllowAccessPositionTypesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllowAccessPositionTypesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllowAccessPositionTypesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllowAccessPositionTypesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Agencies/SaveAllowAccessPositionTypes": {
      "post": {
        "tags": [
          "Hospital Agencies"
        ],
        "summary": "Save Allow Access Position Types",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveAllowAccessPositionTypesRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveAllowAccessPositionTypesRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveAllowAccessPositionTypesRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAllowAccessPositionTypesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAllowAccessPositionTypesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAllowAccessPositionTypesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAllowAccessPositionTypesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAllowAccessPositionTypesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAllowAccessPositionTypesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Agencies/DeleteAllowAccessPositionType": {
      "post": {
        "tags": [
          "Hospital Agencies"
        ],
        "summary": "Delete Allow Access Position Type",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteAllowAccessPositionTypeRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteAllowAccessPositionTypeRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteAllowAccessPositionTypeRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAllowAccessPositionTypeResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAllowAccessPositionTypeResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAllowAccessPositionTypeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAllowAccessPositionTypeResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAllowAccessPositionTypeResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAllowAccessPositionTypeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/GetProfile": {
      "get": {
        "tags": [
          "Agency"
        ],
        "summary": "Get the profile of the current logged-in Agency User.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyProfileModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyProfileModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyProfileModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/GetBillingInfo": {
      "get": {
        "tags": [
          "Agency"
        ],
        "summary": "Get the billing info of the current logged-in Agency User.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyBillingInfoModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyBillingInfoModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyBillingInfoModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/GetContacts": {
      "post": {
        "tags": [
          "Agency"
        ],
        "summary": "Get other contacts of the current logged-in Agency User.",
        "description": "The user status filter is for registry version only. \r\n\r\n\r\nUser Status: Active=1, Inactive=0, All=-1\r\n\r\nSample request for Registry Version:\r\n            \r\n    POST ​/api​/Agency​​/GetContacts\r\n    {\r\n       \"userStatus\": 1,\r\n       \"paging\": {\r\n          \"pageSize\": 20,\r\n          \"pageIndex\": 0\r\n       }\r\n    }\r\n            \r\nSample request for Non-Registry Version:\r\n            \r\n    POST ​/api​/Agency​​/GetContacts\r\n    {\r\n       \"paging\": {\r\n          \"pageSize\": 20,\r\n          \"pageIndex\": 0\r\n       }\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetAgencyContactListParam"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetAgencyContactListParam"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetAgencyContactListParam"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyContactsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyContactsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyContactsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/GetContactList": {
      "get": {
        "tags": [
          "Agency"
        ],
        "summary": "Get Agency Contact List to populate a dropdown",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/ExportAgencyContactAsExcel": {
      "get": {
        "tags": [
          "Agency"
        ],
        "summary": "Download agency contacts",
        "parameters": [
          {
            "name": "UserStatus",
            "in": "query",
            "description": "Registry: Active=1, Inactive=0, All=-1, Non-registry: not applied, null or any integer can be passed",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/GetContactDetail": {
      "get": {
        "tags": [
          "Agency"
        ],
        "summary": "Get agency contact details",
        "parameters": [
          {
            "name": "AgencyContactId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetContactDetailModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContactDetailModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContactDetailModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetContactDetailModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContactDetailModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContactDetailModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/CreateContact": {
      "post": {
        "tags": [
          "Agency"
        ],
        "summary": "Create agency contact",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateContactParam"
                  }
                ],
                "description": "Request for CreateContact"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateContactParam"
                  }
                ],
                "description": "Request for CreateContact"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateContactParam"
                  }
                ],
                "description": "Request for CreateContact"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreateContactModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateContactModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateContactModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/UpdateContact": {
      "post": {
        "tags": [
          "Agency"
        ],
        "summary": "Update agency contact",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateContactParam"
                  }
                ],
                "description": "Request for UpdateContact"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateContactParam"
                  }
                ],
                "description": "Request for UpdateContact"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateContactParam"
                  }
                ],
                "description": "Request for UpdateContact"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateContactModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateContactModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateContactModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/DeleteContacts": {
      "post": {
        "tags": [
          "Agency"
        ],
        "summary": "Delete agency contact(s) - works only for non-registry version, Delete button should not show on registry version",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteContactsParam"
                  }
                ],
                "description": "Request for DeleteContacts"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteContactsParam"
                  }
                ],
                "description": "Request for DeleteContacts"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteContactsParam"
                  }
                ],
                "description": "Request for DeleteContacts"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteContactsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteContactsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteContactsModel"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteContactsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteContactsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteContactsModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/UpdateProfile": {
      "post": {
        "tags": [
          "Agency"
        ],
        "summary": "Update the profile of the current logged-in Agency User.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAgencyProfileParam"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAgencyProfileParam"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAgencyProfileParam"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Agency/UpdateBillingInfo": {
      "post": {
        "tags": [
          "Agency"
        ],
        "summary": "Update the billing info of the current logged-in Agency User.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateBillingInfoParam"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateBillingInfoParam"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateBillingInfoParam"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Agency/GetAgencyContactByName": {
      "post": {
        "tags": [
          "Agency"
        ],
        "summary": "Get Agency Contact List for Quick Search",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetAgencyContactByNameParam"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetAgencyContactByNameParam"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetAgencyContactByNameParam"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyContactsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyContactsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyContactsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/GetRegistryAgencyComments": {
      "post": {
        "tags": [
          "Agency"
        ],
        "summary": "Get registry agency comment list with pagination, supported sort field names: \"LastName\", \"PostDate\", \"Subject\",\r\nsort direction: 0 - Ascending, 1 - Descending",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetRegistryAgencyCommentsRequest"
                  }
                ],
                "description": "Request for GetRegistryAgencyComments"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetRegistryAgencyCommentsRequest"
                  }
                ],
                "description": "Request for GetRegistryAgencyComments"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetRegistryAgencyCommentsRequest"
                  }
                ],
                "description": "Request for GetRegistryAgencyComments"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryAgencyCommentsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryAgencyCommentsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryAgencyCommentsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/SaveRegistryAgencyComment": {
      "post": {
        "tags": [
          "Agency"
        ],
        "summary": "Save registry agency comment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveRegistryAgencyCommentRequest"
                  }
                ],
                "description": "Request of SaveRegistryAgencyComment"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveRegistryAgencyCommentRequest"
                  }
                ],
                "description": "Request of SaveRegistryAgencyComment"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveRegistryAgencyCommentRequest"
                  }
                ],
                "description": "Request of SaveRegistryAgencyComment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveRegistryAgencyCommentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveRegistryAgencyCommentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveRegistryAgencyCommentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/AppVersion/GetAppVersions": {
      "get": {
        "tags": [
          "AppVersion"
        ],
        "summary": "Get all app versions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAppVersionsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAppVersionsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAppVersionsModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/AppVersion/GetAppVersionByUrl": {
      "get": {
        "tags": [
          "AppVersion"
        ],
        "summary": "Get app version by url",
        "parameters": [
          {
            "name": "Url",
            "in": "query",
            "description": "No protocal, no slash at the end, for example 'b4h.com'",
            "required": true,
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetByUrlModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetByUrlModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetByUrlModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/AppVersion/GetRetractReasons": {
      "get": {
        "tags": [
          "AppVersion"
        ],
        "summary": "Get Retract Reasons by App Version Id",
        "parameters": [
          {
            "name": "IsContract",
            "in": "query",
            "description": "Get retract reasons for contract when IsContract is true, otherwise get retract reasons for shift.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/AppVersion/GetDeclineReasons": {
      "get": {
        "tags": [
          "AppVersion"
        ],
        "summary": "Get Decline Reasons by App Version Id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/AppVersion/GetContractAssignmentTypes": {
      "get": {
        "tags": [
          "AppVersion"
        ],
        "summary": "Get Contract Assignment Types by App Version Id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/AppVersion/GetEducations": {
      "get": {
        "tags": [
          "AppVersion"
        ],
        "summary": "Get Educations by app version id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/AppVersion/GetCancelShiftReasons": {
      "get": {
        "tags": [
          "AppVersion"
        ],
        "summary": "Get cancel shift reasons by App Version Id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/AppVersion/GetNeedStatusDropdown": {
      "get": {
        "tags": [
          "AppVersion"
        ],
        "summary": "Get Need Status Dropdown",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/AppVersion/SaveAppVersionsSettings": {
      "post": {
        "tags": [
          "AppVersion"
        ],
        "summary": "Save AppVersion Custom Configs",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AppVersionCustomConfigRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AppVersionCustomConfigRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AppVersionCustomConfigRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/AppVersionCustomConfig/GetAlignedCustomConfigs": {
      "get": {
        "tags": [
          "AppVersionCustomConfig"
        ],
        "summary": "Get AppVersion Aligned Custom Configs",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetCustomConfigAlignmentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCustomConfigAlignmentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCustomConfigAlignmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetCustomConfigAlignmentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCustomConfigAlignmentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCustomConfigAlignmentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/GetSignature": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Signature is required to send along with requests to all the other web APIs, with header key set to 'HASHSECRET'. \r\nBy doing this we can make sure requests are sent from valid callers. \r\nThis web API is only for test, no real business scenarios need to call it. \r\nWhen you play with some tools such as SwaggerUI or Postman, call this web API first and copy the signature string from the response,\r\nand put it as the value in the request header 'HASHSECRET' of your subsequence web API calls.",
        "parameters": [
          {
            "name": "appid",
            "in": "query",
            "description": "AppId is part of the signature, please ask web API provider for it, or find it with key \"AppId\" in B4Health.Api\\appsettings{.environment}.json",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "Timestamp is part of the signature, please use current date time, 13 bits of integer, for example 1686708665908",
            "required": true,
            "schema": {
              "maxLength": 13,
              "minLength": 13,
              "pattern": "^\\d{13}$",
              "type": "string"
            }
          },
          {
            "name": "nonce",
            "in": "query",
            "description": "Nonce is part of the signature, please use a random string with minimum length of 32 bits",
            "required": true,
            "schema": {
              "minLength": 32,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSignatureModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSignatureModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSignatureModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/GetAccessToken": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Call this when you are trying to sign an end user in, after you get AccessToken put it in request header with header key set to 'Authorization', and value set to 'Bearer: YourKey'",
        "parameters": [
          {
            "name": "Username",
            "in": "query",
            "required": true,
            "schema": {
              "maxLength": 40,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "Password",
            "in": "query",
            "description": "The maximum length of password allowed on UI is 25, in the web API it is 50 since it is encrypted",
            "required": true,
            "schema": {
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "AppVersionId",
            "in": "query",
            "description": "The App Version user belongs to, pass null if user does not belong to any app version",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "LoginType",
            "in": "query",
            "description": "1. No need to pass it by default.\r\n2. api/Auth/GetAccessToken will return true as response.ChooseMode when user is a hospital admin and at the same time a nurse, \r\nthis case user needs to choose which role to sign in, pass Admin = 2 to sign in as hospital admin, or pass Nurse = 3 to sign in as nurse.",
            "schema": {
              "maximum": 3,
              "minimum": 1,
              "allOf": [
                {
                  "$ref": "#/components/schemas/Constants_LoginTypes"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccessTokenModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccessTokenModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccessTokenModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/LogInAs": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Call this when registry/corporate admin are trying to sign in as another user, the response will be the same as GetAccessToken",
        "parameters": [
          {
            "name": "UserId",
            "in": "query",
            "description": "UserId of the user that registry/corporate admin tries to sign in as",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AppVersionId",
            "in": "query",
            "description": "The App Version user belongs to, pass null if user does not belong to any app version",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "LoginType",
            "in": "query",
            "description": "When proxy log in, pass Admin = 2, Nurse = 3, Agency = 4, AgencyContact = 5 to make it clear which kind of user to sign in.",
            "required": true,
            "schema": {
              "maximum": 5,
              "minimum": 2,
              "allOf": [
                {
                  "$ref": "#/components/schemas/Constants_LoginTypes"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccessTokenModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccessTokenModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccessTokenModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/ExpireAccessToken": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Call this when user signs out, to clear access token cached on server side.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/RenewAccessToken": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Call this when you are trying to renew access token of an end user, it creates new access token string as well as new expiration date time.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RenewAccessTokenModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RenewAccessTokenModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RenewAccessTokenModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/GetSomething": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "For test only, no business scenario needs to call this web API",
        "parameters": [
          {
            "name": "UserId",
            "in": "query",
            "description": "UserId used to get something",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FromDb",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/AcquireToken": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Acquire an access token based on the specified token key.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AcquireTokenRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AcquireTokenRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AcquireTokenRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccessTokenModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccessTokenModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccessTokenModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/AgencyNurse/Availability/GetAgencyNurseAvailabilityList": {
      "get": {
        "tags": [
          "Availability"
        ],
        "summary": "Get Availability List for Agency Nurse",
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "description": "StartDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "EndDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "AvailabilityType",
            "in": "query",
            "description": "AvailabilityType, 1 for Event, 2 for Shift, null for both",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Constants_AvailabilityType"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyNurseAvailabilityListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyNurseAvailabilityListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyNurseAvailabilityListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/AgencyNurse/Availability/ExportAgencyNurseAvailabilityList": {
      "get": {
        "tags": [
          "Availability"
        ],
        "summary": "Export Availability List, in the format of Excel, XML, or iCalendar",
        "parameters": [
          {
            "name": "Format",
            "in": "query",
            "description": "Export format, including Excel(1), XML(2), iCalendar(3)",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Constants_EventExportOption"
                }
              ]
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "StartDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "EndDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "AvailabilityType",
            "in": "query",
            "description": "AvailabilityType, 1 for Event, 2 for Shift, null for both",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Constants_AvailabilityType"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Availability/GetAvailabilityList": {
      "get": {
        "tags": [
          "Availability"
        ],
        "summary": "Get Availability List",
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "description": "StartDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "EndDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ProfessionalId",
            "in": "query",
            "description": "ProfessionalId",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAvailabilityListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAvailabilityListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAvailabilityListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Availability/GetAvailabilityListByRepeatId": {
      "get": {
        "tags": [
          "Availability"
        ],
        "summary": "Get Availability List by RepeatId",
        "parameters": [
          {
            "name": "RepeatId",
            "in": "query",
            "description": "RepeatId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAvailabilityListByRepeatIdResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAvailabilityListByRepeatIdResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAvailabilityListByRepeatIdResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Availability/GetAvailabilityDetail": {
      "get": {
        "tags": [
          "Availability"
        ],
        "summary": "Get Availability Detail",
        "parameters": [
          {
            "name": "EventId",
            "in": "query",
            "description": "EventId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAvailabilityDetailResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAvailabilityDetailResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAvailabilityDetailResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Availability/DeleteAvailability": {
      "post": {
        "tags": [
          "Availability"
        ],
        "summary": "Delete Availability",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteAvailabilityRequest"
                  }
                ],
                "description": "Request of DeleteAvailability"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteAvailabilityRequest"
                  }
                ],
                "description": "Request of DeleteAvailability"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteAvailabilityRequest"
                  }
                ],
                "description": "Request of DeleteAvailability"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAvailabilityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAvailabilityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAvailabilityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Availability/SaveAvailability": {
      "post": {
        "tags": [
          "Availability"
        ],
        "summary": "Save Availability",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveAvailabilityRequest"
                  }
                ],
                "description": "Request of SaveAvailability"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveAvailabilityRequest"
                  }
                ],
                "description": "Request of SaveAvailability"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveAvailabilityRequest"
                  }
                ],
                "description": "Request of SaveAvailability"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAvailabilityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAvailabilityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAvailabilityResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAvailabilityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAvailabilityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAvailabilityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Availability/ExportAvailabilityList": {
      "get": {
        "tags": [
          "Availability"
        ],
        "summary": "Export Availability List, in the format of Excel, XML, or iCalendar",
        "parameters": [
          {
            "name": "Format",
            "in": "query",
            "description": "Export format, including Excel(1), XML(2), iCalendar(3)",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Constants_EventExportOption"
                }
              ]
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "StartDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "EndDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ProfessionalId",
            "in": "query",
            "description": "ProfessionalId",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/BasicData/GetFacilitiesBySystemId": {
      "get": {
        "tags": [
          "BasicData"
        ],
        "summary": "Get Facilities by System Id",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "description": "Represents the unique identifier for a system.\r\nThis property is required and must be a positive integer greater than or equal to 1.",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Active",
            "in": "query",
            "description": "Represents the active status of the facility.\r\nThis property indicates whether the facility is active or inactive.\r\nSet the force value to NULL if you want to specify both.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/BasicData/GetUnitsByFacilityId": {
      "get": {
        "tags": [
          "BasicData"
        ],
        "summary": "Get Units by Facility Id",
        "parameters": [
          {
            "name": "FacilityId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/BasicData/GetPositionsByUnitId": {
      "get": {
        "tags": [
          "BasicData"
        ],
        "summary": "Get Positions by Unit Id",
        "parameters": [
          {
            "name": "UnitId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ReconciliationView",
            "in": "query",
            "description": "Pass false for now",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ContractId",
            "in": "query",
            "description": "Pass contractId only on agency nurse create shift screen",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/BasicData/GetWageCodesBySystemId": {
      "get": {
        "tags": [
          "BasicData"
        ],
        "summary": "Get WageCodes by System Id",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "RestrictedViewOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetWageCodesBySystemIdModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWageCodesBySystemIdModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWageCodesBySystemIdModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/BasicData/GetCountries": {
      "get": {
        "tags": [
          "BasicData"
        ],
        "summary": "Get All Countries",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LocationReponseModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationReponseModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationReponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/BasicData/GetStatebyCountry": {
      "get": {
        "tags": [
          "BasicData"
        ],
        "summary": "Get All States by Country",
        "parameters": [
          {
            "name": "countryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LocationReponseModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationReponseModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationReponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/BasicData/GetRegions": {
      "get": {
        "tags": [
          "BasicData"
        ],
        "summary": "Get Regions to populate a dropdown",
        "parameters": [
          {
            "name": "AlliedRegionsOnly",
            "in": "query",
            "description": "AlliedRegionsOnly",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/BasicData/GetUnfilledShiftReasons": {
      "get": {
        "tags": [
          "BasicData"
        ],
        "summary": "Get UnfilledShiftReasons to populate a dropdown",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Cache/GetExecutionTime": {
      "get": {
        "tags": [
          "Cache"
        ],
        "summary": "Get Milliseconds that SetScanAsync being executed certain number of times - SetScanAsync returns one app version out of 30 records",
        "parameters": [
          {
            "name": "KeyName",
            "in": "query",
            "description": "Redis Key, needs to be exactly the same as one of the const strings in B4Health.Common.RedisKeys.KeyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "KeyPlaceholder1",
            "in": "query",
            "description": "Value to fill in first placeholder in KeyName(if there is one), leave it empty if there is no placeholder",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "KeyPlaceholder2",
            "in": "query",
            "description": "Value to fill in second placeholder in KeyName(if there is one), leave it empty if there is no placeholder",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pattern",
            "in": "query",
            "description": "Pattern, needs to be exactly the same as one of the const strings in B4Health.Common.RedisKeys.Pattern",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Value1",
            "in": "query",
            "description": "Value to fill in first placeholder in Pattern(if there is one), can be left empty only when Pattern is '*'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Value2",
            "in": "query",
            "description": "Value to fill in second placeholder in Pattern(if there is one), leave it empty if there is no placeholder",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NumberOfTimes",
            "in": "query",
            "description": "Number of times to get result from Redis",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      }
    },
    "/api/Cache/GetKeys": {
      "get": {
        "tags": [
          "Cache"
        ],
        "summary": "Get Redis Keys",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Cache/ClearByKey": {
      "post": {
        "tags": [
          "Cache"
        ],
        "summary": "Clear cache by key",
        "parameters": [
          {
            "name": "Key",
            "in": "query",
            "description": "Redis Key, case sensitive, when redis key is composed of multiple parts - contains a colon, it is the part before the first colon, or it is exactly the same as the const string in B4Health.Common.RedisKeys.KeyName.\r\nFor example if the redis key is 'Credential', then Key should be 'Credential', if redis key is 'Facility:123', then key should by 'Facility'",
            "required": true,
            "schema": {
              "minLength": 4,
              "pattern": "^[A-Za-z]+$",
              "type": "string"
            }
          },
          {
            "name": "KeyPart0",
            "in": "query",
            "description": "KeyPart0, case sensitive, is the first number part of a redis key. For example if redis key is 'Credential', KeyPart0 should be null or empty, \r\nwhen redis key is 'Facility:123', KeyPart0 should be '123' or '*' - 123 to clear 'Facility:123', '*' to clear all the cache where key starts with 'Facility:',",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "KeyPart1",
            "in": "query",
            "description": "KeyPart1, case sensitive, is the second number part of a redis key. For example if redis key is 'Credential' or 'Facility:123', KeyPart1 should be null or empty, \r\nwhen redis key is 'Holday:123:555', KeyPart0 should be '123' or '*', KeyPart1 should be '555' or '*'",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClearByKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClearByKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClearByKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Cache/GetSizes": {
      "get": {
        "tags": [
          "Cache"
        ],
        "summary": "Get Redis Key Sizes",
        "parameters": [
          {
            "name": "Key",
            "in": "query",
            "description": "Redis Key, case sensitive, when redis key is composed of multiple parts - contains a colon, it is the part before the first colon, or it is exactly the same as the const string in B4Health.Common.RedisKeys.KeyName.\r\nFor example if the redis key is 'Credential', then Key should be 'Credential', if redis key is 'Facility:123', then key should by 'Facility'",
            "schema": {
              "minLength": 4,
              "pattern": "^[A-Za-z]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSizesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSizesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSizesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/CareType/GetCareTypes": {
      "get": {
        "tags": [
          "CareType"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CareTypeListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CareTypeListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CareTypeListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/CareType/GetCareTypesByPositionTypeId": {
      "get": {
        "tags": [
          "CareType"
        ],
        "summary": "Get Care Type List by Position Type Id.",
        "parameters": [
          {
            "name": "PositionTypeId",
            "in": "query",
            "description": "PositionTypeId is required",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitId",
            "in": "query",
            "description": "Gets or sets the unit Id depending on the master custom settings.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IdNamePairs"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdNamePairs"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdNamePairs"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Contract/GetContractList": {
      "get": {
        "tags": [
          "Contract"
        ],
        "summary": "Get Contract List to show in Contract Assignment Dropdown",
        "parameters": [
          {
            "name": "StartDateTime",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "EndDateTime",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetContractListModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContractListModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContractListModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Contract/GetContractDetails": {
      "get": {
        "tags": [
          "Contract"
        ],
        "summary": "Get Contract Details",
        "parameters": [
          {
            "name": "ContractId",
            "in": "query",
            "description": "Contract Assignment ID",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContractDetailsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractDetailsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractDetailsModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Contract/GetContractShifts": {
      "get": {
        "tags": [
          "Contract"
        ],
        "summary": "Get Contract Shifts",
        "parameters": [
          {
            "name": "ContractId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetContractShiftsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContractShiftsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContractShiftsModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Contract/GetNurseSkillsMet": {
      "get": {
        "tags": [
          "Contract"
        ],
        "summary": "Get nurse skills met required by a shift",
        "parameters": [
          {
            "name": "ContractId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "NurseId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetNurseSkillsMetModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNurseSkillsMetModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNurseSkillsMetModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Contract/GetRequiredCredentials": {
      "get": {
        "tags": [
          "Contract"
        ],
        "summary": "Get contract required credentials.",
        "parameters": [
          {
            "name": "ContractId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetContractRequiredCredentialsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContractRequiredCredentialsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContractRequiredCredentialsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetContractRequiredCredentialsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContractRequiredCredentialsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContractRequiredCredentialsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Contracts/GetContractSummary": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "summary": "Get Contract Summary",
        "parameters": [
          {
            "name": "FacilityID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetContractSummaryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContractSummaryResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContractSummaryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Contracts/GetScheduledContracts": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "Get scheduled contracts for submissions.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetScheduledContractsRequest"
                  }
                ],
                "description": "Supported sort field names: \"Position Type Name\", \"Program Name\", \"Facility Name\", \"Unit Name\", \"Contract Start Date\", \"Contract End Date\", \"Contract ID\""
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetScheduledContractsRequest"
                  }
                ],
                "description": "Supported sort field names: \"Position Type Name\", \"Program Name\", \"Facility Name\", \"Unit Name\", \"Contract Start Date\", \"Contract End Date\", \"Contract ID\""
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetScheduledContractsRequest"
                  }
                ],
                "description": "Supported sort field names: \"Position Type Name\", \"Program Name\", \"Facility Name\", \"Unit Name\", \"Contract Start Date\", \"Contract End Date\", \"Contract ID\""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetScheduledContractsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetScheduledContractsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetScheduledContractsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetScheduledContractsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetScheduledContractsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetScheduledContractsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Contracts/GetOpenContracts": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "Get open contracts for hospital users, supported sorting fields  ContractID, PositionType, Program, Facility, Unit, BidCount, StartDateTime, EndDateTime",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalOpenContractsRequest"
                  }
                ],
                "description": "Request of GetOpenContracts for hospital"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalOpenContractsRequest"
                  }
                ],
                "description": "Request of GetOpenContracts for hospital"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalOpenContractsRequest"
                  }
                ],
                "description": "Request of GetOpenContracts for hospital"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOpenContractsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOpenContractsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOpenContractsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOpenContractsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOpenContractsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOpenContractsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Contracts/GetOpenContractsWithBids": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "Get open contracts with submission for hospital users, supported sorting fields  ContractID, PositionType, Program, Facility, Unit, BidCount, StartDateTime, EndDateTime",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalOpenContractsWithBidsRequest"
                  }
                ],
                "description": "Request of GetHospitalOpenContractsWithBids for hospital"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalOpenContractsWithBidsRequest"
                  }
                ],
                "description": "Request of GetHospitalOpenContractsWithBids for hospital"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalOpenContractsWithBidsRequest"
                  }
                ],
                "description": "Request of GetHospitalOpenContractsWithBids for hospital"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOpenContractsWithBidsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOpenContractsWithBidsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOpenContractsWithBidsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOpenContractsWithBidsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOpenContractsWithBidsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOpenContractsWithBidsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Contracts/GetAwardOfferContracts": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "Get award offer contracts.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetAwardOfferContractsRequest"
                  }
                ],
                "description": "Supported sort field names: \"Position Type Name\", \"Program Name\", \"Facility Name\", \"Unit Name\", \"Submissions\", \"First Name\", \"Last Name\", \"Contract Start Date\", \"Contract End Date\", \"Contract ID\""
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetAwardOfferContractsRequest"
                  }
                ],
                "description": "Supported sort field names: \"Position Type Name\", \"Program Name\", \"Facility Name\", \"Unit Name\", \"Submissions\", \"First Name\", \"Last Name\", \"Contract Start Date\", \"Contract End Date\", \"Contract ID\""
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetAwardOfferContractsRequest"
                  }
                ],
                "description": "Supported sort field names: \"Position Type Name\", \"Program Name\", \"Facility Name\", \"Unit Name\", \"Submissions\", \"First Name\", \"Last Name\", \"Contract Start Date\", \"Contract End Date\", \"Contract ID\""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAwardOfferContractsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAwardOfferContractsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAwardOfferContractsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAwardOfferContractsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAwardOfferContractsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAwardOfferContractsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Contracts/GetAwardedContracts": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "Get awarded contracts for hospital users, supported sorting fields  ContractID, PositionType, Program, Facility, Unit, BidCount, StartDateTime, EndDateTime, AwardedNurse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalAwardedContractsRequest"
                  }
                ],
                "description": "Request of GetHospitalAwardedContracts for hospital"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalAwardedContractsRequest"
                  }
                ],
                "description": "Request of GetHospitalAwardedContracts for hospital"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalAwardedContractsRequest"
                  }
                ],
                "description": "Request of GetHospitalAwardedContracts for hospital"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalAwardedContractsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalAwardedContractsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalAwardedContractsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalAwardedContractsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalAwardedContractsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalAwardedContractsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Contracts/GetAgencyNurseAwardedContractByDate": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "summary": "Get Agency Nurse Awarded Contract By Date for Hospital",
        "parameters": [
          {
            "name": "ShiftStartDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "FacilityId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AgencyId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ChoosenNurseId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyNurseAwardedContractByDateResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyNurseAwardedContractByDateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyNurseAwardedContractByDateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyNurseAwardedContractByDateResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyNurseAwardedContractByDateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyNurseAwardedContractByDateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Contracts/GetNotAwardedContracts": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "Get not awarded contracts.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalNotAwardedContractsRequest"
                  }
                ],
                "description": "Supported sort field names: \"Position Type Name\", \"Program Name\", \"Facility Name\", \"Unit Name\", \"Submissions\", \"Contract Start Date\", \"Contract End Date\", \"Contract ID\""
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalNotAwardedContractsRequest"
                  }
                ],
                "description": "Supported sort field names: \"Position Type Name\", \"Program Name\", \"Facility Name\", \"Unit Name\", \"Submissions\", \"Contract Start Date\", \"Contract End Date\", \"Contract ID\""
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalNotAwardedContractsRequest"
                  }
                ],
                "description": "Supported sort field names: \"Position Type Name\", \"Program Name\", \"Facility Name\", \"Unit Name\", \"Submissions\", \"Contract Start Date\", \"Contract End Date\", \"Contract ID\""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalNotAwardedContractsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalNotAwardedContractsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalNotAwardedContractsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalNotAwardedContractsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalNotAwardedContractsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalNotAwardedContractsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Contracts/GetContractSubmissions": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "summary": "Get contract submissions.",
        "parameters": [
          {
            "name": "ContractId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ListOriginator",
            "in": "query",
            "description": "VS - View Contract Details, RS - Reconciliation Contract, ARS - Agency Reconciliation Contract",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetContractSubmissionsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContractSubmissionsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContractSubmissionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetContractSubmissionsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContractSubmissionsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContractSubmissionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Contracts/GetContractRejectReasons": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "summary": "Get Reject Reasons to populate Rejected Reasons dropdown when Hospital Decline Request on contract",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Contracts/GetContractBatchList": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "summary": "Get List of Batch Contracts",
        "parameters": [
          {
            "name": "BatchID",
            "in": "query",
            "description": "Batch ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "BatchName",
            "in": "query",
            "description": "Batch name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FacilityId",
            "in": "query",
            "description": "Facility Id",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitId",
            "in": "query",
            "description": "Unit Id",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PositionTypeId",
            "in": "query",
            "description": "Position Type Id",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetContractBatchListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContractBatchListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContractBatchListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Contracts/GetBatchContractList": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "summary": "Get List of Contracts in a Batch Contract",
        "parameters": [
          {
            "name": "BatchId",
            "in": "query",
            "description": "Batch ID",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ShiftStatusId",
            "in": "query",
            "description": "Shift Status (1 - Open, 2 - Pending, 3 - Awarded, 4 - Cancelled)",
            "schema": {
              "maximum": 10,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetBatchContractListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBatchContractListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBatchContractListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Contracts/SaveContractBatch": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "Save Batched Contracts.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveContractBatchRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveContractBatchRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveContractBatchRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveContractBatchResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveContractBatchResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveContractBatchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveContractBatchResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveContractBatchResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveContractBatchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Contracts/SaveReqID": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "Save Req ID.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveReqIDRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveReqIDRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveReqIDRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveReqIDResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveReqIDResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveReqIDResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveReqIDResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveReqIDResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveReqIDResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Contracts/DeclineSubmission": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "Decline Submission",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalDeclineContractSubmissionRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalDeclineContractSubmissionRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalDeclineContractSubmissionRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Contracts/AwardContract": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "Award Contract/Send Award Offer",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalAwardContractRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalAwardContractRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalAwardContractRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Contracts/AwardToOtherContract": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "Award to Other Contract",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalAwardToOtherContractRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalAwardToOtherContractRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalAwardToOtherContractRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Contracts/SaveContract": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "Create Contract Assignment",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveHospitalContractRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveHospitalContractRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveHospitalContractRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveHospitalContractResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveHospitalContractResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveHospitalContractResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveHospitalContractResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveHospitalContractResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveHospitalContractResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Contracts/GetContractReasonOptions": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "summary": "Get Contract Assignment Reason Options",
        "parameters": [
          {
            "name": "SelectedContractReasontId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Contracts/GetContractTypeOptions": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "summary": "Get Contract Type Options",
        "parameters": [
          {
            "name": "SelectedContractTypeId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsActiveOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Contracts/GetContractPodOptions": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "summary": "Get Contract POD Options",
        "parameters": [
          {
            "name": "SelectedPodId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsActiveOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Contracts/GetContractsBySystem": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "Find contracts for current Agency User",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetContractsBySystemParam"
                  }
                ],
                "description": "Supported sort field names: PositionType, Facility, Unit, MyBid, BidCount, StartDateTime, ShiftStatus, ContractID, EndBidDateTime."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetContractsBySystemParam"
                  }
                ],
                "description": "Supported sort field names: PositionType, Facility, Unit, MyBid, BidCount, StartDateTime, ShiftStatus, ContractID, EndBidDateTime."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetContractsBySystemParam"
                  }
                ],
                "description": "Supported sort field names: PositionType, Facility, Unit, MyBid, BidCount, StartDateTime, ShiftStatus, ContractID, EndBidDateTime."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyContractList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyContractList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyContractList"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Contracts/GetPagedAgencyContractProfessionals": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "Get professional list for agency to select when requesting a contract",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetPagedAgencyContractProfessionalsParam"
                  }
                ],
                "description": "Request of GetPagedAgencyContractProfessionals"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetPagedAgencyContractProfessionalsParam"
                  }
                ],
                "description": "Request of GetPagedAgencyContractProfessionals"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetPagedAgencyContractProfessionalsParam"
                  }
                ],
                "description": "Request of GetPagedAgencyContractProfessionals"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetPagedAgencyContractProfessionalsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPagedAgencyContractProfessionalsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPagedAgencyContractProfessionalsModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetPagedAgencyContractProfessionalsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPagedAgencyContractProfessionalsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPagedAgencyContractProfessionalsModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Contracts/Professional/GetRequestingContracts": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "summary": "Get professional requesting contracts for current Agency User, supported sorting fields: Action, ContractID, PositionType, System, Facility, Unit, Requester, \r\nCostCenter, TimeLeft, DateRange, SubmissionDate, ApprovedDate",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProgramId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PositionTypeId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyProfessionalRequestingContractListModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyProfessionalRequestingContractListModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyProfessionalRequestingContractListModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Contracts/GetNurseRequiredCredentialsByContractId": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "summary": "Get nurse required credential list for agency by contractId",
        "parameters": [
          {
            "name": "ContractId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ChosenNurseId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetNurseRequiredCredentialsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNurseRequiredCredentialsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNurseRequiredCredentialsModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Contracts/GetAgencyContractRates": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "Get rate for agency to select/edit/view when requesting a contract",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetAgencyContractRatesParam"
                  }
                ],
                "description": "Request for GetAgencyContractRates"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetAgencyContractRatesParam"
                  }
                ],
                "description": "Request for GetAgencyContractRates"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetAgencyContractRatesParam"
                  }
                ],
                "description": "Request for GetAgencyContractRates"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyContractRatesModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyContractRatesModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyContractRatesModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyContractRatesModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyContractRatesModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyContractRatesModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Contracts/AgencyRetractContractSubmission": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "Retract Agency Contract Submission",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencyRetractContractSubmissionParam"
                  }
                ],
                "description": "Request for Agency Retract Contract Submission."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencyRetractContractSubmissionParam"
                  }
                ],
                "description": "Request for Agency Retract Contract Submission."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencyRetractContractSubmissionParam"
                  }
                ],
                "description": "Request for Agency Retract Contract Submission."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyRetractContractSubmissionModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyRetractContractSubmissionModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyRetractContractSubmissionModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyRetractContractSubmissionModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyRetractContractSubmissionModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyRetractContractSubmissionModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Contracts/AgencySubmitContractRequest": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "Agency submits request on a contract",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencySubmitContractRequestParam"
                  }
                ],
                "description": "Request for AgencySubmitContractRequest"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencySubmitContractRequestParam"
                  }
                ],
                "description": "Request for AgencySubmitContractRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencySubmitContractRequestParam"
                  }
                ],
                "description": "Request for AgencySubmitContractRequest"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencySubmitContractRequestModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencySubmitContractRequestModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencySubmitContractRequestModel"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencySubmitContractRequestModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencySubmitContractRequestModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencySubmitContractRequestModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Contracts/AgencyDeclineAwardOffer": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "Agency Declines Award Offer on a Contract",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencyDeclineContractAwardOfferParam"
                  }
                ],
                "description": "Request for AgencyDeclineContractAwardOffer"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencyDeclineContractAwardOfferParam"
                  }
                ],
                "description": "Request for AgencyDeclineContractAwardOffer"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencyDeclineContractAwardOfferParam"
                  }
                ],
                "description": "Request for AgencyDeclineContractAwardOffer"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyDeclineContractAwardOfferModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyDeclineContractAwardOfferModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyDeclineContractAwardOfferModel"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyDeclineContractAwardOfferModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyDeclineContractAwardOfferModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyDeclineContractAwardOfferModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Contracts/AgencyAcceptAwardOffer": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "Agency Accept Award Offer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencyAcceptAwardOfferParam"
                  }
                ],
                "description": "Request for AgencyAcceptAwardOffer"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencyAcceptAwardOfferParam"
                  }
                ],
                "description": "Request for AgencyAcceptAwardOffer"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencyAcceptAwardOfferParam"
                  }
                ],
                "description": "Request for AgencyAcceptAwardOffer"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyAcceptAwardOfferModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyAcceptAwardOfferModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyAcceptAwardOfferModel"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyAcceptAwardOfferModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyAcceptAwardOfferModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyAcceptAwardOfferModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Contracts/GetAwardedContracts": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "summary": "Get awarded contracts for current Agency User\r\n{ \"Contract Assignment Id\", \"ContractAssignmentId\" },\r\n{ \"Position Type Name\", \"PositionTypeName\" },\r\n{ \"Facility Name\", \"FacilityName\" },\r\n{ \"Unit Name\", \"UnitName\" },\r\n{ \"Awarded Bid\", \"AwardedBid\" },\r\n{ \"Contract Assignment Start Date Time\", \"ContractAssignmentStartDateTime\" },\r\n{ \"Date Awarded\", \"DateAwarded\" },\r\n{ \"Shift Time Type\", \"ShiftTimeType\" },\r\n{ \"Awarded Nurse\", \"AwardedNurse\" },",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProgramId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PositionTypeId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyAwardedContractListModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyAwardedContractListModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyAwardedContractListModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Contracts/GetRequestingContracts": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "summary": "Get requesting contracts for current Agency User\r\n{ \"Contract Assignment Id\", \"ContractAssignmentId\" },\r\n{ \"Position Type Name\", \"PositionTypeName\" },\r\n{ \"Facility Name\", \"FacilityName\" },\r\n{ \"Unit Name\", \"UnitName\" },\r\n{ \"Shift Time Type\" , \"ShiftTimeType\" },\r\n{ \"Bid\", \"MyBid\" },\r\n{ \"Shift Status\" , \"ShiftStatusId\" },\r\n{ \"Contract Assignment Start Date Time\", \"ContractAssignmentStartDateTime\" },\r\n{ \"Contract Assignment Start End Time\", \"ContractAssignmentEndBidDateTime\" },\r\n{ \"Chosen Nurse\", \"ChosenNurse\" },",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProgramId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PositionTypeId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyRequestingContractListModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyRequestingContractListModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyRequestingContractListModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Contracts/GetOfferedContracts": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "summary": "Get offered contracts for current Agency User\r\n{ \"Contract Assignment Id\", \"ContractAssignmentId\" },\r\n{ \"Position Type Name\", \"PositionTypeName\" },\r\n{ \"Facility Name\", \"FacilityName\" },\r\n{ \"Unit Name\", \"UnitName\" },\r\n{ \"Shift Time Type\" , \"ShiftTimeType\" },\r\n{ \"Bid\", \"MyBid\" },\r\n{ \"Shift Status\" , \"ShiftStatusId\" },\r\n{ \"Contract Assignment Start Date Time\", \"ContractAssignmentStartDateTime\" },\r\n{ \"Contract Assignment Start End Time\", \"ContractAssignmentEndBidDateTime\" },\r\n{ \"Chosen Nurse\", \"ChosenNurse\" },",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProgramId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PositionTypeId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyRequestingContractListModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyRequestingContractListModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyRequestingContractListModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Contracts/GetNotAwardedContracts": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "summary": "Get not awarded contracts for current Agency User\r\n{ \"Contract Assignment Id\", \"ContractAssignmentId\" },\r\n{ \"Position Type Name\", \"PositionTypeName\" },\r\n{ \"Facility Name\", \"FacilityName\" },\r\n{ \"Unit Name\", \"UnitName\" },\r\n{ \"Shift Time Type\" , \"ShiftTimeType\" },\r\n{ \"Bid\", \"MyBid\" },\r\n{ \"Shift Status\" , \"ShiftStatusId\" },\r\n{ \"Contract Assignment Start Date Time\", \"ContractAssignmentStartDateTime\" },\r\n{ \"Contract Assignment Start End Time\", \"ContractAssignmentEndBidDateTime\" },\r\n{ \"Chosen Nurse\", \"ChosenNurse\" },",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProgramId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PositionTypeId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyRequestingContractListModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyRequestingContractListModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyRequestingContractListModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Contracts/GetLostContracts": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "summary": "Get lost contracts for current Agency User\r\n{ \"Contract Assignment Id\", \"ContractAssignmentId\" },\r\n{ \"Position Type Name\", \"PositionTypeName\" },\r\n{ \"Facility Name\", \"FacilityName\" },\r\n{ \"Unit Name\", \"UnitName\" },\r\n{ \"Shift Time Type\" , \"ShiftTimeType\" },\r\n{ \"Contract Assignment Start Date Time\", \"ContractAssignmentStartDateTime\" },\r\n{ \"Date Awarded\", \"DateAwarded\" },",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProgramId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PositionTypeId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyLostContractListModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyLostContractListModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyLostContractListModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Contracts/Summary": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "summary": "Get contract summary for current logged-in Agency User.",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "description": "Nullabe System Id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyContractSummaryModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyContractSummaryModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyContractSummaryModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Contracts/ExportContractsBySystem": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "Download Contracts List from Open Contracts Search",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ExportContractListParam"
                  }
                ],
                "description": "Request for ExportContractList"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ExportContractListParam"
                  }
                ],
                "description": "Request for ExportContractList"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ExportContractListParam"
                  }
                ],
                "description": "Request for ExportContractList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Contracts/Professional/DeclineBid": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "Decline Professiona Bid.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeclineProfessionalBidContractParam"
                  }
                ],
                "description": "Decline Professional Bid Contract Param"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeclineProfessionalBidContractParam"
                  }
                ],
                "description": "Decline Professional Bid Contract Param"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeclineProfessionalBidContractParam"
                  }
                ],
                "description": "Decline Professional Bid Contract Param"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyShiftSummaryModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyShiftSummaryModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyShiftSummaryModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Credential/GetAgencyNurseCredentialViewLogs": {
      "get": {
        "tags": [
          "Credential"
        ],
        "summary": "Get agency professional/nurse credential view log.",
        "parameters": [
          {
            "name": "AgencyId",
            "in": "query",
            "description": "No need to pass AgencyId when calling this web API for agency user",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "NurseId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CredentialId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyNurseCredentialViewLogsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyNurseCredentialViewLogsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyNurseCredentialViewLogsModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyNurseCredentialViewLogsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyNurseCredentialViewLogsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyNurseCredentialViewLogsModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Credential/CommentAgencyNurseCredential": {
      "post": {
        "tags": [
          "Credential"
        ],
        "summary": "Leave comment on a nurse credential",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CommentAgencyNurseCredentialParam"
                  }
                ],
                "description": "Request for CommentAgencyNurseCredential"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CommentAgencyNurseCredentialParam"
                  }
                ],
                "description": "Request for CommentAgencyNurseCredential"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CommentAgencyNurseCredentialParam"
                  }
                ],
                "description": "Request for CommentAgencyNurseCredential"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CommentAgencyNurseCredentialModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentAgencyNurseCredentialModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentAgencyNurseCredentialModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Credential/DownloadCredentialDocument": {
      "get": {
        "tags": [
          "Credential"
        ],
        "summary": "Download nurse credential document",
        "parameters": [
          {
            "name": "NurseCredentialId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Credential/DownloadDocForTest": {
      "get": {
        "tags": [
          "Credential"
        ],
        "summary": "Download nurse credential document by file name",
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Credential/GetCredentials": {
      "get": {
        "tags": [
          "Credential"
        ],
        "summary": "Get credentials to populate credential dropdown",
        "parameters": [
          {
            "name": "systemId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CredentialModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CredentialModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CredentialModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Credential/DeleteNurseCredential": {
      "post": {
        "tags": [
          "Credential"
        ],
        "summary": "Delete Nurse Credential(s)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteNurseCredentialParam"
                  }
                ],
                "description": "Request for DeleteNurseCredential"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteNurseCredentialParam"
                  }
                ],
                "description": "Request for DeleteNurseCredential"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteNurseCredentialParam"
                  }
                ],
                "description": "Request for DeleteNurseCredential"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteNurseCredentialModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteNurseCredentialModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteNurseCredentialModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Credential/UploadCredential": {
      "post": {
        "tags": [
          "Credential"
        ],
        "summary": "Upload/Update Nurse Credential",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "CredentialId",
                  "NurseId"
                ],
                "type": "object",
                "properties": {
                  "NurseCredentialId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Nurse Credential Id",
                    "format": "int32"
                  },
                  "NurseId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Nurse Id",
                    "format": "int32"
                  },
                  "CredentialId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Credential Id",
                    "format": "int32"
                  },
                  "ExpirationDate": {
                    "type": "string",
                    "description": "Required when CredentialIsCore is true",
                    "format": "date-time"
                  },
                  "AcquireDate": {
                    "type": "string",
                    "description": "Required when system has ENABLE_CREDENTIALS_ACQUIRED_DATE(298)",
                    "format": "date-time"
                  },
                  "LicenseType": {
                    "maximum": 2,
                    "minimum": 1,
                    "type": "integer",
                    "description": "1 for Single, 2 for Compact",
                    "format": "int32"
                  },
                  "LicenseState": {
                    "maxLength": 2,
                    "type": "string",
                    "description": "License State"
                  },
                  "Certificate": {
                    "type": "string",
                    "description": "Credential Document to Upload",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "NurseCredentialId": {
                  "style": "form"
                },
                "NurseId": {
                  "style": "form"
                },
                "CredentialId": {
                  "style": "form"
                },
                "ExpirationDate": {
                  "style": "form"
                },
                "AcquireDate": {
                  "style": "form"
                },
                "LicenseType": {
                  "style": "form"
                },
                "LicenseState": {
                  "style": "form"
                },
                "Certificate": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UploadCredentialModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadCredentialModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadCredentialModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Credential/FaxCoversheet": {
      "post": {
        "tags": [
          "Credential"
        ],
        "summary": "Get Coversheet to fax",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FaxCoversheetParam"
                  }
                ],
                "description": "Request for FaxCoversheet"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FaxCoversheetParam"
                  }
                ],
                "description": "Request for FaxCoversheet"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FaxCoversheetParam"
                  }
                ],
                "description": "Request for FaxCoversheet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FaxCoversheetModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaxCoversheetModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaxCoversheetModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Credential/GetNurseCredentials": {
      "get": {
        "tags": [
          "Credential"
        ],
        "summary": "Get nurse's credentials",
        "parameters": [
          {
            "name": "NurseId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetNurseCredentialsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNurseCredentialsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNurseCredentialsModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Credential/GetArchivedNurseCredentials": {
      "get": {
        "tags": [
          "Credential"
        ],
        "summary": "Get nurse's archived credentials",
        "parameters": [
          {
            "name": "NurseId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CredentialId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "NurseCredentialId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetArchivedNurseCredentialsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetArchivedNurseCredentialsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetArchivedNurseCredentialsModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Credential/GetNurseCredential": {
      "get": {
        "tags": [
          "Credential"
        ],
        "summary": "Get nurse credentials by ID",
        "parameters": [
          {
            "name": "NurseCredentialId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetNurseCredentialModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNurseCredentialModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNurseCredentialModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Credential/GetHospitalNurseCredentials": {
      "get": {
        "tags": [
          "Credential"
        ],
        "summary": "Get nurse's credentials",
        "parameters": [
          {
            "name": "AgencyId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "NurseId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AgencyOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalNurseCredentialsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalNurseCredentialsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalNurseCredentialsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Credential/GetAgencyNurseSystemCredentials": {
      "get": {
        "tags": [
          "Credential"
        ],
        "summary": "Get agency nurse's system credentials",
        "parameters": [
          {
            "name": "AgencyId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "NurseId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyNurseSystemCredentialsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyNurseSystemCredentialsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyNurseSystemCredentialsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Credential/RejectNurseCredential": {
      "post": {
        "tags": [
          "Credential"
        ],
        "summary": "Reject nurse credential",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RejectNurseCredentialRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RejectNurseCredentialRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RejectNurseCredentialRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RejectNurseCredentialResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RejectNurseCredentialResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RejectNurseCredentialResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Credential/ViewArchivedNurseCredentials": {
      "get": {
        "tags": [
          "Credential"
        ],
        "summary": "View archived nurse credentials",
        "parameters": [
          {
            "name": "NurseCredentialId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalNurseCredentialsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalNurseCredentialsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalNurseCredentialsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Credential/GetArchivedAgencyNurseSystemCredentials": {
      "get": {
        "tags": [
          "Credential"
        ],
        "summary": "Get archived agency nurse system credentials",
        "parameters": [
          {
            "name": "AgencyNurseSystemCredentialId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetArchivedAgencyNurseSystemCredentialsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetArchivedAgencyNurseSystemCredentialsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetArchivedAgencyNurseSystemCredentialsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Credential/SaveAgencyNurseSystemCredential": {
      "post": {
        "tags": [
          "Credential"
        ],
        "summary": "Save/upload agency nurse system credential",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "AgencyNurseSystemCredentialId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "format": "int32"
                  },
                  "AgencyId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Required when add a new system credential.",
                    "format": "int32"
                  },
                  "NurseId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Required when add a new system credential.",
                    "format": "int32"
                  },
                  "CredentialId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Required when add a new system credential.",
                    "format": "int32"
                  },
                  "ExpirationDate": {
                    "type": "string",
                    "description": "Required when CredentialIsCore is true",
                    "format": "date-time"
                  },
                  "LicenseType": {
                    "maximum": 2,
                    "minimum": 1,
                    "type": "integer",
                    "description": "1 for Single, 2 for Compact, 3 for Certification",
                    "format": "int32"
                  },
                  "LicenseState": {
                    "maxLength": 2,
                    "type": "string",
                    "description": "License State"
                  },
                  "Certificate": {
                    "type": "string",
                    "description": "Credential Document to Upload.",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "AgencyNurseSystemCredentialId": {
                  "style": "form"
                },
                "AgencyId": {
                  "style": "form"
                },
                "NurseId": {
                  "style": "form"
                },
                "CredentialId": {
                  "style": "form"
                },
                "ExpirationDate": {
                  "style": "form"
                },
                "LicenseType": {
                  "style": "form"
                },
                "LicenseState": {
                  "style": "form"
                },
                "Certificate": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAgencyNurseSystemCredentialResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAgencyNurseSystemCredentialResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAgencyNurseSystemCredentialResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Credential/DeleteAgencyNurseSystemCredential": {
      "post": {
        "tags": [
          "Credential"
        ],
        "summary": "Delete agency nurse system credential",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteAgencyNurseSystemCredentialRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteAgencyNurseSystemCredentialRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteAgencyNurseSystemCredentialRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAgencyNurseSystemCredentialResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAgencyNurseSystemCredentialResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAgencyNurseSystemCredentialResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Credential/GetNurseRequiredCredentials": {
      "get": {
        "tags": [
          "Credential"
        ],
        "summary": "Get nurse required credential list based on Shift or Contract.",
        "parameters": [
          {
            "name": "ShiftOrContractId",
            "in": "query",
            "description": "ContractId if IsContract is true; otherwise, it's ShiftId.",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsContract",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "AgencyId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "NurseId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalNurseRequiredCredentialsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalNurseRequiredCredentialsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalNurseRequiredCredentialsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Credential/GetRequiredCredentials": {
      "get": {
        "tags": [
          "Credential"
        ],
        "summary": "Gets the list of required credentials.",
        "parameters": [
          {
            "name": "CredentialId",
            "in": "query",
            "description": "An optional Id of the required credential to filter.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProgramId",
            "in": "query",
            "description": "An optional program Id of the required credentials to filter.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityId",
            "in": "query",
            "description": "An optional facility Id of the required credentials to filter.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitId",
            "in": "query",
            "description": "An optional unit Id of the required credentials to filter.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PositionTypeId",
            "in": "query",
            "description": "An optional position type Id of the required credentials to filter.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CareTypeId",
            "in": "query",
            "description": "An optional care type Id of the required credentials to filter.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ShowRequiredExpirationDateOnly",
            "in": "query",
            "description": "An option to show only with required expiration date.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequiredCredentialsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequiredCredentialsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequiredCredentialsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/Credential/GetNurseCredentials": {
      "get": {
        "tags": [
          "Credential"
        ],
        "summary": "Get Registry Nurse Credentials",
        "description": "v1/Registry/Nurses/ViewChosenNurse.aspx",
        "parameters": [
          {
            "name": "AgencyId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "NurseId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AgencyOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryNurseCredentialsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryNurseCredentialsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryNurseCredentialsResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryNurseCredentialsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryNurseCredentialsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryNurseCredentialsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomConfig/GetMasterCustomSettings": {
      "get": {
        "tags": [
          "CustomConfig"
        ],
        "summary": "Get all Master Custom Settings",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetMasterCustomSettingsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMasterCustomSettingsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMasterCustomSettingsModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomConfig/GetSystemCustomConfigs": {
      "get": {
        "tags": [
          "CustomConfig"
        ],
        "summary": "Get Custom Configs by SystemID",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemCustomConfigsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemCustomConfigsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemCustomConfigsModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomConfig/GetSystemCustomConfigsByAppVersion": {
      "get": {
        "tags": [
          "CustomConfig"
        ],
        "summary": "Get Custom Configs by AppVersionID",
        "parameters": [
          {
            "name": "AppVersionId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemCustomConfigsByAppVersionModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemCustomConfigsByAppVersionModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemCustomConfigsByAppVersionModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomConfig/GetSystemCustomConfig": {
      "get": {
        "tags": [
          "CustomConfig"
        ],
        "summary": "Get Custom Config by SystemID and MasterCustomSettingID",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MasterCustomSettingId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemCustomConfigModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemCustomConfigModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemCustomConfigModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomConfig/GetAppVersionCustomConfigs": {
      "get": {
        "tags": [
          "CustomConfig"
        ],
        "summary": "Get Custom Configs by App Version Id",
        "parameters": [
          {
            "name": "AppVersionId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAppVersionCustomConfigsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAppVersionCustomConfigsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAppVersionCustomConfigsModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomConfig/GetAppVersionCustomConfig": {
      "get": {
        "tags": [
          "CustomConfig"
        ],
        "summary": "Get Custom Config by AppVersionId and MasterCustomSettingID",
        "parameters": [
          {
            "name": "AppVersionId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MasterCustomSettingId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAppVersionCustomConfigModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAppVersionCustomConfigModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAppVersionCustomConfigModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomConfig/GetSystemsBySettingId": {
      "get": {
        "tags": [
          "CustomConfig"
        ],
        "summary": "Get System List by MasterCustomSettingID",
        "parameters": [
          {
            "name": "MasterCustomSettingId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemsBySettingIdResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemsBySettingIdResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemsBySettingIdResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomConfig/GetAppVersionsBySettingId": {
      "get": {
        "tags": [
          "CustomConfig"
        ],
        "summary": "Get AppVersion List by MasterCustomSettingID",
        "parameters": [
          {
            "name": "MasterCustomSettingId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAppVersionsBySettingIdResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAppVersionsBySettingIdResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAppVersionsBySettingIdResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/CustomConfig/SaveCustomConfigs": {
      "post": {
        "tags": [
          "CustomConfig"
        ],
        "summary": "Save Registry Custom Configs",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveCustomConfigRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveCustomConfigRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveCustomConfigRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/Documents/SaveRegistryDocument": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Save registry document.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Active",
                  "DocumentCategoryId",
                  "DocumentDescription",
                  "DocumentName"
                ],
                "type": "object",
                "properties": {
                  "RegistryDocumentId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Registry DocumentID, leave it null when creating a new registry document, pass ID when editing an existing registry document",
                    "format": "int32"
                  },
                  "DocumentName": {
                    "maxLength": 255,
                    "minLength": 0,
                    "type": "string",
                    "description": "Registry Document Name"
                  },
                  "DocumentCategoryId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "format": "int32"
                  },
                  "DocumentDescription": {
                    "type": "string"
                  },
                  "Document": {
                    "type": "string",
                    "description": "Registry Document to Upload",
                    "format": "binary"
                  },
                  "Active": {
                    "type": "boolean",
                    "description": "Registry Document Status"
                  },
                  "StartDate": {
                    "type": "string",
                    "description": "`Display File Start Date`",
                    "format": "date-time"
                  },
                  "EndDate": {
                    "type": "string",
                    "description": "`Display File End Date`",
                    "format": "date-time"
                  },
                  "DisplayFileFor": {
                    "type": "integer",
                    "description": "`Display File For`\r\n\r\n\r\n            Available options:\r\n\r\n            0 - All(Facilities and Agencies) \r\n\r\n            1 - Facilities \r\n\r\n            2 - Agencies \r\n\r\n            3 - Only for Registry\r\n\r\n            4 - Region, visible only if AppVersion has the setting REGISTRY_DOCUMENT_ALLOW_REGION(356)",
                    "format": "int32"
                  },
                  "SelectedRegions": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "DisplayFileForPrograms": {
                    "type": "integer",
                    "description": "`Display File for (Programs):` 0 - All Programs, 1 - Selected Programs",
                    "format": "int32"
                  },
                  "SelectedPrograms": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              },
              "encoding": {
                "RegistryDocumentId": {
                  "style": "form"
                },
                "DocumentName": {
                  "style": "form"
                },
                "DocumentCategoryId": {
                  "style": "form"
                },
                "DocumentDescription": {
                  "style": "form"
                },
                "Document": {
                  "style": "form"
                },
                "Active": {
                  "style": "form"
                },
                "StartDate": {
                  "style": "form"
                },
                "EndDate": {
                  "style": "form"
                },
                "DisplayFileFor": {
                  "style": "form"
                },
                "SelectedRegions": {
                  "style": "form"
                },
                "DisplayFileForPrograms": {
                  "style": "form"
                },
                "SelectedPrograms": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveRegistryDocumentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveRegistryDocumentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveRegistryDocumentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/Documents/DeleteRegistryDocument": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Delete registry document.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteRegistryDocumentRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteRegistryDocumentRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteRegistryDocumentRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteRegistryDocumentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteRegistryDocumentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteRegistryDocumentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/Documents/GetRegistryDocuments": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get Registry documents.\r\n Supported sort field names:  \"Document Name\", \"Category Name\", \"Description\", \"Start Date\", \"End Date\"\r\nsort direction: 0 - Ascending, 1 - Descending",
        "parameters": [
          {
            "name": "CategoryID",
            "in": "query",
            "description": "Category ID",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProgramID",
            "in": "query",
            "description": "Program ID",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "RegionID",
            "in": "query",
            "description": "Region ID",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "1: Active, 0: Not Active",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DisplayFor",
            "in": "query",
            "description": "-1: All, 1: All(Facilities and Agencies), 2: Facilities, 3: Agencies, 4: Registry, 5: Region",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetListOfRegistryDocumentsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListOfRegistryDocumentsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListOfRegistryDocumentsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/Documents/GetRegistryDocumentDetails": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get Registry document details.",
        "parameters": [
          {
            "name": "RegistryDocumentId",
            "in": "query",
            "description": "Registry Document ID",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryDocumentDetailsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryDocumentDetailsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryDocumentDetailsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/GetAgencyDocument": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get Agency Document",
        "parameters": [
          {
            "name": "AgencyDocumentID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyDocumentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyDocumentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyDocumentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/GetDocumentCategory": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get Document Category",
        "parameters": [
          {
            "name": "CategoryTypeID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetDocumentCategoryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDocumentCategoryResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDocumentCategoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/GetFacilityDocuments": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get Facility Document Lists.\r\nSupported sort field names:  \"Document Name\", \"Category\", \"Description\", \"Start Date\", \"End Date\", \"Facility Name\", \"Sytem Name\", \"Uploaded Date\"\r\nsort direction: 0 - Ascending, 1 - Descending",
        "description": "Sample request for Get Professionals:\r\n            \r\n    Get ​/api​/Agency​​/GetProfessionals\r\n    {\r\n       \"systemId\": 0,\r\n       \"facilityId\": 0,\r\n       \"paging\": {\r\n            \"pageSize\": 20,\r\n            \"pageIndex\": 2,\r\n            \"sortCol\": \"Document Name\",\r\n            \"sortOrder\": \"ASC\"\r\n       }\r\n   }",
        "parameters": [
          {
            "name": "FacilityID",
            "in": "query",
            "description": "Facility ID\r\nFor multiple Facility ID add IDs separated by comma",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SystemID",
            "in": "query",
            "description": "System ID",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DocumentCategoryID",
            "in": "query",
            "description": "Category ID",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Status, pass null or -1 to get all, 1 for active only, 0 for inactive only",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetFacilityDocumentsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFacilityDocumentsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFacilityDocumentsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/ExportFacilityDocuments": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Download Facility Documents\r\nSupported sort field names: Document Name, System Name, Facility Name, Facility Category Name, Description, Last Updated Date, Start Date, End Date, Document Status",
        "parameters": [
          {
            "name": "FacilityID",
            "in": "query",
            "description": "Facility ID is optional\r\nFor multiple Facility ID add IDs separated by comma",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SystemID",
            "in": "query",
            "description": "System ID is optional",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DocumentCategoryID",
            "in": "query",
            "description": "Document Category is optional",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Status, pass null or -1 to get all, 1 for active only, 0 for inactive only",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/SaveAgencyInsurance": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Save Agency Insurance",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "AgencyInsuranceDocumentEndDate",
                  "AgencyInsuranceDocumentStartDate",
                  "InsuranceTypeID",
                  "Locked",
                  "PolicyNumber"
                ],
                "type": "object",
                "properties": {
                  "AgencyInsuranceDocumentID": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Agency Insurance Document ID",
                    "format": "int32"
                  },
                  "InsuranceTypeID": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Insurance Type ID",
                    "format": "int32"
                  },
                  "PolicyNumber": {
                    "maxLength": 255,
                    "minLength": 0,
                    "type": "string",
                    "description": "Policy Number"
                  },
                  "AgencyInsuranceDocumentStartDate": {
                    "type": "string",
                    "description": "Agency Insurance Document Start Date",
                    "format": "date-time"
                  },
                  "AgencyInsuranceDocumentEndDate": {
                    "type": "string",
                    "description": "Agency Insurance Document End Date",
                    "format": "date-time"
                  },
                  "Locked": {
                    "type": "boolean",
                    "description": "Locked, visible only when editing an existing insurance, it is set to false by back end when creating a new insurance"
                  },
                  "PerOccurrence": {
                    "minimum": 0,
                    "type": "number",
                    "description": "Visible only for TNAA(7)",
                    "format": "double"
                  },
                  "Aggregation": {
                    "minimum": 0,
                    "type": "number",
                    "description": "Visible only for TNAA(7)",
                    "format": "double"
                  },
                  "Attachments": {
                    "type": "string",
                    "description": "Attachments",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "AgencyInsuranceDocumentID": {
                  "style": "form"
                },
                "InsuranceTypeID": {
                  "style": "form"
                },
                "PolicyNumber": {
                  "style": "form"
                },
                "AgencyInsuranceDocumentStartDate": {
                  "style": "form"
                },
                "AgencyInsuranceDocumentEndDate": {
                  "style": "form"
                },
                "Locked": {
                  "style": "form"
                },
                "PerOccurrence": {
                  "style": "form"
                },
                "Aggregation": {
                  "style": "form"
                },
                "Attachments": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAgencyInsuranceDocumentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAgencyInsuranceDocumentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAgencyInsuranceDocumentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/GetAgencyInsurances": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get AgencyInsurances\r\nSupported sort field names:  \"Agency Name\", \"Policy Number\", \"Policy Type\", \"Issue Date\", \"Expiration Date\"\r\nsort direction: 0 - Ascending, 1 - Descending",
        "parameters": [
          {
            "name": "AgencyID",
            "in": "query",
            "description": "Agency ID for Hospitals",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AgencyInsuranceTypeID",
            "in": "query",
            "description": "Agency Insurance Type ID for Hospitals",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsMissionDocument",
            "in": "query",
            "description": "Is Mission Document",
            "schema": {
              "maximum": 1,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Start Date for Hospitals",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "End Date for Hospitals",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "OnlyShowLatest",
            "in": "query",
            "description": "For Registry side.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyInsurancesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyInsurancesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyInsurancesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/ExportAgencyInsurances": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Download Agency Insurances\r\nSupported sort field names:  \"Agency Name\", \"Policy Number\", \"Policy Type\", \"Issue Date\", \"Expiration Date\"\r\nsort direction: 0 - Ascending, 1 - Descending",
        "parameters": [
          {
            "name": "AgencyID",
            "in": "query",
            "description": "Agency ID for Hospitals",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AgencyInsuranceTypeID",
            "in": "query",
            "description": "Agency Insurance Type ID for Hospitals",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsMissionDocument",
            "in": "query",
            "description": "Is Mission Document",
            "schema": {
              "maximum": 1,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Start Date for Hospitals",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "End Date for Hospitals",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/GetArchivedAgencyInsurances": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get Archived Agency Insurances",
        "parameters": [
          {
            "name": "AgencyInsuranceDocumentID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAgencyInsuranceResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAgencyInsuranceResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAgencyInsuranceResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/GetAgencyDocuments": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get List of Agency Documents.\r\nSupported sort field names:  \"Document Name\", \"Agency Name\", \"Document Category Name\", \"Document Description\", \"Document Uploaded At\", \"Start Date\", \"End Date\"\r\nsort direction: 0 - Ascending, 1 - Descending",
        "parameters": [
          {
            "name": "AgencyID",
            "in": "query",
            "description": "Agency ID for Hospital",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DocumentCategoryID",
            "in": "query",
            "description": "Document Category ID",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DateFilterType",
            "in": "query",
            "description": "1: Date Posted, 2: Date Expired. For Registry side, and IsMissingDocument is false.",
            "schema": {
              "maximum": 2,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "For Registry side.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "For Registry side.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IsMissingDocument",
            "in": "query",
            "description": "For Registry side.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyDocumentsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyDocumentsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyDocumentsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/ExportAgencyDocuments": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Export List of Agency Documents.\r\nSupported sort field names: Name, Agency Name, Category, Description, Date Uploaded, Start Date, End Date",
        "parameters": [
          {
            "name": "AgencyID",
            "in": "query",
            "description": "Agency ID for Hospital",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DocumentCategoryID",
            "in": "query",
            "description": "Document Category ID is optional",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/GetAgencyLicense": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get Agency License",
        "parameters": [
          {
            "name": "AgencyLicenceDocumentID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyLicenseDocumentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyLicenseDocumentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyLicenseDocumentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/GetAgencyLicenses": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get List of Agency Documents.\r\nSupported sort field names:  \"LicenseNumber\", \"Aegncy\", \"State\", \"IssueDate\", \"ExpirationDate\", \"Attachment\", \"UploadedAt\"\r\nsort direction: 0 - Ascending, 1 - Descending",
        "parameters": [
          {
            "name": "AgencyID",
            "in": "query",
            "description": "AgencyID for Hospital or Registry",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "RegistryRegionID",
            "in": "query",
            "description": "Registry RegionID for Hospital or Registry",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Start Date",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "End Date",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IsMissingDocument",
            "in": "query",
            "description": "For Registry side",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "OnlyShowLatest",
            "in": "query",
            "description": "For Registry side",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyLicensesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyLicensesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyLicensesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/ExportAgencyLicenses": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Export List of Agency Licenses.\r\nSupported sort field names:  \"License Number\", \"Agency Name\", \"State\", \"Date of Licensure\", \"Expiration Date\", \"Uploaded By\", \"Uploaded At\"",
        "parameters": [
          {
            "name": "AgencyID",
            "in": "query",
            "description": "AgencyID for Hospital",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "RegistryRegionID",
            "in": "query",
            "description": "Registry RegionID for Hospital",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Start Date",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "End Date",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/GetAgencyInsurance": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get Agency Insurance",
        "parameters": [
          {
            "name": "AgencyInsuranceDocumentID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyInsuranceDocumentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyInsuranceDocumentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyInsuranceDocumentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/GetRegistryDocuments": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get Registry documents.\r\n Supported sort field names:  \"Document Name\", \"Category Name\", \"Description\", \"Start Date\", \"End Date\"\r\nsort direction: 0 - Ascending, 1 - Descending",
        "parameters": [
          {
            "name": "CategoryID",
            "in": "query",
            "description": "Category ID",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProgramID",
            "in": "query",
            "description": "Program ID",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "RegionID",
            "in": "query",
            "description": "Region ID",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "1: Active, 0: Not Active",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DisplayFor",
            "in": "query",
            "description": "-1: All, 1: All(Facilities and Agencies), 2: Facilities, 3: Agencies, 4: Registry, 5: Region",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RegistryDocumentItemResponseList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistryDocumentItemResponseList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistryDocumentItemResponseList"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/ExportRegistryDocuments": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Download registry documents\r\nSupported sort field names: Document Name, Category Name, Contract, Description, Uploaded At, Start Date, End Date",
        "parameters": [
          {
            "name": "CategoryID",
            "in": "query",
            "description": "Category ID is optional",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProgramID",
            "in": "query",
            "description": "Program ID is optional",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "RegionID",
            "in": "query",
            "description": "Region ID",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/DeleteAgencyLicense": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Delete Agency License by ID",
        "parameters": [
          {
            "name": "AgencyLicenceDocumentID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAgencyLicenseDocumentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAgencyLicenseDocumentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAgencyLicenseDocumentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/DeleteAgencyInsurance": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Delete Agency Insurance Document by ID",
        "parameters": [
          {
            "name": "AgencyInsuranceDocumentID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAgencyInsuranceDocumentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAgencyInsuranceDocumentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAgencyInsuranceDocumentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/GetAgencyInsuranceTypes": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get agency insurance types",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/SaveAgencyLicense": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Save Agency License",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "DateOfLicensure",
                  "ExpirationDate",
                  "LicenseNumber",
                  "Locked",
                  "RegionId"
                ],
                "type": "object",
                "properties": {
                  "AgencyLicenseDocumentId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "AgencyLicenseDocumentId, leave it null when creating a new license, pass it when editing an existing license",
                    "format": "int32"
                  },
                  "RegionId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "RegionId",
                    "format": "int32"
                  },
                  "LicenseNumber": {
                    "maxLength": 255,
                    "minLength": 0,
                    "type": "string",
                    "description": "License Number"
                  },
                  "DateOfLicensure": {
                    "type": "string",
                    "description": "Date of Licensure",
                    "format": "date"
                  },
                  "ExpirationDate": {
                    "type": "string",
                    "description": "Expiration Date",
                    "format": "date"
                  },
                  "Locked": {
                    "type": "boolean",
                    "description": "Locked, visible only when editing an existing license, it is set to false by back end when creating a new license"
                  },
                  "Attachment": {
                    "type": "string",
                    "description": "Attachment to Upload",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "AgencyLicenseDocumentId": {
                  "style": "form"
                },
                "RegionId": {
                  "style": "form"
                },
                "LicenseNumber": {
                  "style": "form"
                },
                "DateOfLicensure": {
                  "style": "form"
                },
                "ExpirationDate": {
                  "style": "form"
                },
                "Locked": {
                  "style": "form"
                },
                "Attachment": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAgencyLicenseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAgencyLicenseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAgencyLicenseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/GetRegistryRegions": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get Registry Regions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/SaveAgencyDocument": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Save agency document.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "DocumentCategoryID"
                ],
                "type": "object",
                "properties": {
                  "AgencyDocumentID": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "AgencyDocumentID, leave it null when creating a new document, pass ID when editing an existing document",
                    "format": "int32"
                  },
                  "DocumentName": {
                    "maxLength": 255,
                    "minLength": 0,
                    "type": "string",
                    "description": "Document Name"
                  },
                  "DocumentCategoryID": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Document Category ID",
                    "format": "int32"
                  },
                  "DocumentDescription": {
                    "maxLength": 2147483647,
                    "minLength": 0,
                    "type": "string",
                    "description": "Document Description"
                  },
                  "Status": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Record Status",
                    "format": "int32"
                  },
                  "AgencyDocumentStartDate": {
                    "type": "string",
                    "description": "Start Date",
                    "format": "date"
                  },
                  "AgencyDocumentEndDate": {
                    "type": "string",
                    "description": "End Date",
                    "format": "date"
                  },
                  "Attachment": {
                    "type": "string",
                    "description": "Attachment to Upload",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "AgencyDocumentID": {
                  "style": "form"
                },
                "DocumentName": {
                  "style": "form"
                },
                "DocumentCategoryID": {
                  "style": "form"
                },
                "DocumentDescription": {
                  "style": "form"
                },
                "Status": {
                  "style": "form"
                },
                "AgencyDocumentStartDate": {
                  "style": "form"
                },
                "AgencyDocumentEndDate": {
                  "style": "form"
                },
                "Attachment": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAgencyDocumentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAgencyDocumentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAgencyDocumentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/DownloadDocument": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Download Registry/Facility/Agency/Agency License/Agency Insurance Document, DocType needs to be one of registries(0), agency_licenses(1), agency_insurances(2), facilities(3), agencies(4), systems(5), contract(6)",
        "parameters": [
          {
            "name": "DocId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DocType",
            "in": "query",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Constants_B4HDocumentType"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/GetSystemDocs": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get System Documents for hospital users only, Spported sort field names:  \"Name\", \"Attachment\", \"Active\"\r\nsort direction: 0 - Ascending, 1 - Descending",
        "parameters": [
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemDocsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemDocsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemDocsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/DeleteSystemDocument": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Delete System Document",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteSystemDocumentRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteSystemDocumentRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteSystemDocumentRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSystemDocumentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSystemDocumentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSystemDocumentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/SaveSystemDocument": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Save System document.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Active",
                  "SystemDocumentName"
                ],
                "type": "object",
                "properties": {
                  "SystemDocumentID": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "System DocumentID, leave it null when creating a new system document, pass ID when editing an existing system document",
                    "format": "int32"
                  },
                  "SystemDocumentName": {
                    "maxLength": 255,
                    "minLength": 0,
                    "type": "string",
                    "description": "System Document Name"
                  },
                  "SystemDocument": {
                    "type": "string",
                    "description": "System Document to Upload",
                    "format": "binary"
                  },
                  "Active": {
                    "type": "boolean",
                    "description": "System Document Status"
                  }
                }
              },
              "encoding": {
                "SystemDocumentID": {
                  "style": "form"
                },
                "SystemDocumentName": {
                  "style": "form"
                },
                "SystemDocument": {
                  "style": "form"
                },
                "Active": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveSystemDocumentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveSystemDocumentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveSystemDocumentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/DownloadSystemDocument": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Download System Document",
        "parameters": [
          {
            "name": "SystemDocumentID",
            "in": "query",
            "description": "System Document ID",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/SaveFacilityDocument": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Save Facility Document.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "DocumentCategoryID",
                  "DocumentDescription",
                  "DocumentName",
                  "IncludeOnContracts",
                  "Status"
                ],
                "type": "object",
                "properties": {
                  "FacilityDocumentID": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Facility Document ID, leave it null when creating a new facility document, pass ID when editing an existing facility document",
                    "format": "int32"
                  },
                  "FacilityID": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Facility ID",
                    "format": "int32"
                  },
                  "DocumentName": {
                    "maxLength": 255,
                    "minLength": 0,
                    "type": "string",
                    "description": "Document Name"
                  },
                  "DocumentCategoryID": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Document Category ID",
                    "format": "int32"
                  },
                  "DocumentDescription": {
                    "type": "string",
                    "description": "Document Description"
                  },
                  "Status": {
                    "type": "boolean",
                    "description": "Document Status"
                  },
                  "DisplayFileStartDate": {
                    "type": "string",
                    "description": "Display File Start Date",
                    "format": "date-time"
                  },
                  "DisplayFileEndDate": {
                    "type": "string",
                    "description": "Display File End Date",
                    "format": "date-time"
                  },
                  "IncludeOnContracts": {
                    "type": "boolean",
                    "description": "Include On Contacts"
                  },
                  "FacilityDocument": {
                    "type": "string",
                    "description": "Facility Document to Upload",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "FacilityDocumentID": {
                  "style": "form"
                },
                "FacilityID": {
                  "style": "form"
                },
                "DocumentName": {
                  "style": "form"
                },
                "DocumentCategoryID": {
                  "style": "form"
                },
                "DocumentDescription": {
                  "style": "form"
                },
                "Status": {
                  "style": "form"
                },
                "DisplayFileStartDate": {
                  "style": "form"
                },
                "DisplayFileEndDate": {
                  "style": "form"
                },
                "IncludeOnContracts": {
                  "style": "form"
                },
                "FacilityDocument": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveFacilityDocumentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveFacilityDocumentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveFacilityDocumentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/GetFacilityDocument": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get Facility Document .",
        "parameters": [
          {
            "name": "FacilityDocID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetFacilityDocumentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFacilityDocumentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFacilityDocumentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/DeleteFacilityDocument": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Delete Facility Document",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteFacilityDocumentRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteFacilityDocumentRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteFacilityDocumentRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteFacilityDocumentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteFacilityDocumentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteFacilityDocumentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/GetSystemDocument": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get System Document for hospital",
        "parameters": [
          {
            "name": "SystemDocID",
            "in": "query",
            "description": "System Document ID",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemDocumentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemDocumentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemDocumentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/GetFacilityAgencyDocuments": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get Facility Agency Document List.",
        "parameters": [
          {
            "name": "AgencyId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetFacilityAgencyDocumentsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFacilityAgencyDocumentsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFacilityAgencyDocumentsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/SaveFacilityAgencyDocument": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Save Facility Agency Document.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "FacilityAgencyDocumentId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Leave it null when creating a new facility agency document, pass ID when editing an existing facility agency document.",
                    "format": "int32"
                  },
                  "FacilityId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Required if add a new document.",
                    "format": "int32"
                  },
                  "AgencyId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Required when adding a new document.",
                    "format": "int32"
                  },
                  "DocumentId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Required when adding a new document.",
                    "format": "int32"
                  },
                  "ExpireDate": {
                    "type": "string",
                    "description": "Expiration Date, it's required if selected document is core document.",
                    "format": "date"
                  },
                  "Document": {
                    "type": "string",
                    "description": "Document to Upload, it's required when adding a new document.",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "FacilityAgencyDocumentId": {
                  "style": "form"
                },
                "FacilityId": {
                  "style": "form"
                },
                "AgencyId": {
                  "style": "form"
                },
                "DocumentId": {
                  "style": "form"
                },
                "ExpireDate": {
                  "style": "form"
                },
                "Document": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveFacilityAgencyDocumentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveFacilityAgencyDocumentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveFacilityAgencyDocumentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/DeleteFacilityAgencyDocument": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Delete Facility Agency Document.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteFacilityAgencyDocumentRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteFacilityAgencyDocumentRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteFacilityAgencyDocumentRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteFacilityAgencyDocumentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteFacilityAgencyDocumentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteFacilityAgencyDocumentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/DownloadFacilityAgencyDocument": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Download Facility Agency Document.",
        "parameters": [
          {
            "name": "FacilityAgencyDocumentId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetFacilityAgencyDocumentsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFacilityAgencyDocumentsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFacilityAgencyDocumentsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Facilities/GetFacilitiesBySystemId": {
      "get": {
        "tags": [
          "Facilities"
        ],
        "summary": "Get Facilities by System Id",
        "description": "Sample request:\r\n            \r\n    GET ​/api/Facilities/GetFacilitiesBySystemId?SystemId=335",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "description": "Represents the unique identifier for a system.\r\nThis property is required and must be a positive integer greater than or equal to 1.",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Active",
            "in": "query",
            "description": "Represents the active status of the facility.\r\nThis property indicates whether the facility is active or inactive.\r\nSet the force value to NULL if you want to specify both.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Facilities/GetFacilities": {
      "get": {
        "tags": [
          "Facilities"
        ],
        "summary": "Get Facilities",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Facilities/GetFacilitiesByProgram": {
      "get": {
        "tags": [
          "Facilities"
        ],
        "summary": "Get Facilities by Program",
        "parameters": [
          {
            "name": "ProgramId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Facilities/GetFacilitiesByPrograms": {
      "get": {
        "tags": [
          "Facilities"
        ],
        "summary": "Get Facilities by Program Ids",
        "parameters": [
          {
            "name": "ProgramIds",
            "in": "query",
            "required": true,
            "schema": {
              "minItems": 1,
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseModelOfSelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseModelOfSelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseModelOfSelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/FAQ/SaveFAQ": {
      "post": {
        "tags": [
          "FAQ"
        ],
        "summary": "Creates a new or updates an existing record of FAQ (Frequently Asked Questions).",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "FaqName"
                ],
                "type": "object",
                "properties": {
                  "FaqId": {
                    "type": "integer",
                    "description": "An optional FAQ Id to update.",
                    "format": "int32"
                  },
                  "SystemId": {
                    "type": "integer",
                    "description": "An optional system Id of the FAQ.",
                    "format": "int32"
                  },
                  "FaqName": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "The name of the FAQ."
                  },
                  "Description": {
                    "maxLength": 500,
                    "type": "string",
                    "description": "The description of the FAQ."
                  },
                  "Attachment": {
                    "type": "string",
                    "description": "The attachment of the FAQ.",
                    "format": "binary"
                  },
                  "FaqIsActive": {
                    "type": "boolean",
                    "description": "The active status of the FAQ."
                  },
                  "ShowToAgency": {
                    "type": "boolean",
                    "description": "Show to agency."
                  },
                  "ShowToHospital": {
                    "type": "boolean",
                    "description": "Show to hospital."
                  },
                  "FaqCategoryId": {
                    "type": "integer",
                    "description": "The optional FAQ category Id.",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "FaqId": {
                  "style": "form"
                },
                "SystemId": {
                  "style": "form"
                },
                "FaqName": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "Attachment": {
                  "style": "form"
                },
                "FaqIsActive": {
                  "style": "form"
                },
                "ShowToAgency": {
                  "style": "form"
                },
                "ShowToHospital": {
                  "style": "form"
                },
                "FaqCategoryId": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveFAQResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveFAQResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveFAQResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/FAQ/GetFAQs": {
      "get": {
        "tags": [
          "FAQ"
        ],
        "summary": "Gets the paginated list of FAQs.",
        "description": "The supported sort fields: Name, DateCreated, Active",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "description": "FAQ name to search.",
            "schema": {
              "maxLength": 100,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "Active",
            "in": "query",
            "description": "Active, pass null to get all FAQs, pass true to get active FAQs only, pass false to get inactive FAQs.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ShowAgency",
            "in": "query",
            "description": "Show agency to the list.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ShowHospital",
            "in": "query",
            "description": "Show hospital to the list.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseModelOfGetFAQsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseModelOfGetFAQsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseModelOfGetFAQsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/FAQ/GetFAQById": {
      "get": {
        "tags": [
          "FAQ"
        ],
        "summary": "Gets the specific FAQ by Id.",
        "parameters": [
          {
            "name": "faqId",
            "in": "query",
            "description": "The Id of the FAQ to search.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseModelOfGetFAQByIdResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseModelOfGetFAQByIdResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseModelOfGetFAQByIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/FAQ/DownloadFAQAttachment": {
      "post": {
        "tags": [
          "FAQ"
        ],
        "summary": "Downloads the FAQ attachment.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetFAQAttachmentFileRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetFAQAttachmentFileRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetFAQAttachmentFileRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/FAQ/DeleteFAQ": {
      "post": {
        "tags": [
          "FAQ"
        ],
        "summary": "Deletes the FAQ by Id (soft deletion).",
        "requestBody": {
          "description": "The Id of the FAQ to delete.",
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/FAQCategory/GetFaqCategories": {
      "get": {
        "tags": [
          "FAQCategory"
        ],
        "summary": "Gets the list of FAQ categories.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseModelOfSelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseModelOfSelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseModelOfSelectableItems"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Invoicing/GetInvoicePeriodList": {
      "get": {
        "tags": [
          "Invoicing"
        ],
        "summary": "Get Hospital Invoice Periods, sorting fields supported: \"FacilityID\", \"FacilityName\", \"BillingGroupID\",\"BillingGroupName\", \"SystemName\", \"StartDate\", \"EndDate\"",
        "parameters": [
          {
            "name": "FacilityId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "BillingGroupId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsInvoicedOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalInvoicePeriodResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalInvoicePeriodResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalInvoicePeriodResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Invoicing/DeleteInvoicePeriod": {
      "post": {
        "tags": [
          "Invoicing"
        ],
        "summary": "Delete Hospital Invoice Period By Invoice Period ID",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteInvoicePeriodRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteInvoicePeriodRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteInvoicePeriodRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Invoicing/ReOpenInvoicePeriod": {
      "post": {
        "tags": [
          "Invoicing"
        ],
        "summary": "Re-Open Invoice Period By Invoice Period ID",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ReOpenInvoicePeriodRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ReOpenInvoicePeriodRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ReOpenInvoicePeriodRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Invoicing/SaveInvoicePeriod": {
      "post": {
        "tags": [
          "Invoicing"
        ],
        "summary": "Save an Invoice Period",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveInvoicePeriodRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveInvoicePeriodRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveInvoicePeriodRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Invoicing/GetBillingGroupsSummary": {
      "get": {
        "tags": [
          "Invoicing"
        ],
        "summary": "Gets the list of billing groups within the system Id.",
        "parameters": [
          {
            "name": "BillingGroupName",
            "in": "query",
            "description": "The billing group name to filter.",
            "schema": {
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "BillingGroupStatus",
            "in": "query",
            "description": "The billing group status to filter. Value 0 stands for inactive, 1 stands for active. The default value is null (all).",
            "schema": {
              "maximum": 1,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityId",
            "in": "query",
            "description": "The facility Id to filter.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitId",
            "in": "query",
            "description": "The unit Id to filter.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "BillingGroupTypeId",
            "in": "query",
            "description": "The billing group type (-1 - All, 1 - Contracts, 2 - Facility).",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBillingGroupsSummaryItemResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBillingGroupsSummaryItemResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBillingGroupsSummaryItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Invoicing/GetBillingGroups": {
      "get": {
        "tags": [
          "Invoicing"
        ],
        "summary": "Gets the list of billing groups (only Id and Name) within the system Id.",
        "parameters": [
          {
            "name": "activeBillingGroupStatus",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseModelOfSelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseModelOfSelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseModelOfSelectableItems"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Invoicing/GetBillingGroupDropdown": {
      "get": {
        "tags": [
          "Invoicing"
        ],
        "summary": "Get the list of billing groups for UI Dropdown",
        "parameters": [
          {
            "name": "IsContractOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsActiveOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseModelOfSelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseModelOfSelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseModelOfSelectableItems"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Invoicing/GetInvoiceList": {
      "get": {
        "tags": [
          "Invoicing"
        ],
        "summary": "Get List of Hospital Invoices, sorting fields supported: \"StatementID\", \"FacilityID\", \"StartDate\", \"EndDate\", \"InvoiceNo\", \"Filename\", \"IsArchived\", \"StatementDate\", \"AgencyID\", \"AdminName\", \"AdminEmail\", \"PONumber\", \"GrandTotal\", \"TotalHours\", \"RunByAgencyContactID\", \"AgencyContactName\", \"AgencyContactEmail\", \"AgencyName\", \"AgencyUserEmail\", \"IsApproved\", \"ApprovedByAdminID\", \"ApprovedName\", \"DateTimeApprovedOn\", \"IsRejected\"",
        "description": "v1 /HospitalAdmin/Invoicing/AgencyListB.aspx",
        "parameters": [
          {
            "name": "AgencyId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "BillingGroupId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "InvoiceNo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PONumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IsInvoiceNotViewed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsApprovedInvoicesOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetInvoiceListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInvoiceListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInvoiceListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetInvoiceListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInvoiceListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInvoiceListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Message/GetPagedInboxList": {
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "Get Paged Message Inbox List",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetPagedInboxListParam"
                  }
                ],
                "description": "Request for getting message inbox list"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetPagedInboxListParam"
                  }
                ],
                "description": "Request for getting message inbox list"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetPagedInboxListParam"
                  }
                ],
                "description": "Request for getting message inbox list"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetMessageListModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMessageListModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMessageListModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Message/GetPagedSentList": {
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "Get Paged Message Sent List",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetPagedSentListParam"
                  }
                ],
                "description": "Request for getting message sent list"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetPagedSentListParam"
                  }
                ],
                "description": "Request for getting message sent list"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetPagedSentListParam"
                  }
                ],
                "description": "Request for getting message sent list"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetMessageListModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMessageListModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMessageListModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Message/GetTopMessageList": {
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "Get Top N Message List",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetTopMessageListParam"
                  }
                ],
                "description": "Request for getting top n message list"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetTopMessageListParam"
                  }
                ],
                "description": "Request for getting top n message list"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetTopMessageListParam"
                  }
                ],
                "description": "Request for getting top n message list"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetTopMessageListModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTopMessageListModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTopMessageListModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Message/ViewMessage": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "View message",
        "parameters": [
          {
            "name": "MessageId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SentMessage",
            "in": "query",
            "description": "Set to false when view message from Inbox, set to true when view message from Sent",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ViewMessageModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ViewMessageModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ViewMessageModel"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ViewMessageModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ViewMessageModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ViewMessageModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Message/DeleteMessages": {
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "Delete message",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteMessageParam"
                  }
                ],
                "description": "Request for DeleteMessage"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteMessageParam"
                  }
                ],
                "description": "Request for DeleteMessage"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteMessageParam"
                  }
                ],
                "description": "Request for DeleteMessage"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteMessageModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteMessageModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteMessageModel"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteMessageModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteMessageModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteMessageModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Message/ReplyMessage": {
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "Reply message - \r\nNo this feature when messages are sent from B4HealthNoticeID.\r\nAgency Nurse does not have this feature.\r\nWhen App Version has DISABLE_AGENCY_MESSAGE_HOSPITAL(286) Agency does not have this feature.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ReplyMessageParam"
                  }
                ],
                "description": "Request for ReplyMessage"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ReplyMessageParam"
                  }
                ],
                "description": "Request for ReplyMessage"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ReplyMessageParam"
                  }
                ],
                "description": "Request for ReplyMessage"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReplyMessageModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplyMessageModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplyMessageModel"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReplyMessageModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplyMessageModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplyMessageModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Message/GetMessageSummary": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "Get number of inbox, number of sent messages, number of new messages",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSummaryModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSummaryModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSummaryModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Message/SendShiftMessage": {
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "Send message regarding a shift",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SendShiftMessageParam"
                  }
                ],
                "description": "Request for SendShiftMessage"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SendShiftMessageParam"
                  }
                ],
                "description": "Request for SendShiftMessage"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SendShiftMessageParam"
                  }
                ],
                "description": "Request for SendShiftMessage"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SendShiftMessageModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendShiftMessageModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendShiftMessageModel"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SendShiftMessageModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendShiftMessageModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendShiftMessageModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Message/SendContractMessage": {
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "Send message regarding a contract",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SendContractMessageParam"
                  }
                ],
                "description": "Request for SendContractMessage"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SendContractMessageParam"
                  }
                ],
                "description": "Request for SendContractMessage"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SendContractMessageParam"
                  }
                ],
                "description": "Request for SendContractMessage"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SendContractMessageModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendContractMessageModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendContractMessageModel"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SendContractMessageModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendContractMessageModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendContractMessageModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Message/SendMessageToSystemPrimaryAdmin": {
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "Send message to system primary admin",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SendMessageToSystemPrimaryAdminParam"
                  }
                ],
                "description": "Request for SendMessageToSystemPrimaryAdmin"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SendMessageToSystemPrimaryAdminParam"
                  }
                ],
                "description": "Request for SendMessageToSystemPrimaryAdmin"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SendMessageToSystemPrimaryAdminParam"
                  }
                ],
                "description": "Request for SendMessageToSystemPrimaryAdmin"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToSystemPrimaryAdminModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToSystemPrimaryAdminModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToSystemPrimaryAdminModel"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToSystemPrimaryAdminModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToSystemPrimaryAdminModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToSystemPrimaryAdminModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Message/SendMessageToNurse": {
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "Agency sends message to agency nurse, or hospital admin sends message to internal nurse",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SendMessageToNurseParam"
                  }
                ],
                "description": "Request for SendMessageToNurse"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SendMessageToNurseParam"
                  }
                ],
                "description": "Request for SendMessageToNurse"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SendMessageToNurseParam"
                  }
                ],
                "description": "Request for SendMessageToNurse"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToNurseModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToNurseModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToNurseModel"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToNurseModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToNurseModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToNurseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Messages/SendMessageToAdministrators": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Send message to Administrator Professionals",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "RecipientType": {
                    "type": "integer",
                    "description": "0 - All Administrator Professionals, 1 - Facility Admin, 2 - Unit Managers",
                    "format": "int32"
                  },
                  "Recipients": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "description": "Selected Recipients(Admin.AdminID)."
                  },
                  "MessageSubject": {
                    "maxLength": 250,
                    "minLength": 1,
                    "type": "string",
                    "description": "MessageSubject"
                  },
                  "MessageBody": {
                    "type": "string",
                    "description": "MessageBody"
                  },
                  "Attachment": {
                    "type": "string",
                    "format": "binary"
                  },
                  "IncludeSender": {
                    "type": "boolean"
                  },
                  "TextMessage": {
                    "type": "boolean",
                    "description": "Send as Text Message.\r\nIf selected 'Yes', the Message may only be 149 characters. \r\nThe audience will be smaller b/c text messaging is only sent to those that have mobile phone number filled in."
                  }
                }
              },
              "encoding": {
                "RecipientType": {
                  "style": "form"
                },
                "Recipients": {
                  "style": "form"
                },
                "MessageSubject": {
                  "style": "form"
                },
                "MessageBody": {
                  "style": "form"
                },
                "Attachment": {
                  "style": "form"
                },
                "IncludeSender": {
                  "style": "form"
                },
                "TextMessage": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToAdministratorsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToAdministratorsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToAdministratorsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToAdministratorsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToAdministratorsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToAdministratorsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Messages/SendMessageToAgencyProfessionals": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Send message to Agency Professionals",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "AgencyId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "format": "int32"
                  },
                  "PositionTypeId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Registry version only.",
                    "format": "int32"
                  },
                  "CareTypeId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Registry version only.",
                    "format": "int32"
                  },
                  "MobileEnrolled": {
                    "type": "boolean",
                    "description": "Registry version only."
                  },
                  "SelectedNurses": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "description": "Selected Agency Professionals."
                  },
                  "MessageSubject": {
                    "maxLength": 250,
                    "minLength": 1,
                    "type": "string",
                    "description": "Message Subject, visible for email message."
                  },
                  "MessageBody": {
                    "type": "string",
                    "description": "Message Body"
                  },
                  "Attachment": {
                    "type": "string",
                    "description": "Visible for registry version and sending as email.",
                    "format": "binary"
                  },
                  "IncludeSender": {
                    "type": "boolean",
                    "description": "Include Your Contact Info? For non-registry version."
                  },
                  "TextMessage": {
                    "type": "boolean",
                    "description": "Send as Text Message.\r\nIf selected 'Yes', the Message may only be 149 characters. \r\nThe audience will be smaller b/c text messaging is only sent to those that have mobile phone number filled in."
                  }
                }
              },
              "encoding": {
                "AgencyId": {
                  "style": "form"
                },
                "PositionTypeId": {
                  "style": "form"
                },
                "CareTypeId": {
                  "style": "form"
                },
                "MobileEnrolled": {
                  "style": "form"
                },
                "SelectedNurses": {
                  "style": "form"
                },
                "MessageSubject": {
                  "style": "form"
                },
                "MessageBody": {
                  "style": "form"
                },
                "Attachment": {
                  "style": "form"
                },
                "IncludeSender": {
                  "style": "form"
                },
                "TextMessage": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToAgencyProfessionalsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToAgencyProfessionalsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToAgencyProfessionalsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToAgencyProfessionalsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToAgencyProfessionalsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToAgencyProfessionalsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Messages/SendMessageToInternalProfessionals": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Send message to Internal Professionals",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "FacilityId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "format": "int32"
                  },
                  "UnitId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "format": "int32"
                  },
                  "PositionTypes": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "CareTypes": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "description": "Visible for JHU only."
                  },
                  "WageCodeId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "format": "int32"
                  },
                  "IncludeAgencies": {
                    "type": "boolean"
                  },
                  "SelectedNurses": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "description": "Selected Internal Professionals."
                  },
                  "MessageSubject": {
                    "maxLength": 250,
                    "minLength": 1,
                    "type": "string",
                    "description": "Message Subject, visible for email message."
                  },
                  "MessageBody": {
                    "type": "string",
                    "description": "Message Body"
                  },
                  "Attachment": {
                    "type": "string",
                    "description": "Visible for registry version and sending as email.",
                    "format": "binary"
                  },
                  "IncludeSender": {
                    "type": "boolean",
                    "description": "Include Your Contact Info? For non-registry version."
                  },
                  "TextMessage": {
                    "type": "boolean",
                    "description": "Send as Text Message.\r\nIf selected 'Yes', the Message may only be 149 characters. \r\nThe audience will be smaller b/c text messaging is only sent to those that have mobile phone number filled in."
                  }
                }
              },
              "encoding": {
                "FacilityId": {
                  "style": "form"
                },
                "UnitId": {
                  "style": "form"
                },
                "PositionTypes": {
                  "style": "form"
                },
                "CareTypes": {
                  "style": "form"
                },
                "WageCodeId": {
                  "style": "form"
                },
                "IncludeAgencies": {
                  "style": "form"
                },
                "SelectedNurses": {
                  "style": "form"
                },
                "MessageSubject": {
                  "style": "form"
                },
                "MessageBody": {
                  "style": "form"
                },
                "Attachment": {
                  "style": "form"
                },
                "IncludeSender": {
                  "style": "form"
                },
                "TextMessage": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToInternalProfessionalsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToInternalProfessionalsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToInternalProfessionalsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToInternalProfessionalsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToInternalProfessionalsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToInternalProfessionalsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Messages/GetInternalProfessionalListforMessages": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Get Professionals",
        "parameters": [
          {
            "name": "FaciltyID",
            "in": "query",
            "description": "Facility ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitID",
            "in": "query",
            "description": "Unit ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "WageCodeID",
            "in": "query",
            "description": "Wage Code ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PositionTypeIDs",
            "in": "query",
            "description": "Position Type IDs, comma separated IDs",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CareTypeIDs",
            "in": "query",
            "description": "Care Type IDs, comma separated IDs",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SearchFirstName",
            "in": "query",
            "description": "Search First Name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SearchLastName",
            "in": "query",
            "description": "Search Last Name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SendAsTextMessage",
            "in": "query",
            "description": "SendAsTextMessage, returns receivers with mobile phone number is not empty",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "UserSendEmail",
            "in": "query",
            "description": "UserSendEmail, returns receivers with email is not empty",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfessionalListforMessagesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfessionalListforMessagesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfessionalListforMessagesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Messages/GetAdminListforMessages": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Get Admins, sorting fields supported: \"User ID\",\"Admin ID\",\"First Name\", \"Last Name\", \"Phone\", \"Email\"",
        "parameters": [
          {
            "name": "Mode",
            "in": "query",
            "description": "Modes are\r\n0 : All\r\n1 : Admin\r\n2 : Unit Managers",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchFirstName",
            "in": "query",
            "description": "Search Name for First name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SearchLastName",
            "in": "query",
            "description": "Search Name for Last name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SendAsTextMessage",
            "in": "query",
            "description": "SendAsTextMessage, returns receivers with mobile phone number is not empty",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "UserSendEmail",
            "in": "query",
            "description": "UserSendEmail, returns receivers with email is not empty",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAdminListforMessagesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAdminListforMessagesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAdminListforMessagesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Messages/SendMessageToAgencies": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Send message to Agencies",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "FilterType": {
                    "type": "integer",
                    "description": "Visible for TNAA and NU_WEST.\r\n\r\n0 - By Program, 1 - By Agency",
                    "format": "int32"
                  },
                  "FacilityId": {
                    "type": "integer",
                    "description": "For registry version.",
                    "format": "int32"
                  },
                  "SelectedPrograms": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "description": "For registry version."
                  },
                  "IncludeAllAgencyContacts": {
                    "type": "boolean",
                    "description": "For JHU only, and sending as email."
                  },
                  "SelectedAgencies": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "description": "Selected Agencies."
                  },
                  "MessageSubject": {
                    "maxLength": 250,
                    "minLength": 1,
                    "type": "string",
                    "description": "Message Subject, visible for email message."
                  },
                  "MessageBody": {
                    "type": "string",
                    "description": "Message Body"
                  },
                  "Attachment": {
                    "type": "string",
                    "description": "Visible for registry version and sending as email.",
                    "format": "binary"
                  },
                  "IncludeSender": {
                    "type": "boolean",
                    "description": "Include Your Contact Info? For non-registry version."
                  },
                  "TextMessage": {
                    "type": "boolean",
                    "description": "Send as Text Message.\r\nIf selected 'Yes', the Message may only be 149 characters. \r\nThe audience will be smaller b/c text messaging is only sent to those that have mobile phone number filled in."
                  }
                }
              },
              "encoding": {
                "FilterType": {
                  "style": "form"
                },
                "FacilityId": {
                  "style": "form"
                },
                "SelectedPrograms": {
                  "style": "form"
                },
                "IncludeAllAgencyContacts": {
                  "style": "form"
                },
                "SelectedAgencies": {
                  "style": "form"
                },
                "MessageSubject": {
                  "style": "form"
                },
                "MessageBody": {
                  "style": "form"
                },
                "Attachment": {
                  "style": "form"
                },
                "IncludeSender": {
                  "style": "form"
                },
                "TextMessage": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToAgenciesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToAgenciesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToAgenciesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToAgenciesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToAgenciesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageToAgenciesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Messages/GetAgencyListforMessages": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Get Agency, sorting field \"Agency ID\", \"Agency Name\", \"Phone\", \"Email\"",
        "parameters": [
          {
            "name": "ProgramIDs",
            "in": "query",
            "description": "Program IDs, comma separated IDs",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FacilityID",
            "in": "query",
            "description": "Facility ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchName",
            "in": "query",
            "description": "Search Name for Agency Name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SendAsTextMessage",
            "in": "query",
            "description": "SendAsTextMessage, returns receivers with mobile phone number is not empty",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "UserSendEmail",
            "in": "query",
            "description": "UserSendEmail, returns receivers with email is not empty",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyListforMessagesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyListforMessagesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyListforMessagesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Messages/GetAgencyProfessionalListforMessages": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Get Agency Professional, sorting field \"Nurse Id\", \"User Id\", \"First Name\", \"Last Name\"",
        "parameters": [
          {
            "name": "AgencyIDs",
            "in": "query",
            "description": "Agency IDs, comma separated value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PositionTypeID",
            "in": "query",
            "description": "Position Type",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CareTypeID",
            "in": "query",
            "description": "Care Type",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MobileEnrolled",
            "in": "query",
            "description": "Mobile Enrolled",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SearchFirstName",
            "in": "query",
            "description": "Search Name for First Name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SearchLastName",
            "in": "query",
            "description": "Search Name for Last Name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SendAsTextMessage",
            "in": "query",
            "description": "SendAsTextMessage, returns receivers with mobile phone number is not empty",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "UserSendEmail",
            "in": "query",
            "description": "UserSendEmail, returns receivers with email is not empty",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyProfessionalListforMessagesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyProfessionalListforMessagesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyProfessionalListforMessagesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Messages/ViewMessageAttachment": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "View message attachment.",
        "parameters": [
          {
            "name": "AttachmentId",
            "in": "query",
            "description": "Encrypted attachment id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/Orders/GetProfessionalOrders": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Get registry shift and contract for professional based on order status",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetProfessionalOrdersParam"
                  }
                ],
                "description": "Request for GetProfessionalOrders"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetProfessionalOrdersParam"
                  }
                ],
                "description": "Request for GetProfessionalOrders"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetProfessionalOrdersParam"
                  }
                ],
                "description": "Request for GetProfessionalOrders"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfessionalOrdersModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfessionalOrdersModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfessionalOrdersModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Orders/GetInternalProfessionalOrders": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Get shift and contract for internal professional based on order status",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetInternalProfessionalOrdersRequest"
                  }
                ],
                "description": "Request for GetInternalProfessionalOrders"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetInternalProfessionalOrdersRequest"
                  }
                ],
                "description": "Request for GetInternalProfessionalOrders"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetInternalProfessionalOrdersRequest"
                  }
                ],
                "description": "Request for GetInternalProfessionalOrders"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalProfessionalOrdersResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalProfessionalOrdersResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalProfessionalOrdersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Orders/GetProfessionalOrders": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Get shift and contract for professional based on order status",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetProfessionalOrdersParam"
                  }
                ],
                "description": "Request for GetProfessionalOrders"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetProfessionalOrdersParam"
                  }
                ],
                "description": "Request for GetProfessionalOrders"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetProfessionalOrdersParam"
                  }
                ],
                "description": "Request for GetProfessionalOrders"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfessionalOrdersModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfessionalOrdersModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfessionalOrdersModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Orders/Summary": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get shift/contract summary for current logged-in Agency User.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyOrderSummaryModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyOrderSummaryModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyOrderSummaryModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Orders/GetAwardedOrders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get awarded orders for current Agency User, supported sorting fields: \"IsContract\", \"System\", \"Facility\", \"Unit\", \"Position\", \"StartDateTime\", \"DateAwarded\", \"Professional\"",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "description": "System that orders belong to",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Start Date, return orders where order start date time is later than StartDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "End Date, return orders where order end date time is earlier than EndDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAwardedOrdersResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAwardedOrdersResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAwardedOrdersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Orders/GetProfessionalOrders": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Get shift and contract for professional based on order status",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetProfessionalOrdersParam"
                  }
                ],
                "description": "Request for GetProfessionalOrders"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetProfessionalOrdersParam"
                  }
                ],
                "description": "Request for GetProfessionalOrders"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetProfessionalOrdersParam"
                  }
                ],
                "description": "Request for GetProfessionalOrders"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfessionalOrdersModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfessionalOrdersModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfessionalOrdersModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Orders/GetEmploymentHistory": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get Employment History.",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "description": "SystemId",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DateType",
            "in": "query",
            "description": "Date Type in month",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Constants_DateTypeInMonth"
                }
              ]
            }
          },
          {
            "name": "IncludeCurrentMonth",
            "in": "query",
            "description": "when IncludeCurrentMonth is true employeement count of  current month will be included in the response",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetEmploymentHistoryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEmploymentHistoryResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEmploymentHistoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/PeopleGroup/GetPeopleGroup": {
      "get": {
        "tags": [
          "PeopleGroup"
        ],
        "summary": "Gets the list of people group.",
        "parameters": [
          {
            "name": "PositionTypeId",
            "in": "query",
            "description": "The Id of the position type to filter.",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IdNamePairs"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdNamePairs"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdNamePairs"
                }
              }
            }
          }
        }
      }
    },
    "/api/PositionType/GetPositionTypes": {
      "get": {
        "tags": [
          "PositionType"
        ],
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "description": "SystemId, for hospital users it is from access token, for other users it is from request",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ForAgency",
            "in": "query",
            "description": "Pass true if it is related to agency or agency professional when we need to filter based on System_Filter_By_ProgramAgencyFacility(283)",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IdNamePairs"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdNamePairs"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdNamePairs"
                }
              }
            }
          }
        }
      }
    },
    "/api/PositionType/GetPositionTypesByProgramId": {
      "get": {
        "tags": [
          "PositionType"
        ],
        "summary": "Gets the position type by program Id and logged in user's system Id.",
        "parameters": [
          {
            "name": "ProgramId",
            "in": "query",
            "description": "Gets or sets the program Id.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitId",
            "in": "query",
            "description": "Gets or sets the unit Id.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IdNamePairs"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdNamePairs"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdNamePairs"
                }
              }
            }
          }
        }
      }
    },
    "/api/PositionType/GetJobCodes": {
      "get": {
        "tags": [
          "PositionType"
        ],
        "summary": "GetJobCodes should be called if System has TNAA_MULTICARE(187) or System has custom config enabled for DROPDOWN_CARE_TYPE_BY_POSITION_BASED_ON_UNIT(145) and CONTRACT_SHOW_JOB_CODE(379)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetJobCodesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetJobCodesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetJobCodesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetJobCodesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetJobCodesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetJobCodesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/PositionTypeCareType/GetJobCategory": {
      "get": {
        "tags": [
          "PositionTypeCareType"
        ],
        "summary": "Get Job Category",
        "parameters": [
          {
            "name": "PositionTypeId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CareTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetJobCategoryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetJobCategoryResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetJobCategoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetJobCategoryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetJobCategoryResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetJobCategoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/PowerBIReport/GetPowerBIReportSetting": {
      "get": {
        "tags": [
          "PowerBIReport"
        ],
        "summary": "Get embed report configuration.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PowerBIReportSettingResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PowerBIReportSettingResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PowerBIReportSettingResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/Professionals/GetNurses": {
      "get": {
        "tags": [
          "Professionals"
        ],
        "summary": "Get list of registry nurses, supported sorting fields: UserId, NurseId, AgencyId, AgencyName, FirstName, LastName, PositionType, LastSignIn",
        "parameters": [
          {
            "name": "SearchFirstName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SearchLastName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryNursesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryNursesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryNursesResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryNursesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryNursesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryNursesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/Professionals/GetEncryptedPassword": {
      "post": {
        "tags": [
          "Professionals"
        ],
        "summary": "Gets the encrypted password of the given user Id within the logged in user's app version Id.",
        "requestBody": {
          "description": "The user Id to get.",
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/Professionals/GetPersonalInformation": {
      "get": {
        "tags": [
          "Professionals"
        ],
        "summary": "Get personal information.",
        "parameters": [
          {
            "name": "NurseId",
            "in": "query",
            "description": "The Id of the nurse to filter.",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryProfessionalPersonalProfileResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryProfessionalPersonalProfileResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryProfessionalPersonalProfileResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Professionals/SearchProfessionals": {
      "get": {
        "tags": [
          "Professionals"
        ],
        "summary": "Hospital Search Professionals, sorting fields supported: \"FirstName\",\"LastName\",\"PositionType\",\"System\",\"LastSignin\"",
        "parameters": [
          {
            "name": "FirstName",
            "in": "query",
            "description": "Professional First Name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LastName",
            "in": "query",
            "description": "Professional Last Name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SearchProfessionalsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchProfessionalsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchProfessionalsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Professionals/GetAgencyProfessionalPersonalProfile": {
      "get": {
        "tags": [
          "Professionals"
        ],
        "summary": "Get agency professional personal profile.",
        "parameters": [
          {
            "name": "AgencyId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "NurseId",
            "in": "query",
            "description": "Nurse id.",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyProfessionalPersonalProfileResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyProfessionalPersonalProfileResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyProfessionalPersonalProfileResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Professionals/GetApprovedFacilities": {
      "get": {
        "tags": [
          "Professionals"
        ],
        "summary": "Get agency professional's approved facilities.",
        "parameters": [
          {
            "name": "AgencyId",
            "in": "query",
            "description": "AgencyId",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "NurseId",
            "in": "query",
            "description": "Agency Professional's NurseId",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SystemFacilityTreeModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemFacilityTreeModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemFacilityTreeModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Professionals/UpdateApprovedFacilities": {
      "post": {
        "tags": [
          "Professionals"
        ],
        "summary": "Update agency professional's approved facilities.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAgencyProfessionalApprovedFacilitiesRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAgencyProfessionalApprovedFacilitiesRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAgencyProfessionalApprovedFacilitiesRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAgencyProfessionalApprovedFacilitiesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAgencyProfessionalApprovedFacilitiesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAgencyProfessionalApprovedFacilitiesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Professionals/UpdateEducation": {
      "post": {
        "tags": [
          "Professionals"
        ],
        "summary": "Update agency professional's education.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAgencyProfessionalEducationRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAgencyProfessionalEducationRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAgencyProfessionalEducationRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAgencyProfessionalEducationResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAgencyProfessionalEducationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAgencyProfessionalEducationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Professionals/UpdateJHEDStatus": {
      "post": {
        "tags": [
          "Professionals"
        ],
        "summary": "Update agency professional's JHED Status.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAgencyProfessionalJHEDStatusRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAgencyProfessionalJHEDStatusRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAgencyProfessionalJHEDStatusRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAgencyProfessionalJHEDStatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAgencyProfessionalJHEDStatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAgencyProfessionalJHEDStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Professionals/UpdateBadgeID2": {
      "post": {
        "tags": [
          "Professionals"
        ],
        "summary": "Update agency professional's Badge ID #2.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAgencyProfessionalBadgeID2Request"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAgencyProfessionalBadgeID2Request"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAgencyProfessionalBadgeID2Request"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAgencyProfessionalBadgeID2Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAgencyProfessionalBadgeID2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAgencyProfessionalBadgeID2Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Professionals/UpdateUserIntegrationKey": {
      "post": {
        "tags": [
          "Professionals"
        ],
        "summary": "Update agency professional's User Integration Key.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAgencyProfessionalUserIntegrationKeyRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAgencyProfessionalUserIntegrationKeyRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAgencyProfessionalUserIntegrationKeyRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAgencyProfessionalUserIntegrationKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAgencyProfessionalUserIntegrationKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAgencyProfessionalUserIntegrationKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Professionals/UpdateBusinessUnitAndEmail": {
      "post": {
        "tags": [
          "Professionals"
        ],
        "summary": "Update agency professional's Business Unit and Business Email.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAgencyProfessionalBusinessUnitAndEmailRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAgencyProfessionalBusinessUnitAndEmailRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAgencyProfessionalBusinessUnitAndEmailRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAgencyProfessionalBusinessUnitAndEmailResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAgencyProfessionalBusinessUnitAndEmailResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAgencyProfessionalBusinessUnitAndEmailResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Professionals/UpdateLicense": {
      "post": {
        "tags": [
          "Professionals"
        ],
        "summary": "Update agency professional's License #.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAgencyProfessionalLicenseRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAgencyProfessionalLicenseRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAgencyProfessionalLicenseRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAgencyProfessionalLicenseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAgencyProfessionalLicenseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAgencyProfessionalLicenseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Professionals/GetPublicToAgencyComments": {
      "get": {
        "tags": [
          "Professionals"
        ],
        "summary": "Get public comments for agency professional.",
        "parameters": [
          {
            "name": "NurseId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AgencyId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetPublicToAgencyCommentsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPublicToAgencyCommentsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPublicToAgencyCommentsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Professionals/GetPrivateComments": {
      "get": {
        "tags": [
          "Professionals"
        ],
        "summary": "Get private comments for the specified Agency/Internal Professional.",
        "parameters": [
          {
            "name": "NurseId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemPrivateCommentsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemPrivateCommentsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemPrivateCommentsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Professionals/SavePrivateComment": {
      "post": {
        "tags": [
          "Professionals"
        ],
        "summary": "Save private/public comments.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveSystemPrivateCommentRequest"
                  }
                ],
                "description": "Request of SaveSystemPrivateComment"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveSystemPrivateCommentRequest"
                  }
                ],
                "description": "Request of SaveSystemPrivateComment"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveSystemPrivateCommentRequest"
                  }
                ],
                "description": "Request of SaveSystemPrivateComment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveSystemPrivateCommentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveSystemPrivateCommentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveSystemPrivateCommentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Professionals/GetPublicComments": {
      "get": {
        "tags": [
          "Professionals"
        ],
        "summary": "Get public comments.",
        "parameters": [
          {
            "name": "NurseId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AgencyId",
            "in": "query",
            "description": "For Hospital Admin, Agency Comments.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetPublicCommentsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPublicCommentsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPublicCommentsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Professionals/GetEvaluationTrackingComments": {
      "get": {
        "tags": [
          "Professionals"
        ],
        "summary": "Get Performance Evaluation Tracking Comments for this professional.",
        "parameters": [
          {
            "name": "NurseId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AgencyId",
            "in": "query",
            "description": "For Internal Nurse, pass null.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetEvaluationTrackingCommentsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEvaluationTrackingCommentsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEvaluationTrackingCommentsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Professionals/GetInternalProfessionalDetails": {
      "get": {
        "tags": [
          "Professionals"
        ],
        "summary": "Get Internal Professional Details.",
        "parameters": [
          {
            "name": "NurseId",
            "in": "query",
            "description": "Internal Nurse id.",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetInternalProfessionalDetailsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInternalProfessionalDetailsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInternalProfessionalDetailsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Professionals/UpdateInternalProfessionalStatus": {
      "post": {
        "tags": [
          "Professionals"
        ],
        "summary": "Update Internal Professional Status.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateInternalProfessionalStatusRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateInternalProfessionalStatusRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateInternalProfessionalStatusRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInternalProfessionalStatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInternalProfessionalStatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInternalProfessionalStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Professionals/UpdateInternalProfessionalTimeAttendanceStatus": {
      "post": {
        "tags": [
          "Professionals"
        ],
        "summary": "Update Internal Professional TimeAttendance Status.",
        "description": "For JHU, update the professional's `JHED Status`.\r\n\r\nFor other systems, update the professional's `T&A Status`.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateInternalProfessionalTimeAttendanceStatusRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateInternalProfessionalTimeAttendanceStatusRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateInternalProfessionalTimeAttendanceStatusRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInternalProfessionalTimeAttendanceStatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInternalProfessionalTimeAttendanceStatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInternalProfessionalTimeAttendanceStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Professionals/UpdateInternalProfessionalPersonalProfile": {
      "post": {
        "tags": [
          "Professionals"
        ],
        "summary": "Allow HospAdmin to Edit the Personal Profile if the System has the setting HOSPADMIN_EDIT_NURSE_PERSONAL_PROFILE(35).",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateInternalProfessionalPersonalProfileRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateInternalProfessionalPersonalProfileRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateInternalProfessionalPersonalProfileRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInternalProfessionalPersonalProfileResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInternalProfessionalPersonalProfileResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInternalProfessionalPersonalProfileResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Professionals/UpdateInternalProfessionalProfile": {
      "post": {
        "tags": [
          "Professionals"
        ],
        "summary": "Allow HospAdmin to Edit the Professional Profile if the System has the setting HOSPADMIN_EDIT_NURSE_PROFESSIONAL_PROFILE(17).",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateInternalProfessionalProfileRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateInternalProfessionalProfileRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateInternalProfessionalProfileRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInternalProfessionalProfileResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInternalProfessionalProfileResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInternalProfessionalProfileResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Professionals/SavePublicComment": {
      "post": {
        "tags": [
          "Professionals"
        ],
        "summary": "Save public comment.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SavePublicCommentRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SavePublicCommentRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SavePublicCommentRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveCommentModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveCommentModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveCommentModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Professionals/GetForwardLogs": {
      "get": {
        "tags": [
          "Professionals"
        ],
        "parameters": [
          {
            "name": "AgencyId",
            "in": "query",
            "description": "Gets or sets the agency Id to filter the forward logs.",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "NurseId",
            "in": "query",
            "description": "Gets or sets the nurse Id to filter the forward logs.",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SenderId",
            "in": "query",
            "description": "Gets or sets the sender Id to filter the forward logs. (Optional and the default value is -1 for all)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfessionalForwardLogsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfessionalForwardLogsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfessionalForwardLogsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Professionals/Summary": {
      "get": {
        "tags": [
          "Professionals"
        ],
        "summary": "Get agency professional/nurse summary.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyNurseSummaryModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyNurseSummaryModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyNurseSummaryModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Professionals/SaveProfessionalInformation": {
      "post": {
        "tags": [
          "Professionals"
        ],
        "summary": "Save professional information.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveProfessionalInformationRequest"
                  }
                ],
                "description": "Request for Professional Information"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveProfessionalInformationRequest"
                  }
                ],
                "description": "Request for Professional Information"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveProfessionalInformationRequest"
                  }
                ],
                "description": "Request for Professional Information"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveProfessionalInformationResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveProfessionalInformationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveProfessionalInformationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Professionals/GetProfessionalInformation": {
      "get": {
        "tags": [
          "Professionals"
        ],
        "summary": "Get professional information.",
        "parameters": [
          {
            "name": "NurseId",
            "in": "query",
            "description": "Nurse id.",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfessionalInformationResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfessionalInformationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfessionalInformationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Professionals/SavePersonalInformation": {
      "post": {
        "tags": [
          "Professionals"
        ],
        "summary": "Save personal information.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SavePersonalInformationRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SavePersonalInformationRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SavePersonalInformationRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SavePersonalInformationResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavePersonalInformationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavePersonalInformationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Professionals/GetPersonalInformation": {
      "get": {
        "tags": [
          "Professionals"
        ],
        "summary": "Get personal information.",
        "parameters": [
          {
            "name": "NurseId",
            "in": "query",
            "description": "The Id of the nurse to filter.",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetPersonalInformationResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPersonalInformationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPersonalInformationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Professionals/GetApprovedFacilities": {
      "get": {
        "tags": [
          "Professionals"
        ],
        "summary": "Get professional's approved facilities.",
        "parameters": [
          {
            "name": "NurseId",
            "in": "query",
            "description": "Professional's NurseId",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SystemFacilityTreeModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemFacilityTreeModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemFacilityTreeModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Professionals/GetRequestTimeOffs": {
      "get": {
        "tags": [
          "Professionals"
        ],
        "summary": "Get professional's request time offs.",
        "parameters": [
          {
            "name": "NurseId",
            "in": "query",
            "description": "Professional's NurseId",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequestTimeOffsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequestTimeOffsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequestTimeOffsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Professionals/GetProfessionals": {
      "get": {
        "tags": [
          "Professionals"
        ],
        "summary": "Get professional list of Agency Spported sort field names:  \"UserLastName\", \"PositionType\", \"CareType\", \"Mobile\", \"Email\", \"SecondaryEmail\", \"UMMSEmployeeID\", \r\nsort direction: 0 - Ascending, 1 - Descending",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "description": "System ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityId",
            "in": "query",
            "description": "Facility ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PositionTypeId",
            "in": "query",
            "description": "Position Type ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CareTypeId",
            "in": "query",
            "description": "Care Type ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "NOT FOR VMS_UMMS_STAFFING(agencyId=3939) and IsRegistry = Approved(1), Inactive(2), Mini Profile(3), In Process(4), Pending(5), Credentialed(6), All(0)\r\nVMS_UMMS_STAFFING(agencyId=3939) = In Process(4), Pending Confirmation(5), Credentialed(6), Terminated(9), Inactive (LOA/Inactivity)(10), Inactive (Non-Compliant)(11), All(0)\r\nNOT FOR VMS_UMMS_STAFFING(agencyId=3939) and NOT IsRegistry = Active(1), Inactive(2), All (0)\r\n\r\nValue should be comma-delimited. 0 should be default for All. For Multiple : 1,2 etc",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "WithExpiredCredential",
            "in": "query",
            "description": "WithPendingCredential boolean required, default to false, visible only for app version B4HEALTH_VMS(appVersionId = 31),",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "WithPendingCredential",
            "in": "query",
            "description": "WithPendingCredential boolean required, default to false, visible only for registry version \r\nand dbo.AgencyMobilePhoneConfig.StageAgencyNurseUploadedCredential is true,",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Initial",
            "in": "query",
            "description": "Initial string required, max length is 3, first letter of professional's last name, when 'All' is passed ignore this filter.",
            "required": true,
            "schema": {
              "maxLength": 3,
              "type": "string"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyProfessionalListModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyProfessionalListModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyProfessionalListModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Professionals/GetProfessionalByName": {
      "get": {
        "tags": [
          "Professionals"
        ],
        "summary": "Get professional list by name, Spported sort field names:  \"UserLastName\", \"PositionType\", \"CareType\", \"Mobile\", \"Email\", \"SecondaryEmail\", \"EmployeeID\", \"UMMSEmployeeID\", \r\nsort direction: 0 - Ascending, 1 - Descending",
        "parameters": [
          {
            "name": "FirstName",
            "in": "query",
            "description": "First name of professional",
            "schema": {
              "maxLength": 25,
              "type": "string"
            }
          },
          {
            "name": "LastName",
            "in": "query",
            "description": "Last name of professional",
            "required": true,
            "schema": {
              "maxLength": 25,
              "type": "string"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyProfessionalListModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyProfessionalListModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyProfessionalListModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Professionals/DownloadProfessionals": {
      "get": {
        "tags": [
          "Professionals"
        ],
        "summary": "Download Professionals as Excel",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "description": "System ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityId",
            "in": "query",
            "description": "Facility ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PositionTypeId",
            "in": "query",
            "description": "Position Type ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CareTypeId",
            "in": "query",
            "description": "Care Type ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "NOT FOR VMS_UMMS_STAFFING(agencyId=3939) and IsRegistry = Approved(1), Inactive(2), Mini Profile(3), In Process(4), Pending(5), Credentialed(6), All(0)\r\nVMS_UMMS_STAFFING(agencyId=3939) = In Process(4), Pending Confirmation(5), Credentialed(6),Terminated(9), Inactive (LOA/Inactivity)(10), Inactive (Non-Compliant)(10), All(0)\r\nNOT FOR VMS_UMMS_STAFFING(agencyId=3939) and NOT IsRegistry = Active(1), Inactive(2), All (0)",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "WithExpiredCredential",
            "in": "query",
            "description": "WithPendingCredential boolean required, default to false, visible only for app version B4HEALTH_VMS(appVersionId = 31),",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "WithPendingCredential",
            "in": "query",
            "description": "WithPendingCredential boolean required, default to false, visible only for registry version \r\nand dbo.AgencyMobilePhoneConfig.StageAgencyNurseUploadedCredential is true,",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Initial",
            "in": "query",
            "description": "Initial string required, max length is 3, first letter of professional's last name, when 'All' is passed ignore this filter.",
            "required": true,
            "schema": {
              "maxLength": 3,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Professionals/DownloadPINs": {
      "get": {
        "tags": [
          "Professionals"
        ],
        "summary": "Download Professionals as CSV",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Professionals/GetPotentialMatchingNurseList": {
      "post": {
        "tags": [
          "Professionals"
        ],
        "summary": "Get potential matching nurses by first name and last name",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetPotentialMatchingNurseListParam"
                  }
                ],
                "description": "Supported sort field names: NurseName, DateOfBirth, Email, MobilePhone"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetPotentialMatchingNurseListParam"
                  }
                ],
                "description": "Supported sort field names: NurseName, DateOfBirth, Email, MobilePhone"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetPotentialMatchingNurseListParam"
                  }
                ],
                "description": "Supported sort field names: NurseName, DateOfBirth, Email, MobilePhone"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetPotentialMatchingNurseListModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPotentialMatchingNurseListModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPotentialMatchingNurseListModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Professionals/SaveProfessionalStatus": {
      "post": {
        "tags": [
          "Professionals"
        ],
        "summary": "Save professional status.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveProfessionalStatusParam"
                  }
                ],
                "description": "Request for SaveProfessionalStatus"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveProfessionalStatusParam"
                  }
                ],
                "description": "Request for SaveProfessionalStatus"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveProfessionalStatusParam"
                  }
                ],
                "description": "Request for SaveProfessionalStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveProfessionalStatusModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveProfessionalStatusModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveProfessionalStatusModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Professionals/SaveAccountManager": {
      "post": {
        "tags": [
          "Professionals"
        ],
        "summary": "Save professional account manager.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveAccountManagerParam"
                  }
                ],
                "description": "Request for SaveAccountManager"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveAccountManagerParam"
                  }
                ],
                "description": "Request for SaveAccountManager"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveAccountManagerParam"
                  }
                ],
                "description": "Request for SaveAccountManager"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAccountManagerModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAccountManagerModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAccountManagerModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAccountManagerModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAccountManagerModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAccountManagerModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Professionals/GetPublicComment": {
      "get": {
        "tags": [
          "Professionals"
        ],
        "summary": "Get public comments.",
        "parameters": [
          {
            "name": "NurseID",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetCommentModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCommentModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCommentModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Professionals/GetPublicCommentsFromHealthSystems": {
      "get": {
        "tags": [
          "Professionals"
        ],
        "summary": "Get public comments from Health Systems.",
        "parameters": [
          {
            "name": "NurseID",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetCommentModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCommentModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCommentModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Professionals/SavePublicComment": {
      "post": {
        "tags": [
          "Professionals"
        ],
        "summary": "Save public comments.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SavePublicCommentRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SavePublicCommentRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SavePublicCommentRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveCommentModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveCommentModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveCommentModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Professionals/GetPrivateComment": {
      "get": {
        "tags": [
          "Professionals"
        ],
        "summary": "Get private comments.",
        "parameters": [
          {
            "name": "NurseID",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetCommentModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCommentModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCommentModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Professionals/SavePrivateComment": {
      "post": {
        "tags": [
          "Professionals"
        ],
        "summary": "Save private comments.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SavePrivateCommentRequest"
                  }
                ],
                "description": "Request of SavePrivateComment"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SavePrivateCommentRequest"
                  }
                ],
                "description": "Request of SavePrivateComment"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SavePrivateCommentRequest"
                  }
                ],
                "description": "Request of SavePrivateComment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SavePrivateCommentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavePrivateCommentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavePrivateCommentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Professionals/GetEncryptedPassword": {
      "post": {
        "tags": [
          "Professionals"
        ],
        "summary": "Gets the encrypted password of the given nurse Id within the logged in user's agency.",
        "requestBody": {
          "description": "The nurse Id to get.",
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Professionals/DeleteRequestTimeOff": {
      "post": {
        "tags": [
          "Professionals"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Programs/GetPerDiemPrograms": {
      "get": {
        "tags": [
          "Programs"
        ],
        "summary": "Get active Per-Diem programs.",
        "description": "This is for Per-Diem Shift list\r\n\r\nSample request:\r\n            \r\n    GET /api/Programs/GetPerDiemPrograms?SystemId=335\r\n    \r\n    OR\r\n    \r\n    GET /api/Programs/GetPerDiemPrograms?SystemId=335&FacilityId=8736",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectableItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectableItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectableItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Programs/GetTravelPrograms": {
      "get": {
        "tags": [
          "Programs"
        ],
        "summary": "Get active Travel programs.",
        "description": "This is for Contract list\r\n\r\nSample request:\r\n            \r\n    GET /api/Programs/GetTravelPrograms?SystemId=335\r\n    \r\n    OR\r\n    \r\n    GET /api/Programs/GetTravelPrograms?SystemId=335&FacilityId=8736",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectableItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectableItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectableItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Programs/GetAgencyActivePrograms": {
      "get": {
        "tags": [
          "Programs"
        ],
        "summary": "Get active programs for agency.",
        "description": "This is for program id/name pairs\r\n\r\nSample request:\r\n            \r\n    GET /api/Programs/GetAgencyActivePrograms",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Programs/GetProgramCategories": {
      "get": {
        "tags": [
          "Programs"
        ],
        "summary": "Get Program Categories.",
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/Programs/GetProgramsByRegistryID": {
      "get": {
        "tags": [
          "Programs"
        ],
        "summary": "Get programs for Registry users.\r\nSupported sort field names: \"Program Name\", \"Program Start Date\", \"Program End Date\", \"Program Type\", \"Program Category\", \"Active\", \"Program State\", \"Uploaded Date\"\r\nSort direction: 0 - Ascending, 1 - Descending",
        "description": "",
        "parameters": [
          {
            "name": "ProgramName",
            "in": "query",
            "description": "The program name to filter together with the logged-in user's registry Id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetProgramsByRegistryIDResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProgramsByRegistryIDResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProgramsByRegistryIDResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/Programs/GetProgramByID": {
      "get": {
        "tags": [
          "Programs"
        ],
        "summary": "Get specific program for Registry users.",
        "description": "",
        "parameters": [
          {
            "name": "ProgramID",
            "in": "query",
            "description": "ProgramID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetProgramsByRegistryIDItemResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProgramsByRegistryIDItemResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProgramsByRegistryIDItemResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/Programs/SaveProgram": {
      "post": {
        "tags": [
          "Programs"
        ],
        "summary": "Save Program",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveProgramRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveProgramRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveProgramRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/Programs/SaveProgramAgencySettings": {
      "post": {
        "tags": [
          "Programs"
        ],
        "summary": "Save Program Agency Settings",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveProgramAgencySettingRequest"
                  }
                ],
                "description": "Request of SaveProgramAgencySettings"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveProgramAgencySettingRequest"
                  }
                ],
                "description": "Request of SaveProgramAgencySettings"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveProgramAgencySettingRequest"
                  }
                ],
                "description": "Request of SaveProgramAgencySettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveProgramSettingsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveProgramSettingsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveProgramSettingsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/Programs/GetProgramAgencyAlignmentByProgramID": {
      "get": {
        "tags": [
          "Programs"
        ],
        "summary": "Get List of Program Agency Alignment By ProgramID",
        "parameters": [
          {
            "name": "ProgramID",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/Programs/GetSystemsWithAlignedProgramFacilityCount": {
      "get": {
        "tags": [
          "Programs"
        ],
        "summary": "Get List of Systems with aligned Program Facility count",
        "parameters": [
          {
            "name": "ProgramId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemsWithAlignedProgramFacilityCountResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemsWithAlignedProgramFacilityCountResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemsWithAlignedProgramFacilityCountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemsWithAlignedProgramFacilityCountResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemsWithAlignedProgramFacilityCountResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemsWithAlignedProgramFacilityCountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/Programs/GetProgramsWithAlignedAgencyCount": {
      "get": {
        "tags": [
          "Programs"
        ],
        "summary": "Get List of Program with aligned Agencies count",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetProgramsWithAlignedAgencyCountItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetProgramsWithAlignedAgencyCountItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetProgramsWithAlignedAgencyCountItem"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetProgramsWithAlignedAgencyCountItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetProgramsWithAlignedAgencyCountItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetProgramsWithAlignedAgencyCountItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/Programs/GetFacilitiesBySystemAndProgram": {
      "get": {
        "tags": [
          "Programs"
        ],
        "summary": "Get List of Facility by agency and program.",
        "parameters": [
          {
            "name": "ProgramID",
            "in": "query",
            "description": "ProgramID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SystemID",
            "in": "query",
            "description": "SystemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/Programs/SaveProgramFacilitySettings": {
      "post": {
        "tags": [
          "Programs"
        ],
        "summary": "Save Program Facility Settings",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveProgramFacilitySettingsRequest"
                  }
                ],
                "description": "Request of SaveProgramFacilitySettings"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveProgramFacilitySettingsRequest"
                  }
                ],
                "description": "Request of SaveProgramFacilitySettings"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveProgramFacilitySettingsRequest"
                  }
                ],
                "description": "Request of SaveProgramFacilitySettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveProgramSettingsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveProgramSettingsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveProgramSettingsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/Programs/GetProgramTypes": {
      "get": {
        "tags": [
          "Programs"
        ],
        "summary": "Gets all the active program types.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetProgramTypesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProgramTypesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProgramTypesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/Programs/GetPrograms": {
      "get": {
        "tags": [
          "Programs"
        ],
        "summary": "Gets the list of programs as SelectableItem.",
        "parameters": [
          {
            "name": "Active",
            "in": "query",
            "description": "Influence the list of programs by either all (null), active (true) or non-active (false).",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryProgramsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryProgramsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryProgramsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Programs/GetPerDiemPrograms": {
      "get": {
        "tags": [
          "Programs"
        ],
        "summary": "Get Per-Diem programs for hospital users.",
        "description": "",
        "parameters": [
          {
            "name": "FacilityId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ShowAllPast",
            "in": "query",
            "description": "Pass false by default, unless we need to show programs that have already ended",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ActiveOnly",
            "in": "query",
            "description": "Pass true by default, unless we need to show programs that are inactive",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ByFacility",
            "in": "query",
            "description": "Pass false by default, only for some specific page we need to pass true, for example Reconcliate Shift page, Edit Unit Daily Time Slot and Agency Program Settings by Facility on Hospital side, or system has FACILITY_SEARCH_CONTRACT(176)",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ByAgencyAndFacility",
            "in": "query",
            "description": "Pass false by default, only for some specific page we need to pass true, for example Agency Program Settings by System on Hospital side",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ByAdmin",
            "in": "query",
            "description": "Pass true by default, only for some specific page we need to pass false, for example Agency Program Settings by Facility on Hospital side",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectableItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectableItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectableItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Programs/GetTravelPrograms": {
      "get": {
        "tags": [
          "Programs"
        ],
        "summary": "Get Travel programs for hospital users.",
        "parameters": [
          {
            "name": "FacilityId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ShowAllPast",
            "in": "query",
            "description": "Pass false by default, unless we need to show programs that have already ended",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ActiveOnly",
            "in": "query",
            "description": "Pass true by default, unless we need to show programs that are inactive",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ByFacility",
            "in": "query",
            "description": "Pass false by default, only for some specific page we need to pass true, for example Reconcliate Shift page, Edit Unit Daily Time Slot and Agency Program Settings by Facility on Hospital side, or system has FACILITY_SEARCH_CONTRACT(176)",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ByAgencyAndFacility",
            "in": "query",
            "description": "Pass false by default, only for some specific page we need to pass true, for example Agency Program Settings by System on Hospital side",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ByAdmin",
            "in": "query",
            "description": "Pass true by default, only for some specific page we need to pass false, for example Agency Program Settings by Facility on Hospital side",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectableItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectableItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectableItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Programs/GetPrograms": {
      "get": {
        "tags": [
          "Programs"
        ],
        "summary": "Get programs(both Per-Diem and Travel) for hospital users.",
        "parameters": [
          {
            "name": "FacilityId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ShowAllPast",
            "in": "query",
            "description": "Pass false by default, unless we need to show programs that have already ended",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ActiveOnly",
            "in": "query",
            "description": "Pass true by default, unless we need to show programs that are inactive",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ByFacility",
            "in": "query",
            "description": "Pass false by default, only for some specific page we need to pass true, for example Reconcliate Shift page, Edit Unit Daily Time Slot and Agency Program Settings by Facility on Hospital side, or system has FACILITY_SEARCH_CONTRACT(176)",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ByAgencyAndFacility",
            "in": "query",
            "description": "Pass false by default, only for some specific page we need to pass true, for example Agency Program Settings by System on Hospital side",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ByAdmin",
            "in": "query",
            "description": "Pass true by default, only for some specific page we need to pass false, for example Agency Program Settings by Facility on Hospital side",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectableItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectableItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectableItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/QualityAssurance/GetIncidents": {
      "post": {
        "tags": [
          "QA Incidents"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetIncidentListRequest"
                  }
                ],
                "description": "Supported sort field names: \"Incident ID\", \"Date of Incident\", \"Date Submitted\", \"Facility\", \"Agency\", \"Professional\""
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetIncidentListRequest"
                  }
                ],
                "description": "Supported sort field names: \"Incident ID\", \"Date of Incident\", \"Date Submitted\", \"Facility\", \"Agency\", \"Professional\""
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetIncidentListRequest"
                  }
                ],
                "description": "Supported sort field names: \"Incident ID\", \"Date of Incident\", \"Date Submitted\", \"Facility\", \"Agency\", \"Professional\""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetIncidentListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetIncidentListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetIncidentListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Rates/GetSystemPreLoadRateDropDown": {
      "get": {
        "tags": [
          "Rates"
        ],
        "summary": "Get system preload rate dropdown for hospital users.",
        "description": "",
        "parameters": [
          {
            "name": "FacilityId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProgramId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PositionId",
            "in": "query",
            "description": "When getting system preload rates for per-diem shift, pass PositionId and it is required. \r\nWhen both PositionId and PositionTypeId specified, PositionId will be applied.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PositionTypeId",
            "in": "query",
            "description": "When getting system preload rates for contract, pass PositionTypeId and it is required. \r\nWhen both PositionId and PositionTypeId specified, PositionId will be applied.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CareTypeId",
            "in": "query",
            "description": "When getting system preload rates for per-diem shift, pass null or exclude it, when getting system preload rates for contract, pass CareTypeId and it is required.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ShiftTimeTypeId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ExcludeOldRate",
            "in": "query",
            "description": "Pass true when creating a new shift or contract, otherwise make it false",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectableItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectableItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectableItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Rates/GetSystemPreLoadPayRateDropDown": {
      "get": {
        "tags": [
          "Rates"
        ],
        "summary": "Get system preload pay rate dropdown for hospital users.",
        "description": "",
        "parameters": [
          {
            "name": "FacilityId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProgramId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PositionId",
            "in": "query",
            "description": "When getting system preload pay rates for per-diem shift, pass PositionId and it is required. \r\nWhen both PositionId and PositionTypeId specified, PositionId will be applied.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PositionTypeId",
            "in": "query",
            "description": "When getting system preload pay rates for contract, pass PositionTypeId and it is required. \r\nWhen both PositionId and PositionTypeId specified, PositionId will be applied.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CareTypeId",
            "in": "query",
            "description": "When getting system preload pay rates for per-diem shift, pass null or exclude it, when getting system preload pay rates for contract, pass CareTypeId and it is required.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectableItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectableItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectableItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Rates/GetFacilityRateTypes": {
      "get": {
        "tags": [
          "Rates"
        ],
        "summary": "Get Facility Rate Types for hospital to populate a dropdown",
        "parameters": [
          {
            "name": "FacilityId",
            "in": "query",
            "description": "FacilityId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PositionId",
            "in": "query",
            "description": "PositionId",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PositionTypeId",
            "in": "query",
            "description": "PositionTypeId",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ShiftStartDateTime",
            "in": "query",
            "description": "Shift Start Date and Time",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "ShiftEndDateTime",
            "in": "query",
            "description": "Shift End Date and Time",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "ByPassWeekend",
            "in": "query",
            "description": "For Reconcile Shift pass false",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsLawson",
            "in": "query",
            "description": "For Reconcile Shift pass false",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ChargeRateFilter",
            "in": "query",
            "description": "For Reconcile Shift pass null or 0.00",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Rates/GetFacilityRateType": {
      "get": {
        "tags": [
          "Rates"
        ],
        "summary": "Get Facility Rate Type Details for hospital",
        "parameters": [
          {
            "name": "FacilityRateTypeId",
            "in": "query",
            "description": "FacilityRateTypeId",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetFacilityRateTypeResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFacilityRateTypeResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFacilityRateTypeResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetFacilityRateTypeResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFacilityRateTypeResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFacilityRateTypeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Rates/GetRegistryPreLoadRates": {
      "get": {
        "tags": [
          "Rates"
        ],
        "summary": "Gets the registry preload rates.",
        "parameters": [
          {
            "name": "ProgramId",
            "in": "query",
            "description": "Gets or sets the Id of the program.",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PositionTypeId",
            "in": "query",
            "description": "Gets or sets the Id of the position type.",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IdNamePairs"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdNamePairs"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdNamePairs"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/RegistryAgency/GetRegistryAgencyList": {
      "get": {
        "tags": [
          "RegistryAgency"
        ],
        "summary": "Get List of Agency, supported sorting fields: Agency, Address, FirstName, LastName, Username, Phone, Email, LastSignIn",
        "parameters": [
          {
            "name": "AgencyName",
            "in": "query",
            "description": "Agency Name, or part of Agency Name",
            "schema": {
              "maxLength": 100,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "Active",
            "in": "query",
            "description": "Active, pass null to get all agencies, pass true to get active agencies only, pass false to get inactive agencies",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryAgencyListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryAgencyListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryAgencyListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/RegistryAgency/SaveRegistryAgencyNurseUsername": {
      "post": {
        "tags": [
          "RegistryAgency"
        ],
        "summary": "Save Registry Agency Nurse Username",
        "description": "v1 /Registry/Agencies/EditUser.aspx",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveAgencyNurseUsernameRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveAgencyNurseUsernameRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveAgencyNurseUsernameRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/RegistryAgency/ExportRegistryAgencyList": {
      "get": {
        "tags": [
          "RegistryAgency"
        ],
        "summary": "Export Agency List, supported sorting fields: Agency, Address, FirstName, LastName, Username, Phone, Email, LastSignIn",
        "parameters": [
          {
            "name": "AgencyName",
            "in": "query",
            "description": "Agency Name, or part of Agency Name",
            "schema": {
              "maxLength": 100,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "Active",
            "in": "query",
            "description": "Active, pass null to get all agencies, pass true to get active agencies only, pass false to get inactive agencies",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/RegistryAgency/SaveRegistryAgency": {
      "post": {
        "tags": [
          "RegistryAgency"
        ],
        "summary": "Create Registry Agency",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveRegistryAgencyRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveRegistryAgencyRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveRegistryAgencyRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/RegistryAgencyComments/GetRegistryAgencyCommentList": {
      "post": {
        "tags": [
          "RegistryAgencyComments"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetRegistryAgencyCommentListParam"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetRegistryAgencyCommentListParam"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetRegistryAgencyCommentListParam"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RegistryAgencyCommentListModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistryAgencyCommentListModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistryAgencyCommentListModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/RegistryComments/GetRegistryComments": {
      "get": {
        "tags": [
          "Registry Comments"
        ],
        "parameters": [
          {
            "name": "RegistryCommentTypeId",
            "in": "query",
            "description": "Registry Comment Type",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryCommentsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryCommentsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryCommentsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/RegistryComments/GetRegistryCommentTypes": {
      "get": {
        "tags": [
          "Registry Comments"
        ],
        "parameters": [
          {
            "name": "ActiveOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/RegistryComments/SaveRegistryComments": {
      "post": {
        "tags": [
          "RegistryComments"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "CommentText",
                  "Subject"
                ],
                "type": "object",
                "properties": {
                  "Subject": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "The subject of the registry comment."
                  },
                  "CommentText": {
                    "type": "string",
                    "description": "The comment text of the registry comment."
                  },
                  "CommentTypeId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "The Id of the comment type.",
                    "format": "int32"
                  },
                  "NurseId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "The Id of the nurse.",
                    "format": "int32"
                  },
                  "Attachment": {
                    "type": "string",
                    "description": "Attachment to upload for registry comment.",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "Subject": {
                  "style": "form"
                },
                "CommentText": {
                  "style": "form"
                },
                "CommentTypeId": {
                  "style": "form"
                },
                "NurseId": {
                  "style": "form"
                },
                "Attachment": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveRegistryCommentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveRegistryCommentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveRegistryCommentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/RegistryFacility/GetRegistryFacilityCommentList": {
      "get": {
        "tags": [
          "RegistryFacility"
        ],
        "summary": "Get Hospital Registry Facility Comment, sorting fields supported: \"Date Posted\", \"Posted By\", \"Facility\", \"Subject\", \"Admin\"",
        "parameters": [
          {
            "name": "isPublic",
            "in": "query",
            "description": "Is Public view",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryFacilityCommentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryFacilityCommentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryFacilityCommentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/RegistryHomeDashboard/GetRegistrySummaryStatistics": {
      "get": {
        "tags": [
          "RegistryHomeDashboard"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistrySummaryStatisticsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistrySummaryStatisticsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistrySummaryStatisticsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/RegistryHospitalAdmin/GetRegistryAdminUsers": {
      "get": {
        "tags": [
          "RegistryHospitalAdmin"
        ],
        "summary": "Gets Registry Admin Users.\r\nAvailable sorting fields: UserLastName, UserEmail, UserPhone, UserUserName, UserLastSignin, AdminIsPrimary, UserIsUnitManager, AdminIsSuperUser, or UserActive",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "description": "The Id of the system for the users to filter. Default value is -1 (all).",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityId",
            "in": "query",
            "description": "The Id of the facility for the users to filter. Default value is -1 (all).",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UserActive",
            "in": "query",
            "description": "The active status of the users to filter. Default value is null (all).",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "FirstName",
            "in": "query",
            "description": "Optionally filters the result based on the given first name.",
            "schema": {
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "LastName",
            "in": "query",
            "description": "Optionally filters the result based on the given last name.",
            "schema": {
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryHospitalAdminUsersResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryHospitalAdminUsersResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryHospitalAdminUsersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/RegistryHospitalAdmin/SaveRegistryAdminUsername": {
      "post": {
        "tags": [
          "RegistryHospitalAdmin"
        ],
        "summary": "Save Registry Hospital Admin Username",
        "description": "v1 /Registry/Systems/EditUser.aspx.cs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveRegistrySystemAdminUsernameRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveRegistrySystemAdminUsernameRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveRegistrySystemAdminUsernameRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/RegistrySystem/SaveRegistrySystem": {
      "post": {
        "tags": [
          "RegistrySystem"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveRegistrySystemRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveRegistrySystemRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveRegistrySystemRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveRegistrySystemResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveRegistrySystemResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveRegistrySystemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/RegistrySystem/GetSystemsAlignedCustomConfigs": {
      "get": {
        "tags": [
          "RegistrySystem"
        ],
        "summary": "Get Systems Aligned Custom Configs",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemsAlignedCustomConfigsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemsAlignedCustomConfigsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemsAlignedCustomConfigsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemsAlignedCustomConfigsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemsAlignedCustomConfigsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemsAlignedCustomConfigsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/RegistryUser/GetRegistryUsers": {
      "get": {
        "tags": [
          "RegistryUser"
        ],
        "summary": "Gets the list of users under the logged in account's registry.",
        "description": "Here are the available sort fields:\r\nUserID, UserFirstName, UserLastName, UserEmail, UserUsername, UserActive, recieveQAEmail, recieveMonthlyUsage,\r\nrecieveAgencyInsuranceLicence, recieveExpiringContracts, receiveAgencyNurseVerifications, recieveCredentialNotification",
        "parameters": [
          {
            "name": "FirstName",
            "in": "query",
            "description": "Gets or sets the first name of the registry users to filter. (Optional)",
            "schema": {
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "LastName",
            "in": "query",
            "description": "Gets or sets the last name of the registry users to filter. (Optional)",
            "schema": {
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryUsersResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryUsersResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryUsersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/RegistryUser/GetRegistryUserById": {
      "get": {
        "tags": [
          "RegistryUser"
        ],
        "summary": "Gets the specific user by Id and must be within the logged in user's registry Id.",
        "parameters": [
          {
            "name": "RegistryUserId",
            "in": "query",
            "description": "The Id of the registry user to search for.",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryUserResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryUserResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Registry/RegistryUser/SaveRegistryUser": {
      "post": {
        "tags": [
          "RegistryUser"
        ],
        "summary": "Creates a new record of registry user together with a user account with default password or updates an existing one.",
        "requestBody": {
          "description": "The registry user upsert request.",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveRegistryUserRequest"
                  }
                ],
                "description": "The request for creating a registry user."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveRegistryUserRequest"
                  }
                ],
                "description": "The request for creating a registry user."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveRegistryUserRequest"
                  }
                ],
                "description": "The request for creating a registry user."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveRegistryUserResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveRegistryUserResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveRegistryUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Reports/ExportTimeCardReport": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Download Time Card Report",
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "description": "Start Date is required",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "End Date is required",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "SystemID",
            "in": "query",
            "description": "System ID is required",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityID",
            "in": "query",
            "description": "Facility ID is optional",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Requisition/SaveRequisition": {
      "post": {
        "tags": [
          "Requisition"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveHospitalRequisitionRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveHospitalRequisitionRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveHospitalRequisitionRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Requisition/GetRequisitionList": {
      "get": {
        "tags": [
          "Requisition"
        ],
        "summary": "Get List of Requisition by Hospital",
        "parameters": [
          {
            "name": "RequisitionID",
            "in": "query",
            "description": "Requisition ID",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityID",
            "in": "query",
            "description": "Requisition Facility ID",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitID",
            "in": "query",
            "description": "Requisition Unit ID",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StatusID",
            "in": "query",
            "description": "Requisition Status ID (Options: 0 - All, 1 - Open, 2 - Finalized Approved, 3 - Declined)",
            "schema": {
              "maximum": 3,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Extension",
            "in": "query",
            "description": "The extension parameter that filters the list of requisition. Visible on VMS_WMCH (SystemId=379) only.\r\n\r\nnull, return all requisitions\r\n\r\ntrue, return requisitions where dbo.Requisition.ParentContractAssignmentID is not null\r\n\r\nfalse, return requisitions where dbo.Requisition.ParentContractAssignmentID is null",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequisitionListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequisitionListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequisitionListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Requisition/ExportRequisitionList": {
      "get": {
        "tags": [
          "Requisition"
        ],
        "summary": "Download Requisitions",
        "parameters": [
          {
            "name": "RequisitionID",
            "in": "query",
            "description": "Requisition ID",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityID",
            "in": "query",
            "description": "Requisition Facility ID",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitID",
            "in": "query",
            "description": "Requisition Unit ID",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StatusID",
            "in": "query",
            "description": "Requisition Status ID",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Extension",
            "in": "query",
            "description": "The extension parameter that filters the list of requisition. Visible on VMS_WMCH (SystemId=379) only.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequisitionListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequisitionListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequisitionListResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequisitionListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequisitionListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequisitionListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Requisition/GetRequisitionSetting": {
      "get": {
        "tags": [
          "Requisition"
        ],
        "summary": "Get List of Requisition Setting Level based on selected Facility and Unit",
        "parameters": [
          {
            "name": "FacilityId",
            "in": "query",
            "description": "Facility ID",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitId",
            "in": "query",
            "description": "Unit ID",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequisitionSettingResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequisitionSettingResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequisitionSettingResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Requisition/GetPointOfContacts": {
      "get": {
        "tags": [
          "Requisition"
        ],
        "summary": "Get Requisition Point of Contacts",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Requisition/GetRequisitionReasons": {
      "get": {
        "tags": [
          "Requisition"
        ],
        "summary": "Get Requisition reasons",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Requisition/SaveRequisitionSettingLevel": {
      "post": {
        "tags": [
          "Requisition"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveRequisitionSettingLevelRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveRequisitionSettingLevelRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveRequisitionSettingLevelRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveRequisitionSettingLevelResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveRequisitionSettingLevelResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveRequisitionSettingLevelResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Requisition/DeleteRequisitionSettingLevel": {
      "post": {
        "tags": [
          "Requisition"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteRequisitionSettingLevelRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteRequisitionSettingLevelRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteRequisitionSettingLevelRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteRequisitionSettingLevelResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteRequisitionSettingLevelResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteRequisitionSettingLevelResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Requisition/CopyUnitRequisitionSettings": {
      "post": {
        "tags": [
          "Requisition"
        ],
        "summary": "Only active requisition level setting will be copied over to target unit.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CopyUnitRequisitionSettingsRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CopyUnitRequisitionSettingsRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CopyUnitRequisitionSettingsRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CopyUnitRequisitionSettingsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CopyUnitRequisitionSettingsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CopyUnitRequisitionSettingsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Requisition/GetRequisitionDetail": {
      "get": {
        "tags": [
          "Requisition"
        ],
        "summary": "Get Requisition Detail",
        "parameters": [
          {
            "name": "RequisitionID",
            "in": "query",
            "description": "Requisition ID",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequisitionDetailResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequisitionDetailResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequisitionDetailResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Requisition/CloseRequisition": {
      "post": {
        "tags": [
          "Requisition"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CloseRequisitionRequest"
                  }
                ],
                "description": "Request for Close Requisition"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CloseRequisitionRequest"
                  }
                ],
                "description": "Request for Close Requisition"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CloseRequisitionRequest"
                  }
                ],
                "description": "Request for Close Requisition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Requisition/ApproveRequisition": {
      "post": {
        "tags": [
          "Requisition"
        ],
        "summary": "Approve Requisition.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApproveRequisitionRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApproveRequisitionRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApproveRequisitionRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApproveRequisitionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApproveRequisitionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApproveRequisitionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Requisition/DeclineRequisition": {
      "post": {
        "tags": [
          "Requisition"
        ],
        "summary": "Decline Requisition.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeclineRequisitionRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeclineRequisitionRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeclineRequisitionRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeclineRequisitionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeclineRequisitionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeclineRequisitionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Requisition/MessageApprover": {
      "post": {
        "tags": [
          "Requisition"
        ],
        "summary": "ReMessage Approver.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MessageApproverRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MessageApproverRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MessageApproverRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/ScheduleLite/GetTimeTypeDropdown": {
      "get": {
        "tags": [
          "ScheduleLite"
        ],
        "summary": "Get Shift Time Type Dropdown",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "description": "SystemId",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityId",
            "in": "query",
            "description": "FacilityId",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetTimeTypeDropdownResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTimeTypeDropdownResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTimeTypeDropdownResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Shift/GetAgencyNurseTimeEntryList": {
      "post": {
        "tags": [
          "Shift"
        ],
        "summary": "Get Agency Nurse Time Entry List",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetTimeEntryListParam"
                  }
                ],
                "description": "Request for getting agency nurse time entry"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetTimeEntryListParam"
                  }
                ],
                "description": "Request for getting agency nurse time entry"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetTimeEntryListParam"
                  }
                ],
                "description": "Request for getting agency nurse time entry"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetTimeEntryListModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTimeEntryListModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTimeEntryListModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Shift/GetAgencyNurseShiftCounts": {
      "post": {
        "tags": [
          "Shift"
        ],
        "summary": "Get Agency Nurse Shift Counts",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyNurseShiftCountsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyNurseShiftCountsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyNurseShiftCountsModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Shift/GetAgencyNurseShiftHours": {
      "post": {
        "tags": [
          "Shift"
        ],
        "summary": "Get Agency Nurse Shift Hours",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetAgencyNurseShiftHoursParam"
                  }
                ],
                "description": "Request for getting agency nurse shift hours"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetAgencyNurseShiftHoursParam"
                  }
                ],
                "description": "Request for getting agency nurse shift hours"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetAgencyNurseShiftHoursParam"
                  }
                ],
                "description": "Request for getting agency nurse shift hours"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyNurseShiftHoursModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyNurseShiftHoursModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyNurseShiftHoursModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Shift/ApproveTimeEntry": {
      "post": {
        "tags": [
          "Shift"
        ],
        "summary": "Approve Agency Nurse Time Entry",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApproveTimeEntryParam"
                  }
                ],
                "description": "Request for ApproveTimeEntry"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApproveTimeEntryParam"
                  }
                ],
                "description": "Request for ApproveTimeEntry"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApproveTimeEntryParam"
                  }
                ],
                "description": "Request for ApproveTimeEntry"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApproveTimeEntryModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApproveTimeEntryModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApproveTimeEntryModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Shift/SplitShift": {
      "post": {
        "tags": [
          "Shift"
        ],
        "summary": "Agency Nurse Split Shift",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SplitShiftParam"
                  }
                ],
                "description": "Request for SplitShift"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SplitShiftParam"
                  }
                ],
                "description": "Request for SplitShift"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SplitShiftParam"
                  }
                ],
                "description": "Request for SplitShift"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SplitShiftModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SplitShiftModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SplitShiftModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Shift/SaveShift": {
      "post": {
        "tags": [
          "Shift"
        ],
        "summary": "Agency Nurse Create/Edit Shift",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveShiftParam"
                  }
                ],
                "description": "Request for SaveShift"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveShiftParam"
                  }
                ],
                "description": "Request for SaveShift"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveShiftParam"
                  }
                ],
                "description": "Request for SaveShift"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveShiftModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveShiftModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveShiftModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Shift/GetShiftDetails": {
      "get": {
        "tags": [
          "Shift"
        ],
        "summary": "Get Shift Details",
        "parameters": [
          {
            "name": "ShiftId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftDetailsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftDetailsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftDetailsModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Shift/GetNurseSkillsMet": {
      "get": {
        "tags": [
          "Shift"
        ],
        "summary": "Get nurse skills met required by a shift",
        "parameters": [
          {
            "name": "ShiftId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "NurseId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetNurseSkillsMetModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNurseSkillsMetModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNurseSkillsMetModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Shift/AddToWatchList": {
      "post": {
        "tags": [
          "Shift"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AddToWatchListParam"
                  }
                ],
                "description": "Request for AddToWatchList"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AddToWatchListParam"
                  }
                ],
                "description": "Request for AddToWatchList"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AddToWatchListParam"
                  }
                ],
                "description": "Request for AddToWatchList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AddToWatchListModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddToWatchListModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddToWatchListModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Shift/RemoveFromWatchList": {
      "post": {
        "tags": [
          "Shift"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RemoveFromWatchListParam"
                  }
                ],
                "description": "Request for RemoveFromWatchList"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RemoveFromWatchListParam"
                  }
                ],
                "description": "Request for RemoveFromWatchList"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RemoveFromWatchListParam"
                  }
                ],
                "description": "Request for RemoveFromWatchList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveFromWatchListModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveFromWatchListModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveFromWatchListModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Shift/DownloadTimeCard": {
      "get": {
        "tags": [
          "Shift"
        ],
        "summary": "Download shift time card",
        "parameters": [
          {
            "name": "ShiftId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Shift/GetRequiredCredentials": {
      "get": {
        "tags": [
          "Shift"
        ],
        "summary": "Get Shift Required Credentials",
        "parameters": [
          {
            "name": "ShiftId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftRequiredCredentialsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftRequiredCredentialsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftRequiredCredentialsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftRequiredCredentialsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftRequiredCredentialsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftRequiredCredentialsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Shift/UploadTimeCard": {
      "post": {
        "tags": [
          "Shift"
        ],
        "summary": "Upload Time Card",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "ShiftID"
                ],
                "type": "object",
                "properties": {
                  "ShiftID": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Shift ID",
                    "format": "int32"
                  },
                  "TimeCard": {
                    "type": "string",
                    "description": "Time Card Document to Upload",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "ShiftID": {
                  "style": "form"
                },
                "TimeCard": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UploadTimeCardResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadTimeCardResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadTimeCardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Shift/SaveTimeEntry": {
      "post": {
        "tags": [
          "Shift"
        ],
        "summary": "Save/Add Time Entry",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveTimeEntryRequest"
                  }
                ],
                "description": "Request for adding or updating a Time Entry."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveTimeEntryRequest"
                  }
                ],
                "description": "Request for adding or updating a Time Entry."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveTimeEntryRequest"
                  }
                ],
                "description": "Request for adding or updating a Time Entry."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveTimeEntryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveTimeEntryResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveTimeEntryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveTimeEntryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveTimeEntryResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveTimeEntryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Shift/GetAgencyFacilityRateTypes": {
      "post": {
        "tags": [
          "Shift"
        ],
        "summary": "Get Agency Facility Rate Types",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetAgencyFacilityRateTypesRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetAgencyFacilityRateTypesRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetAgencyFacilityRateTypesRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Shift/CalculateBreaktime": {
      "get": {
        "tags": [
          "Shift"
        ],
        "summary": "Get CalculateBreaktime",
        "parameters": [
          {
            "name": "FacilityID",
            "in": "query",
            "description": "Facility ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartDateTime",
            "in": "query",
            "description": "Start Date Time",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDateTime",
            "in": "query",
            "description": "End Date Time",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CalculateBreaktimeResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalculateBreaktimeResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalculateBreaktimeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Shift/TimeEntry/SplitShift": {
      "post": {
        "tags": [
          "Shift"
        ],
        "summary": "Split Shift",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SplitShiftRequest"
                  }
                ],
                "description": "Request for SplitShift"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SplitShiftRequest"
                  }
                ],
                "description": "Request for SplitShift"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SplitShiftRequest"
                  }
                ],
                "description": "Request for SplitShift"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SplitShiftResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SplitShiftResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SplitShiftResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SplitShiftResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SplitShiftResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SplitShiftResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/GetShiftSummary": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get Shift Summary",
        "parameters": [
          {
            "name": "FacilityID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftSummaryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftSummaryResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftSummaryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/GetScheduledShifts": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get shifts scheduled for submissions, supported sorting fields: \"Position\", \"Program\", \"Facility\", \"Unit\", \"StartDate\", \"EndDate\", \"ShiftID\"",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalScheduledShiftsRequest"
                  }
                ],
                "description": "Request of GetScheduledShifts"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalScheduledShiftsRequest"
                  }
                ],
                "description": "Request of GetScheduledShifts"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalScheduledShiftsRequest"
                  }
                ],
                "description": "Request of GetScheduledShifts"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalScheduledShiftsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalScheduledShiftsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalScheduledShiftsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalScheduledShiftsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalScheduledShiftsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalScheduledShiftsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/GetOpenShifts": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get shifts open for submissions, supported sorting fields: \"Position\", \"Program\", \"BidCount\", \"Facility\", \"Unit\", \"StartDate\", \"EndDate\", \"ShiftID\"",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalOpenShiftsRequest"
                  }
                ],
                "description": "Request of GetOpenShifts"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalOpenShiftsRequest"
                  }
                ],
                "description": "Request of GetOpenShifts"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalOpenShiftsRequest"
                  }
                ],
                "description": "Request of GetOpenShifts"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOpenShiftsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOpenShiftsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOpenShiftsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOpenShiftsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOpenShiftsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOpenShiftsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/GetOpenShiftsWithBids": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get shifts open with submissions, supported sorting fields: \"Position\", \"Program\", \"BidCount\", \"Facility\", \"Unit\", \"StartDate\", \"EndDate\", \"ShiftID\"",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalOpenShiftsWithBidsRequest"
                  }
                ],
                "description": "Request of GetHospitalOpenShiftsWithBids"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalOpenShiftsWithBidsRequest"
                  }
                ],
                "description": "Request of GetHospitalOpenShiftsWithBids"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalOpenShiftsWithBidsRequest"
                  }
                ],
                "description": "Request of GetHospitalOpenShiftsWithBids"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOpenShiftsWithBidsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOpenShiftsWithBidsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOpenShiftsWithBidsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOpenShiftsWithBidsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOpenShiftsWithBidsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOpenShiftsWithBidsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/GetOfferedShifts": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get shifts that have offered, supported sorting fields: \"Position\", \"Program\", \"BidCount\", \"Facility\", \"Unit\", \"StartDate\", \"EndDate\", \"ShiftID\"",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalOfferedShiftsRequest"
                  }
                ],
                "description": "Request of GetHospitalOfferedShifts"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalOfferedShiftsRequest"
                  }
                ],
                "description": "Request of GetHospitalOfferedShifts"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalOfferedShiftsRequest"
                  }
                ],
                "description": "Request of GetHospitalOfferedShifts"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOfferedShiftsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOfferedShiftsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOfferedShiftsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOfferedShiftsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOfferedShiftsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOfferedShiftsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/GetAwardedShifts": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get Awarded shifts, supported sorting fields: \"Position\", \"Program\", \"BidCount\", \"Facility\", \"Unit\", \"StartDate\", \"EndDate\", \"ShiftID\"",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalAwardedShiftsRequest"
                  }
                ],
                "description": "Request of GetHospitalAwardedShifts"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalAwardedShiftsRequest"
                  }
                ],
                "description": "Request of GetHospitalAwardedShifts"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalAwardedShiftsRequest"
                  }
                ],
                "description": "Request of GetHospitalAwardedShifts"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalAwardedShiftsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalAwardedShiftsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalAwardedShiftsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalAwardedShiftsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalAwardedShiftsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalAwardedShiftsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/GetNotAwardedShifts": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get Not Awarded shifts, supported sorting fields: \"Position\", \"Program\", \"BidCount\", \"Facility\", \"Unit\", \"StartDate\", \"EndDate\", \"ShiftID\"",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalNotAwardedShiftsRequest"
                  }
                ],
                "description": "Request of GetHospitalNotAwardedShifts"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalNotAwardedShiftsRequest"
                  }
                ],
                "description": "Request of GetHospitalNotAwardedShifts"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalNotAwardedShiftsRequest"
                  }
                ],
                "description": "Request of GetHospitalNotAwardedShifts"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalNotAwardedShiftsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalNotAwardedShiftsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalNotAwardedShiftsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalNotAwardedShiftsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalNotAwardedShiftsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalNotAwardedShiftsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/GetHospitalInvoiceTotal": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get Invoice Total for hospital users",
        "parameters": [
          {
            "name": "DateType",
            "in": "query",
            "description": "Date Type in month",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Constants_DateTypeInMonth"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalInvoiceTotalResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalInvoiceTotalResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalInvoiceTotalResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalInvoiceTotalResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalInvoiceTotalResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalInvoiceTotalResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/GetShiftSubmissions": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get Shift Submissions",
        "parameters": [
          {
            "name": "ShiftId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftSubmissionsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftSubmissionsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftSubmissionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftSubmissionsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftSubmissionsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftSubmissionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/GetUnapprovedShiftsByUnitManager": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get Unapproved Shifts by Unit Manager",
        "parameters": [
          {
            "name": "AdminId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUnapprovedShiftsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUnapprovedShiftsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUnapprovedShiftsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUnapprovedShiftsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUnapprovedShiftsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUnapprovedShiftsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/SendUnapprovedShiftsToUnitManager": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Send Unapproved Shifts to Unit Manager",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SendUnapprovedShiftsToUnitManagerRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SendUnapprovedShiftsToUnitManagerRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SendUnapprovedShiftsToUnitManagerRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SendUnapprovedShiftsToUnitManagerResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendUnapprovedShiftsToUnitManagerResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendUnapprovedShiftsToUnitManagerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SendUnapprovedShiftsToUnitManagerResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendUnapprovedShiftsToUnitManagerResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendUnapprovedShiftsToUnitManagerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/GetShiftDetails": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get Shift Details",
        "parameters": [
          {
            "name": "ShiftId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalShiftDetailsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalShiftDetailsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalShiftDetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalShiftDetailsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalShiftDetailsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalShiftDetailsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/SaveShift": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Save Shift, for hospital users to create/edit shift",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalSaveShiftRequest"
                  }
                ],
                "description": "Request for HospitalSaveShift"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalSaveShiftRequest"
                  }
                ],
                "description": "Request for HospitalSaveShift"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalSaveShiftRequest"
                  }
                ],
                "description": "Request for HospitalSaveShift"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalSaveShiftResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalSaveShiftResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalSaveShiftResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalSaveShiftResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalSaveShiftResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalSaveShiftResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/GetShiftDetailsToEdit": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get Shift Details for Hospital to Edit, not applicable for View Shift or Reconcile Shift",
        "parameters": [
          {
            "name": "ShiftId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftDetailsForHospitalToEditResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftDetailsForHospitalToEditResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftDetailsForHospitalToEditResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftDetailsForHospitalToEditResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftDetailsForHospitalToEditResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftDetailsForHospitalToEditResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/ReconcileShift": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Reconcile Shift, for hospital users to create/edit past shift",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalReconcileShiftRequest"
                  }
                ],
                "description": "Request for HospitalReconcileShift"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalReconcileShiftRequest"
                  }
                ],
                "description": "Request for HospitalReconcileShift"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalReconcileShiftRequest"
                  }
                ],
                "description": "Request for HospitalReconcileShift"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalReconcileShiftResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalReconcileShiftResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalReconcileShiftResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalReconcileShiftResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalReconcileShiftResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalReconcileShiftResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/GetShiftDetailsToReconcile": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get Shift Details for Hospital to Reconcile, not applicable for View Shift or Edit Shift",
        "parameters": [
          {
            "name": "ShiftId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftDetailsForHospitalToReconcileResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftDetailsForHospitalToReconcileResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftDetailsForHospitalToReconcileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftDetailsForHospitalToReconcileResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftDetailsForHospitalToReconcileResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftDetailsForHospitalToReconcileResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/SplitShift": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Split Shift, for hospital users to split shift",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalSplitShiftRequest"
                  }
                ],
                "description": "Request for HospitalSplitShift"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalSplitShiftRequest"
                  }
                ],
                "description": "Request for HospitalSplitShift"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalSplitShiftRequest"
                  }
                ],
                "description": "Request for HospitalSplitShift"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalSplitShiftResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalSplitShiftResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalSplitShiftResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalSplitShiftResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalSplitShiftResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalSplitShiftResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/GetShiftsByCriteria": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Retrieve shifts, supported sorting fields: \"Position\", \"Facility\", \"Unit\", \"BidCount\", \"LastName\", \"ShiftID\", \"StartDate\", \"ShiftStatus\"",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetShiftsByCriteriaRequest"
                  }
                ],
                "description": "Supported sort field names: Position, Facility, Unit, BidCount, LastName, ShiftID, StartDate, ShiftStatus."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetShiftsByCriteriaRequest"
                  }
                ],
                "description": "Supported sort field names: Position, Facility, Unit, BidCount, LastName, ShiftID, StartDate, ShiftStatus."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetShiftsByCriteriaRequest"
                  }
                ],
                "description": "Supported sort field names: Position, Facility, Unit, BidCount, LastName, ShiftID, StartDate, ShiftStatus."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftsByCriteriaResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftsByCriteriaResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftsByCriteriaResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftsByCriteriaResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftsByCriteriaResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftsByCriteriaResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/DeleteShift": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Delete Shift, for hospital users to delete shift",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalDeleteShiftRequest"
                  }
                ],
                "description": "Request for HospitalDeleteShift"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalDeleteShiftRequest"
                  }
                ],
                "description": "Request for HospitalDeleteShift"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalDeleteShiftRequest"
                  }
                ],
                "description": "Request for HospitalDeleteShift"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalDeleteShiftResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalDeleteShiftResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalDeleteShiftResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalDeleteShiftResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalDeleteShiftResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalDeleteShiftResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/GetBatchedShifts": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get Batched Shifts",
        "parameters": [
          {
            "name": "ShiftId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalBatchedShiftsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalBatchedShiftsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalBatchedShiftsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalBatchedShiftsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalBatchedShiftsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalBatchedShiftsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/GetCustomShiftCategories": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get Custom Shift Categories",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/CancelShift": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Cancel Shift, for hospital users",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalCancelShiftRequest"
                  }
                ],
                "description": "Request for HospitalCancelShift"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalCancelShiftRequest"
                  }
                ],
                "description": "Request for HospitalCancelShift"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalCancelShiftRequest"
                  }
                ],
                "description": "Request for HospitalCancelShift"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalCancelShiftResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalCancelShiftResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalCancelShiftResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalCancelShiftResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalCancelShiftResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalCancelShiftResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/CancelShiftAward": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Cancel Shift Award, for hospital users",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalCancelShiftAwardRequest"
                  }
                ],
                "description": "Request for HospitalCancelShiftAward"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalCancelShiftAwardRequest"
                  }
                ],
                "description": "Request for HospitalCancelShiftAward"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalCancelShiftAwardRequest"
                  }
                ],
                "description": "Request for HospitalCancelShiftAward"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalCancelShiftAwardResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalCancelShiftAwardResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalCancelShiftAwardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalCancelShiftAwardResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalCancelShiftAwardResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalCancelShiftAwardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/MessageShiftAward": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Re-Message Shift Award, for hospital users",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalMessageShiftAwardRequest"
                  }
                ],
                "description": "Request for HospitalMessageShiftAward"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalMessageShiftAwardRequest"
                  }
                ],
                "description": "Request for HospitalMessageShiftAward"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalMessageShiftAwardRequest"
                  }
                ],
                "description": "Request for HospitalMessageShiftAward"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalMessageShiftAwardResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalMessageShiftAwardResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalMessageShiftAwardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalMessageShiftAwardResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalMessageShiftAwardResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalMessageShiftAwardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/CopyShift": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Copy PerDiem Shift to additional dates, for hospital users",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalCopyShiftRequest"
                  }
                ],
                "description": "Request for HospitalCopyShift"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalCopyShiftRequest"
                  }
                ],
                "description": "Request for HospitalCopyShift"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalCopyShiftRequest"
                  }
                ],
                "description": "Request for HospitalCopyShift"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalCopyShiftResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalCopyShiftResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalCopyShiftResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalCopyShiftResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalCopyShiftResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalCopyShiftResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/GetTimeEntryList": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get Time Entry List",
        "parameters": [
          {
            "name": "AgencyID",
            "in": "query",
            "description": "Agency ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityID",
            "in": "query",
            "description": "Facility ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitID",
            "in": "query",
            "description": "Unit ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "NurseID",
            "in": "query",
            "description": "Nurse ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Start Date",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "End Date",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "UnapprovedOnly",
            "in": "query",
            "description": "UnapprovedOnly",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ShiftType",
            "in": "query",
            "description": "ShiftType, null for All, 1 for Contract, 2 for Shift",
            "schema": {
              "maximum": 2,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalTimeEntryListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalTimeEntryListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalTimeEntryListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/RejectTimeEntry": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Reject Time Entry",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalRejectTimeEntryRequest"
                  }
                ],
                "description": "Request for HospitalRejectTimeEntry"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalRejectTimeEntryRequest"
                  }
                ],
                "description": "Request for HospitalRejectTimeEntry"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalRejectTimeEntryRequest"
                  }
                ],
                "description": "Request for HospitalRejectTimeEntry"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalRejectTimeEntryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalRejectTimeEntryResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalRejectTimeEntryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalRejectTimeEntryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalRejectTimeEntryResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalRejectTimeEntryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/GetShiftRejectReasons": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get Reject Reasons to populate Rejected Reasons dropdown when Hospital Decline Request on shift",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/UpdateNeedStatus": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Update Shift Need Status",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalUpdateShiftNeedStatusRequest"
                  }
                ],
                "description": "Request for HospitalUpdateShiftNeedStatus"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalUpdateShiftNeedStatusRequest"
                  }
                ],
                "description": "Request for HospitalUpdateShiftNeedStatus"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalUpdateShiftNeedStatusRequest"
                  }
                ],
                "description": "Request for HospitalUpdateShiftNeedStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalUpdateShiftNeedStatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalUpdateShiftNeedStatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalUpdateShiftNeedStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalUpdateShiftNeedStatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalUpdateShiftNeedStatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalUpdateShiftNeedStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/AwardShift": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Award Shift/Send Award Offer",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalAwardShiftRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalAwardShiftRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalAwardShiftRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalAwardShiftResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalAwardShiftResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalAwardShiftResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalAwardShiftResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalAwardShiftResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalAwardShiftResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/DeclineSubmission": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Decline Submission",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalDeclineSubmissionRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalDeclineSubmissionRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalDeclineSubmissionRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalDeclineSubmissionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalDeclineSubmissionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalDeclineSubmissionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalDeclineSubmissionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalDeclineSubmissionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalDeclineSubmissionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/GetOtherOpenShifts": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get other shifts open for submissions, supported sorting fields: \"Position\", \"Program\", \"BidCount\", \"Facility\", \"Unit\", \"StartDate\", \"EndDate\", \"ShiftID\", \"ShiftBatchID\"",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalOtherOpenShiftsRequest"
                  }
                ],
                "description": "Request of GetHospitalOtherOpenShifts"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalOtherOpenShiftsRequest"
                  }
                ],
                "description": "Request of GetHospitalOtherOpenShifts"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetHospitalOtherOpenShiftsRequest"
                  }
                ],
                "description": "Request of GetHospitalOtherOpenShifts"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOtherOpenShiftsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOtherOpenShiftsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOtherOpenShiftsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOtherOpenShiftsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOtherOpenShiftsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHospitalOtherOpenShiftsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/AwardToOtherShift": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Award to Other Shift/Send Award Offer",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalAwardToOtherShiftRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalAwardToOtherShiftRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalAwardToOtherShiftRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalAwardShiftResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalAwardShiftResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalAwardShiftResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalAwardShiftResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalAwardShiftResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalAwardShiftResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/CreateCopyOfShift": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Creates an exact copy of this Shift. This uses the current Shift ID as the new Shift's Reconcile Shift ID. You will also want to change the Billing Date to the appropriate pay period.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalCreateCopyOfShiftRequest"
                  }
                ],
                "description": "Request for HospitalCreateCopyOfShift"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalCreateCopyOfShiftRequest"
                  }
                ],
                "description": "Request for HospitalCreateCopyOfShift"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalCreateCopyOfShiftRequest"
                  }
                ],
                "description": "Request for HospitalCreateCopyOfShift"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalCreateCopyOfShiftResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalCreateCopyOfShiftResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalCreateCopyOfShiftResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalCreateCopyOfShiftResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalCreateCopyOfShiftResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalCreateCopyOfShiftResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Shifts/CreateNegativeShift": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Creates a duplicate copy of this Shift with Negative Hours to offset this Shift in billing. You will also want to change the Billing Date to the appropriate pay period after you create this Negative Hours Shift.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalCreateNegativeShiftRequest"
                  }
                ],
                "description": "Request for HospitalCreateNegativeShift"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalCreateNegativeShiftRequest"
                  }
                ],
                "description": "Request for HospitalCreateNegativeShift"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HospitalCreateNegativeShiftRequest"
                  }
                ],
                "description": "Request for HospitalCreateNegativeShift"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalCreateNegativeShiftResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalCreateNegativeShiftResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalCreateNegativeShiftResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalCreateNegativeShiftResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalCreateNegativeShiftResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalCreateNegativeShiftResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Shifts/GetShiftsBySystem": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Find shifts for current Agency User",
        "description": "Sample request:\r\n            \r\n    POST ​/api​/Agency​/Shifts​/GetShiftsBySystem\r\n    {\r\n       \"SystemId\": 1,\r\n       \"FacilityId\": 1,\r\n       \"UnitId\": 1,\r\n       \"programId\": 80,\r\n       \"paging\": {\r\n          \"pageSize\": 20,\r\n          \"pageIndex\": 0\r\n       },\r\n       \"sorting\": {\r\n          \"field\": \"Position\",\r\n          \"direction\": 0\r\n       }\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetShiftsBySystemParam"
                  }
                ],
                "description": "Supported sort field names: Position, Unit, MyBid, BidCount, StartDateTime, ShiftStatus, ShiftID, EndBidDateTime."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetShiftsBySystemParam"
                  }
                ],
                "description": "Supported sort field names: Position, Unit, MyBid, BidCount, StartDateTime, ShiftStatus, ShiftID, EndBidDateTime."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetShiftsBySystemParam"
                  }
                ],
                "description": "Supported sort field names: Position, Unit, MyBid, BidCount, StartDateTime, ShiftStatus, ShiftID, EndBidDateTime."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyShiftListModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyShiftListModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyShiftListModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Shifts/ExportShiftsBySystem": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Download shifts by system",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ExportShiftsBySystemParam"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ExportShiftsBySystemParam"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ExportShiftsBySystemParam"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Shifts/Professional/GetRequestingShifts": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get professional requesting shifts for current Agency User, supported sorting fields: Action, ShiftID, Position, System, Facility, Unit, Requester, \r\nCostCenter, TimeLeft, ShiftDate, SubmissionDate, ApprovedDate",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "description": "System that shifts belong to",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProgramId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PositionTypeId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyProfessionalRequestingShiftModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyProfessionalRequestingShiftModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyProfessionalRequestingShiftModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Shifts/GetPagedAgencyShiftProfessionals": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get professional list for agency to select when requesting a shift",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetPagedAgencyShiftProfessionalsParam"
                  }
                ],
                "description": "Request of GetPagedAgencyShiftProfessionals"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetPagedAgencyShiftProfessionalsParam"
                  }
                ],
                "description": "Request of GetPagedAgencyShiftProfessionals"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetPagedAgencyShiftProfessionalsParam"
                  }
                ],
                "description": "Request of GetPagedAgencyShiftProfessionals"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetPagedAgencyShiftProfessionalsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPagedAgencyShiftProfessionalsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPagedAgencyShiftProfessionalsModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetPagedAgencyShiftProfessionalsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPagedAgencyShiftProfessionalsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPagedAgencyShiftProfessionalsModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Shifts/GetAgencyShiftRates": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get rate for agency to select/edit/view when requesting a shift",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetAgencyShiftRatesParam"
                  }
                ],
                "description": "Request for GetAgencyShiftRates"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetAgencyShiftRatesParam"
                  }
                ],
                "description": "Request for GetAgencyShiftRates"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetAgencyShiftRatesParam"
                  }
                ],
                "description": "Request for GetAgencyShiftRates"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyShiftRatesModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyShiftRatesModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyShiftRatesModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyShiftRatesModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyShiftRatesModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyShiftRatesModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Shifts/GetNurseRequiredCredentials": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get nurse required credential list for agency",
        "parameters": [
          {
            "name": "ShiftId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ChosenNurseId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetNurseRequiredCredentialsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNurseRequiredCredentialsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNurseRequiredCredentialsModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Shifts/GetNurseOvertimeShifts": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get nurse shifts within the same pay period of the shift they are chosen to request",
        "parameters": [
          {
            "name": "ShiftId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ChosenNurseId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetNurseOvertimeShiftsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNurseOvertimeShiftsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNurseOvertimeShiftsModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Shifts/AgencySubmitShiftRequest": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Agency submits request on a shift",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencySubmitShiftRequestParam"
                  }
                ],
                "description": "Request for AgencySubmitShiftRequest"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencySubmitShiftRequestParam"
                  }
                ],
                "description": "Request for AgencySubmitShiftRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencySubmitShiftRequestParam"
                  }
                ],
                "description": "Request for AgencySubmitShiftRequest"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencySubmitShiftRequestModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencySubmitShiftRequestModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencySubmitShiftRequestModel"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencySubmitShiftRequestModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencySubmitShiftRequestModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencySubmitShiftRequestModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Shifts/AgencyRetractShiftSubmission": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Agency retracts submission on a shift",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencyRetractShiftSubmissionParam"
                  }
                ],
                "description": "Request for AgencyRetractShiftSubmission"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencyRetractShiftSubmissionParam"
                  }
                ],
                "description": "Request for AgencyRetractShiftSubmission"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencyRetractShiftSubmissionParam"
                  }
                ],
                "description": "Request for AgencyRetractShiftSubmission"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyRetractShiftSubmissionModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyRetractShiftSubmissionModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyRetractShiftSubmissionModel"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyRetractShiftSubmissionModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyRetractShiftSubmissionModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyRetractShiftSubmissionModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Shifts/GetProfessionalRequestLog": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get nurse request log on a shift",
        "parameters": [
          {
            "name": "ShiftId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ChosenNurseId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfessionalRequestLogModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfessionalRequestLogModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfessionalRequestLogModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Shifts/AgencyAcceptAwardOffer": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Agency Accepts Award Offer on a Shift",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencyAcceptAwardOfferParam"
                  }
                ],
                "description": "Request for AgencyAcceptAwardOffer"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencyAcceptAwardOfferParam"
                  }
                ],
                "description": "Request for AgencyAcceptAwardOffer"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencyAcceptAwardOfferParam"
                  }
                ],
                "description": "Request for AgencyAcceptAwardOffer"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyAcceptAwardOfferModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyAcceptAwardOfferModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyAcceptAwardOfferModel"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyAcceptAwardOfferModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyAcceptAwardOfferModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyAcceptAwardOfferModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Shifts/AgencyDeclineAwardOffer": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Agency Declines Award Offer on a Shift",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencyDeclineAwardOfferParam"
                  }
                ],
                "description": "Request for AgencyDeclineAwardOffer"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencyDeclineAwardOfferParam"
                  }
                ],
                "description": "Request for AgencyDeclineAwardOffer"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencyDeclineAwardOfferParam"
                  }
                ],
                "description": "Request for AgencyDeclineAwardOffer"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyDeclineAwardOfferModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyDeclineAwardOfferModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyDeclineAwardOfferModel"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyDeclineAwardOfferModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyDeclineAwardOfferModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyDeclineAwardOfferModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Shifts/GetRequestingShifts": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get requesting shifts for current Agency User",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "description": "System that shifts belong to",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProgramId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PositionTypeId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyRequestingShiftListModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyRequestingShiftListModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyRequestingShiftListModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Shifts/GetOfferedShifts": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get offered shifts for current Agency User, sorting fields supported: \"Shift Id\", \"Position Name\", \"Facility Name\", \"My Bid\", \"Unit Name\", \"Shift Start Date Time\", \"Shift Date\", \"Shift End Bid Date Time\", \"Chosen Nurse\"",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "description": "System that shifts belong to",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProgramId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PositionTypeId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyRequestingShiftListModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyRequestingShiftListModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyRequestingShiftListModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Shifts/GetNotAwardedShifts": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get not awarded shifts for current Agency User, sorting fields supported: \"Shift Id\", \"Position Name\", \"Facility Name\", \"My Bid\", \"Unit Name\", \"Shift Start Date Time\", \"Shift Date\", \"Shift End Bid Date Time\", \"Chosen Nurse\"",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "description": "System that shifts belong to",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProgramId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PositionTypeId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyRequestingShiftListModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyRequestingShiftListModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyRequestingShiftListModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Shifts/GetWatchingShifts": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get watching shifts for current Agency User\r\nValue for sorting should be \"Shift Id\"\r\n, \"Position Name\"\r\n, \"Facility Name\"\r\n, \"My Bid\"\r\n, \"UnitName\", \"UnitName\" },\r\n, \"Shift Start Date Time\", \"ShiftStartDateTime\" },\r\n, \"Shif tDate\", \"ShiftDate\" },\r\n, \"Shift End Bid Date Time\", \"ShiftEndBidDateTime\" },\r\n, \"Chosen Nurse\", \"ChosenNurse\" }",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "description": "System that shifts belong to",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProgramId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PositionTypeId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyWatchedListShiftModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyWatchedListShiftModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyWatchedListShiftModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Shifts/GetAwardedShifts": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get awarded shifts for current Agency User\r\nValues for sorting should  \"Shift Id\"\r\n , \"Position Name\"\r\n , \"Facility Name\"\r\n , \"Unit Name\"\r\n , \"Shift Start Date Time\"\r\n , \"Shift Date\"\r\n ,Shift Date Awarded\"",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "description": "System that shifts belong to",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProgramId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PositionTypeId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyAwardedShiftListModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyAwardedShiftListModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyAwardedShiftListModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Shifts/GetLostShifts": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get lost shifts for current Agency User\r\nValues for sorting should  \"Shift Id\"\r\n , \"Position Name\"\r\n , \"Facility Name\"\r\n , \"Unit Name\"\r\n , \"Shift Start Date Time\"\r\n , \"Shift Date\"\r\n ,Shift Date Awarded\"",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "description": "System that shifts belong to",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProgramId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PositionTypeId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgencyLostShiftListModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgencyLostShiftListModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgencyLostShiftListModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Shifts/AgencyCancelShiftAward": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Agency Cancel Awarded Shift in the future",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencyCancelShiftAwardParam"
                  }
                ],
                "description": "Request for AgencyCancelShiftAward"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencyCancelShiftAwardParam"
                  }
                ],
                "description": "Request for AgencyCancelShiftAward"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencyCancelShiftAwardParam"
                  }
                ],
                "description": "Request for AgencyCancelShiftAward"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyCancelShiftAwardModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyCancelShiftAwardModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyCancelShiftAwardModel"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyCancelShiftAwardModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyCancelShiftAwardModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyCancelShiftAwardModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Shifts/Summary": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get shift summary for current logged-in Agency User.",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "description": "Nullabe System Id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyShiftSummaryModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyShiftSummaryModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyShiftSummaryModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Shifts/Professional/DeclineBid": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Decline Professiona Bid.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeclineProfessionalBidShiftParam"
                  }
                ],
                "description": "Decline Professional Bid Param"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeclineProfessionalBidShiftParam"
                  }
                ],
                "description": "Decline Professional Bid Param"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeclineProfessionalBidShiftParam"
                  }
                ],
                "description": "Decline Professional Bid Param"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyShiftSummaryModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyShiftSummaryModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyShiftSummaryModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Shifts/GetInvoiceTotal": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get Invoice Total for agency",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "description": "SystemId",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DateType",
            "in": "query",
            "description": "Date Type in month",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Constants_DateTypeInMonth"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetInvoiceTotalResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInvoiceTotalResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInvoiceTotalResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetInvoiceTotalResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInvoiceTotalResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInvoiceTotalResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Shifts/CreatePastShift": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Create a Past Shift.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencyCreatePastShiftRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencyCreatePastShiftRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencyCreatePastShiftRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyCreatePastShiftResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyCreatePastShiftResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyCreatePastShiftResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Shifts/GetShiftComments": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get Shift Comments",
        "parameters": [
          {
            "name": "ShiftID",
            "in": "query",
            "description": "Shift ID",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftCommentsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftCommentsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftCommentsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Shifts/GetTimeEntryList": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get Time Entry List",
        "parameters": [
          {
            "name": "SystemID",
            "in": "query",
            "description": "System ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityID",
            "in": "query",
            "description": "Facility ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitID",
            "in": "query",
            "description": "Unit ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "NurseID",
            "in": "query",
            "description": "Nurse ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Start Date",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "End Date",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "UnapprovedOnly",
            "in": "query",
            "description": "UnapprovedOnly",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyTimeEntryListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyTimeEntryListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyTimeEntryListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Shifts/CreateExpense": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Create/Edit Expense.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencyCreateExpenseRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencyCreateExpenseRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AgencyCreateExpenseRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyCreateExpenseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyCreateExpenseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyCreateExpenseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyCreateExpenseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyCreateExpenseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyCreateExpenseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Shifts/GetShiftsByCriteria": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Retrieve Shifts by Criteria",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetAgencyShiftsByCriteriaRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetAgencyShiftsByCriteriaRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetAgencyShiftsByCriteriaRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyShiftsByCriteriaResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyShiftsByCriteriaResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyShiftsByCriteriaResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyShiftsByCriteriaResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyShiftsByCriteriaResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgencyShiftsByCriteriaResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Shifts/SaveMultiShifts": {
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "Add/Edit Multiple Shifts.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveMultiShiftsRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveMultiShiftsRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveMultiShiftsRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveMultiShiftsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveMultiShiftsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveMultiShiftsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveMultiShiftsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveMultiShiftsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveMultiShiftsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemConfigs/GetSystemDetails": {
      "get": {
        "tags": [
          "SystemConfigs"
        ],
        "summary": "Get System Details",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemDetailsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemDetailsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemDetailsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemConfigs/GetSystemSetting": {
      "post": {
        "tags": [
          "SystemConfigs"
        ],
        "summary": "Get System Setting",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetSystemSettingRequest"
                  }
                ],
                "description": "Request for GetSystemSetting"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetSystemSettingRequest"
                  }
                ],
                "description": "Request for GetSystemSetting"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetSystemSettingRequest"
                  }
                ],
                "description": "Request for GetSystemSetting"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemSettingResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemSettingResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemSettingResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemConfigs/UpdateSystem": {
      "post": {
        "tags": [
          "SystemConfigs"
        ],
        "summary": "Hospital Super User Update System",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateSystemRequest"
                  }
                ],
                "description": "Request of UpdateSystem"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateSystemRequest"
                  }
                ],
                "description": "Request of UpdateSystem"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateSystemRequest"
                  }
                ],
                "description": "Request of UpdateSystem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystemResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystemResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystemResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemConfigs/DownloadSystemConfig": {
      "get": {
        "tags": [
          "SystemConfigs"
        ],
        "summary": "Download system configuration",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemConfigs/GetFacilityList": {
      "get": {
        "tags": [
          "SystemConfigs"
        ],
        "summary": "Get List of facility.\r\nSupported sort field names:  \"Region\", \"Facility\", \"Address\", \"Phone\", \"Email\", \"Status\"\r\nsort direction: 0 - Ascending, 1 - Descending",
        "parameters": [
          {
            "name": "Active",
            "in": "query",
            "description": "Return all facilities when Active is null, return active facilities only when Active is true, return inactive facilities when Active is false",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "FacilityName",
            "in": "query",
            "description": "FacilityName or part of FacilityName",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetFacilityListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFacilityListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFacilityListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemConfigs/DownloadFacilityList": {
      "get": {
        "tags": [
          "SystemConfigs"
        ],
        "summary": "Download facility list",
        "parameters": [
          {
            "name": "Active",
            "in": "query",
            "description": "Return all facilities when Active is null, return active facilities only when Active is true, return inactive facilities when Active is false",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "FacilityName",
            "in": "query",
            "description": "FacilityName or part of FacilityName",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemConfigs/GetFacilityDetails": {
      "get": {
        "tags": [
          "SystemConfigs"
        ],
        "summary": "Get Facility Details",
        "parameters": [
          {
            "name": "FacilityId",
            "in": "query",
            "description": "FacilityId is a required paramater.",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetFacilityDetailsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFacilityDetailsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFacilityDetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetFacilityDetailsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFacilityDetailsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFacilityDetailsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemConfigs/SaveFacility": {
      "post": {
        "tags": [
          "SystemConfigs"
        ],
        "summary": "Hospital Super Update/Create Facility, or Hospital Admin Update Facility",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveFacilityRequest"
                  }
                ],
                "description": "Request of SaveFacility"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveFacilityRequest"
                  }
                ],
                "description": "Request of SaveFacility"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveFacilityRequest"
                  }
                ],
                "description": "Request of SaveFacility"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveFacilityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveFacilityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveFacilityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemConfigs/SendTimeAttendanceLink": {
      "post": {
        "tags": [
          "SystemConfigs"
        ],
        "summary": "Hospital Super or Hospital Admin Send Facility Time Attendance Link",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SendTimeAttendanceLinkRequest"
                  }
                ],
                "description": "Request of SendTimeAttendanceLink"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SendTimeAttendanceLinkRequest"
                  }
                ],
                "description": "Request of SendTimeAttendanceLink"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SendTimeAttendanceLinkRequest"
                  }
                ],
                "description": "Request of SendTimeAttendanceLink"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SendTimeAttendanceLinkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendTimeAttendanceLinkResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendTimeAttendanceLinkResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemConfigs/DeleteFacility": {
      "post": {
        "tags": [
          "SystemConfigs"
        ],
        "summary": "Hospital Super or Hospital Admin Delete Facility",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteFacilityRequest"
                  }
                ],
                "description": "Request of DeleteFacility"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteFacilityRequest"
                  }
                ],
                "description": "Request of DeleteFacility"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteFacilityRequest"
                  }
                ],
                "description": "Request of DeleteFacility"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteFacilityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteFacilityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteFacilityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemConfigs/GetUnitList": {
      "get": {
        "tags": [
          "SystemConfigs"
        ],
        "summary": "Get List of Unit.\r\nSupported sort field names: \"Unit\", \"CostCenter\", \"Abbrev\", \"Status\"\r\nsort direction: 0 - Ascending, 1 - Descending",
        "parameters": [
          {
            "name": "FacilityId",
            "in": "query",
            "description": "FacilityId",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitName",
            "in": "query",
            "description": "UnitName or part of UnitName",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Active",
            "in": "query",
            "description": "Return all units when Active is null, return active units only when Active is true, return inactive units when Active is false",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUnitListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUnitListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUnitListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemConfigs/DownloadUnitList": {
      "get": {
        "tags": [
          "SystemConfigs"
        ],
        "summary": "Download unit list",
        "parameters": [
          {
            "name": "FacilityId",
            "in": "query",
            "description": "FacilityId",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitName",
            "in": "query",
            "description": "UnitName or part of UnitName",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Active",
            "in": "query",
            "description": "Return all units when Active is null, return active units only when Active is true, return inactive units when Active is false",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemConfigs/GetUnitDetails": {
      "get": {
        "tags": [
          "SystemConfigs"
        ],
        "summary": "Get Unit Details",
        "parameters": [
          {
            "name": "UnitId",
            "in": "query",
            "description": "Unit Id a required paramater.",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUnitDetailsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUnitDetailsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUnitDetailsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemConfigs/GetUnitDescription": {
      "get": {
        "tags": [
          "SystemConfigs"
        ],
        "summary": "Get Unit Detail Description",
        "parameters": [
          {
            "name": "FacilityId",
            "in": "query",
            "description": "Facility Id",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitId",
            "in": "query",
            "description": "Unit Id",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUnitDescriptionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUnitDescriptionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUnitDescriptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemConfigs/DeleteUnit": {
      "post": {
        "tags": [
          "SystemConfigs"
        ],
        "summary": "Hospital Super User Delete Unit",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteUnitRequest"
                  }
                ],
                "description": "Request of Delete Unit"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteUnitRequest"
                  }
                ],
                "description": "Request of Delete Unit"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteUnitRequest"
                  }
                ],
                "description": "Request of Delete Unit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteUnitResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteUnitResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteUnitResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemConfigs/GetCostCentersByFacilityId": {
      "get": {
        "tags": [
          "SystemConfigs"
        ],
        "summary": "Get List of Cost Centers by FacilityId.",
        "parameters": [
          {
            "name": "FacilityId",
            "in": "query",
            "description": "FacilityId is required",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetCostCentersByFacilityIdResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCostCentersByFacilityIdResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCostCentersByFacilityIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetCostCentersByFacilityIdResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCostCentersByFacilityIdResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCostCentersByFacilityIdResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemConfigs/GetScheduleGroupByCostCenter": {
      "get": {
        "tags": [
          "SystemConfigs"
        ],
        "summary": "Get List of Schedule Group by Cost Center.",
        "parameters": [
          {
            "name": "CostCenter",
            "in": "query",
            "description": "CostCenter is required",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 0,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemConfigs/GetScheduleGroupsByFacilityId": {
      "get": {
        "tags": [
          "SystemConfigs"
        ],
        "summary": "Get List of Schedule Groups by FacilityId.",
        "parameters": [
          {
            "name": "FacilityId",
            "in": "query",
            "description": "FacilityId, pass faciltyID when editing unit, for other cases leave it null",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemConfigs/GetPositionList": {
      "get": {
        "tags": [
          "SystemConfigs"
        ],
        "summary": "Get List of Position.\r\nSupported sort field names: \"Position\", \"PositionType\", \"CareType\", \"Status\"\r\nsort direction: 0 - Ascending, 1 - Descending",
        "parameters": [
          {
            "name": "UnitId",
            "in": "query",
            "description": "UnitId",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PositionName",
            "in": "query",
            "description": "PositionName or part of PositionName",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Active",
            "in": "query",
            "description": "Return all positions when Active is null, return active positions only when Active is true, return inactive positions when Active is false",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetPositionListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPositionListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPositionListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemConfigs/DeletePosition": {
      "post": {
        "tags": [
          "SystemConfigs"
        ],
        "summary": "Hospital Super User Delete Position",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeletePositionRequest"
                  }
                ],
                "description": "Request of DeletePosition"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeletePositionRequest"
                  }
                ],
                "description": "Request of DeletePosition"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeletePositionRequest"
                  }
                ],
                "description": "Request of DeletePosition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeletePositionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletePositionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletePositionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemConfigs/GetPositionDetails": {
      "get": {
        "tags": [
          "SystemConfigs"
        ],
        "summary": "Get Position Details",
        "parameters": [
          {
            "name": "PositionID",
            "in": "query",
            "description": "PositionID is required",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetPositionDetailsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPositionDetailsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPositionDetailsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemConfigs/GetPositionSkillsByGroupId": {
      "get": {
        "tags": [
          "SystemConfigs"
        ],
        "summary": "Get List of Position Skills.",
        "parameters": [
          {
            "name": "PositionId",
            "in": "query",
            "description": "PositionId is required",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SkillGroupId",
            "in": "query",
            "description": "SkillGroupId is required",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetPositionSkillsByGroupIdResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetPositionSkillsByGroupIdResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetPositionSkillsByGroupIdResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetPositionSkillsByGroupIdResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetPositionSkillsByGroupIdResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetPositionSkillsByGroupIdResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemConfigs/CopyPositionSkills": {
      "post": {
        "tags": [
          "SystemConfigs"
        ],
        "summary": "Hospital User Copy Position Skills",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CopyPositionSkillsRequest"
                  }
                ],
                "description": "Request of CopyPositionSkills"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CopyPositionSkillsRequest"
                  }
                ],
                "description": "Request of CopyPositionSkills"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CopyPositionSkillsRequest"
                  }
                ],
                "description": "Request of CopyPositionSkills"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CopyPositionSkillsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CopyPositionSkillsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CopyPositionSkillsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemConfigs/SavePositionSkills": {
      "post": {
        "tags": [
          "SystemConfigs"
        ],
        "summary": "Hospital User Save Position Skills",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SavePositionSkillsRequest"
                  }
                ],
                "description": "Request of SavePositionSkills"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SavePositionSkillsRequest"
                  }
                ],
                "description": "Request of SavePositionSkills"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SavePositionSkillsRequest"
                  }
                ],
                "description": "Request of SavePositionSkills"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SavePositionSkillsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavePositionSkillsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavePositionSkillsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemConfigs/SaveUnit": {
      "post": {
        "tags": [
          "SystemConfigs"
        ],
        "summary": "Hospital Super Update/Create Unit, or Hospital Admin Update Unit",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveUnitRequest"
                  }
                ],
                "description": "Request of Save Unit"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveUnitRequest"
                  }
                ],
                "description": "Request of Save Unit"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveUnitRequest"
                  }
                ],
                "description": "Request of Save Unit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveUnitResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveUnitResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveUnitResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveUnitResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveUnitResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveUnitResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemConfigs/SavePosition": {
      "post": {
        "tags": [
          "SystemConfigs"
        ],
        "summary": "Hospital Super Update/Create Position, or Hospital Admin Update Position",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SavePositionRequest"
                  }
                ],
                "description": "Request of Save Position"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SavePositionRequest"
                  }
                ],
                "description": "Request of Save Position"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SavePositionRequest"
                  }
                ],
                "description": "Request of Save Position"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SavePositionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavePositionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavePositionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemConfigs/GetWageCodeList": {
      "get": {
        "tags": [
          "SystemConfigs"
        ],
        "summary": "Get List of WageCode, for Hospital Super only\r\nSupported sort field names: \"WageCodeName\", \"Description\", \"Active\", \"IntegrationKey\", \"TAIntegrationKey\"\r\nsort direction: 0 - Ascending, 1 - Descending",
        "parameters": [
          {
            "name": "Active",
            "in": "query",
            "description": "Return all wage codes when Active is null, return active wage codes only when Active is true, return inactive wage codes when Active is false",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetWageCodeListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWageCodeListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWageCodeListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemConfigs/DeleteWageCode": {
      "post": {
        "tags": [
          "SystemConfigs"
        ],
        "summary": "Delete Wage Code, for Hospital Super only",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteWageCodeRequest"
                  }
                ],
                "description": "Request of DeleteWageCode"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteWageCodeRequest"
                  }
                ],
                "description": "Request of DeleteWageCode"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteWageCodeRequest"
                  }
                ],
                "description": "Request of DeleteWageCode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteWageCodeResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteWageCodeResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteWageCodeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemConfigs/GetWageCodeDetails": {
      "get": {
        "tags": [
          "SystemConfigs"
        ],
        "summary": "Get Wage Code Details, for Hospital Super only",
        "parameters": [
          {
            "name": "WageCodeId",
            "in": "query",
            "description": "WageCodeId",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetWageCodeDetailsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWageCodeDetailsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWageCodeDetailsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemConfigs/SaveWageCode": {
      "post": {
        "tags": [
          "SystemConfigs"
        ],
        "summary": "Save Wage Code, for Hospital Super only",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveWageCodeRequest"
                  }
                ],
                "description": "Request of SaveWageCode"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveWageCodeRequest"
                  }
                ],
                "description": "Request of SaveWageCode"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveWageCodeRequest"
                  }
                ],
                "description": "Request of SaveWageCode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaveWageCodeResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveWageCodeResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveWageCodeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Systems/GetSystems": {
      "get": {
        "tags": [
          "Systems"
        ],
        "summary": "Get system list. If IncludeFacilities=true, return the hierarchy data for the System/Facility dropdown.",
        "description": "Sample request:\r\n            \r\n    GET ​/api​/Systems​/GetSystems\r\n    \r\n    OR\r\n    \r\n    GET /api/Systems/GetSystems?IncludeFacilities=true",
        "parameters": [
          {
            "name": "IncludeFacilities",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ReconciledSystemsOnly",
            "in": "query",
            "description": "For agency, set it to true when using it on these screens: Create Past Shift, Create Expense",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SystemFacilityTreeModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemFacilityTreeModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemFacilityTreeModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Systems/GetSystemTierDetail": {
      "get": {
        "tags": [
          "Systems"
        ],
        "summary": "Get System Tier Detail",
        "parameters": [
          {
            "name": "TierId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemTierDetailResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemTierDetailResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemTierDetailResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemTierDetailResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemTierDetailResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemTierDetailResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Systems/GetPagedSystemTiers": {
      "get": {
        "tags": [
          "Systems"
        ],
        "summary": "Get System Tiers",
        "parameters": [
          {
            "name": "ProgramId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemTiersResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemTiersResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemTiersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemTiersResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemTiersResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemTiersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Systems/SaveSystemTier": {
      "post": {
        "tags": [
          "Systems"
        ],
        "summary": "Save System Tier",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveSystemTierRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveSystemTierRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SaveSystemTierRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Systems/DeleteSystemTier": {
      "post": {
        "tags": [
          "Systems"
        ],
        "summary": "Delete System Tier",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteSystemTierRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteSystemTierRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteSystemTierRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Systems/CopySystemTier": {
      "post": {
        "tags": [
          "Systems"
        ],
        "summary": "Copy System Tier",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CopySystemTierRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CopySystemTierRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CopySystemTierRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CopySystemTierResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CopySystemTierResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CopySystemTierResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CopySystemTierResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CopySystemTierResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CopySystemTierResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Systems/GetNextTierNumber": {
      "get": {
        "tags": [
          "Systems"
        ],
        "summary": "Get Next Tier Number",
        "parameters": [
          {
            "name": "ProgramId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FacilityId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UnitId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Systems/GetJobCategoriesBySystemId": {
      "get": {
        "tags": [
          "Systems"
        ],
        "summary": "Get Job Categories by System.",
        "description": "Sample request:\r\n            \r\n    GET ​/api​/Systems​/GetJobCategoriesBySystem/{systemId}",
        "parameters": [
          {
            "name": "SystemId",
            "in": "query",
            "description": "SytemId will be a required paramater.",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NameOnlyResponses"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NameOnlyResponses"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NameOnlyResponses"
                }
              }
            }
          }
        }
      }
    },
    "/api/Systems/GetJobFunctions": {
      "get": {
        "tags": [
          "Systems"
        ],
        "summary": "Get Job Functions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Systems/Summary": {
      "get": {
        "tags": [
          "Agency Systems"
        ],
        "summary": "Get health system summary.",
        "description": "Approved, Pending, and Inactive are available for Non-Registry version.\r\nRegistryApproved is available for Registry version.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgencySystemSummaryModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencySystemSummaryModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgencySystemSummaryModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Systems/GetSystemsByStatus": {
      "get": {
        "tags": [
          "Agency Systems"
        ],
        "summary": "Get systems by status\r\nSupported sort field names: System, DateApproved(when showing Approved list), DateApplied(when showing Pending/Inactive list)",
        "parameters": [
          {
            "name": "Status",
            "in": "query",
            "description": "Status, including Approved(1), Pending(2), Inactive(3)",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Constants_AgencySystemStatus"
                }
              ]
            }
          },
          {
            "name": "Paging.PageSize",
            "in": "query",
            "description": "The number of records to show on a single page",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paging.PageIndex",
            "in": "query",
            "description": "Starting from 0",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemsByStatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemsByStatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemsByStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agency/Systems/ExportSystemsByStatus": {
      "get": {
        "tags": [
          "Agency Systems"
        ],
        "summary": "Download systems by status\r\nSupported sort field names: System, DateApproved(when showing Approved list), DateApplied(when showing Pending/Inactive list)",
        "parameters": [
          {
            "name": "Status",
            "in": "query",
            "description": "Status, including Approved(1), Pending(2), Inactive(3)",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Constants_AgencySystemStatus"
                }
              ]
            }
          },
          {
            "name": "Sorting.Field",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sorting.Direction",
            "in": "query",
            "description": "Sort direction: 0 - Ascending, 1 - Descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ],
              "description": "Sort direction: 0 - Ascending, 1 - Descending."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Units/GetUnitsByFacilityId": {
      "get": {
        "tags": [
          "Units"
        ],
        "summary": "Get Units by Facility Id",
        "description": "Sample request:\r\n            \r\n    GET ​/api/Units/GetUnitsByFacilityId?FacilityId=8736",
        "parameters": [
          {
            "name": "FacilityId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Units/GetUnits": {
      "get": {
        "tags": [
          "Units"
        ],
        "summary": "Get Units",
        "parameters": [
          {
            "name": "FacilityID",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/Units/GetUnitsWithoutRequisitionSettings": {
      "get": {
        "tags": [
          "Units"
        ],
        "summary": "Get Units without Requisition Settings.",
        "parameters": [
          {
            "name": "FacilityID",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectableItems"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/ResetPassword": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Reset user password when user forgets their password and they provide necessary information",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResetPasswordParam"
                  }
                ],
                "description": "Request for resetting password"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResetPasswordParam"
                  }
                ],
                "description": "Request for resetting password"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResetPasswordParam"
                  }
                ],
                "description": "Request for resetting password"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/GetUsername": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get Username when user forgets",
        "parameters": [
          {
            "name": "FirstName",
            "in": "query",
            "required": true,
            "schema": {
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "LastName",
            "in": "query",
            "required": true,
            "schema": {
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "DateOfBirth",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "AppVersionId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsernameModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsernameModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsernameModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/ForgetPassword": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Get a link to send to user so that they can reset their password by clicking it in their inbox",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ForgetPasswordParam"
                  }
                ],
                "description": "Request for getting a link to reset password"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ForgetPasswordParam"
                  }
                ],
                "description": "Request for getting a link to reset password"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ForgetPasswordParam"
                  }
                ],
                "description": "Request for getting a link to reset password"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ForgetPasswordModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForgetPasswordModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForgetPasswordModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/ChangePassword": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Change Password after user signs in",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ChangePasswordParam"
                  }
                ],
                "description": "Request for changing password"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ChangePasswordParam"
                  }
                ],
                "description": "Request for changing password"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ChangePasswordParam"
                  }
                ],
                "description": "Request for changing password"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/UploadImage": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Upload User Image",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "UserImage"
                ],
                "type": "object",
                "properties": {
                  "UserImage": {
                    "type": "string",
                    "description": "User Image to Upload",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "UserImage": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UploadUserImageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadUserImageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadUserImageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/GetImage": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get User Image",
        "parameters": [
          {
            "name": "UserId",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/VersionSwitch/Switch": {
      "post": {
        "tags": [
          "VersionSwitch"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AcquireTokenRequest": {
        "required": [
          "tokenKey"
        ],
        "type": "object",
        "properties": {
          "tokenKey": {
            "minLength": 1,
            "type": "string"
          },
          "loginType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Constants_LoginTypes"
              }
            ],
            "description": "No need to pass it by default, api/Auth/AcquireToken will return true as response.ChooseMode when user is a hospital admin and at the same time a nurse, \r\nthis case user needs to choose which role to sign in, pass Admin = 2 to sign in as hospital admin, or pass Nurse = 3 to sign in as nurse"
          }
        },
        "additionalProperties": false
      },
      "ActiveSelectableItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Gets or sets the Id of the item as an integer.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the name of the item.",
            "nullable": true
          },
          "selected": {
            "type": "boolean",
            "description": "Gets or sets the selected state of the item."
          },
          "active": {
            "type": "boolean",
            "description": "Gets or sets the active state of the item."
          }
        },
        "additionalProperties": false,
        "description": "The class that provides Id, Name, Selected and Active pairing."
      },
      "ActiveSelectableItems": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActiveSelectableItem"
            },
            "description": "The list of B4Health.Dto.Response.ActiveSelectableItem.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The class the contains the list of B4Health.Dto.Response.ActiveSelectableItem."
      },
      "AddToWatchListModel": {
        "type": "object",
        "properties": {
          "added": {
            "type": "boolean",
            "description": "Set to true if shift(s) is successfully added to watch list"
          },
          "alreadyOnWatchList": {
            "type": "boolean",
            "description": "AlreadyOnWatchList is true only when shift is already added to watch list"
          }
        },
        "additionalProperties": false,
        "description": "Response of AddToWatchList"
      },
      "AddToWatchListParam": {
        "required": [
          "shiftId"
        ],
        "type": "object",
        "properties": {
          "shiftId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request for AddToWatchList"
      },
      "AdditionalRateModel": {
        "type": "object",
        "properties": {
          "overtimeRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "holidayRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "callbackRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "onCallRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "chargeRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddressModel": {
        "type": "object",
        "properties": {
          "streetAddress": {
            "type": "string",
            "nullable": true
          },
          "streetAddress2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdminDropDownOption": {
        "type": "object",
        "properties": {
          "adminId": {
            "type": "integer",
            "format": "int32"
          },
          "userFirstName": {
            "type": "string",
            "nullable": true
          },
          "userLastName": {
            "type": "string",
            "nullable": true
          },
          "userEmail": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdminFacilityModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Gets or sets the Id of the item as an integer.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the name of the item.",
            "nullable": true
          },
          "selected": {
            "type": "boolean",
            "description": "Gets or sets the selected state of the item."
          },
          "unitList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectableItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AgencyAcceptAwardOfferModel": {
        "type": "object",
        "properties": {
          "awardOfferAccepted": {
            "type": "boolean",
            "description": "Set to true if award offer is successfully accepted"
          }
        },
        "additionalProperties": false,
        "description": "Response of AgencyAcceptAwardOffer"
      },
      "AgencyAcceptAwardOfferParam": {
        "required": [
          "bidId"
        ],
        "type": "object",
        "properties": {
          "bidId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request for AgencyAcceptAwardOffer"
      },
      "AgencyAwardedContract": {
        "type": "object",
        "properties": {
          "contractAssignmentID": {
            "type": "integer",
            "format": "int32"
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "positionTypeName": {
            "type": "string",
            "nullable": true
          },
          "shiftTimeType": {
            "type": "string",
            "nullable": true
          },
          "contractAssignmentStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractAssignmentEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "dateAwarded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "bonusRate": {
            "type": "number",
            "format": "double"
          },
          "contractorPayRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "numberOfWeeks": {
            "type": "integer",
            "format": "int32"
          },
          "chosenNurseID": {
            "type": "integer",
            "format": "int32"
          },
          "awardedNurse": {
            "type": "string",
            "nullable": true
          },
          "awardedBid": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AgencyAwardedContractListModel": {
        "type": "object",
        "properties": {
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgencyAwardedContract"
            },
            "description": "Agency Awarded Contracts for current page.",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "List Agency Awarded Contract List."
      },
      "AgencyAwardedOrderListItem": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "integer",
            "description": "ShiftId or ContractId based on IsContract",
            "format": "int32"
          },
          "isContract": {
            "type": "boolean",
            "description": "False means shift, true means contract"
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "string",
            "description": "For shifts it is shift.Position.PositionName, for contracts it is contract.PositionType.PositionTypeName",
            "nullable": true
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "dateAwarded": {
            "type": "string",
            "format": "date-time"
          },
          "chosenNurseId": {
            "type": "integer",
            "format": "int32"
          },
          "chosenNurse": {
            "type": "string",
            "nullable": true
          },
          "shiftTimeTypeName": {
            "type": "string",
            "nullable": true
          },
          "shiftTimeTypeStart": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "shiftTimeTypeEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AgencyAwardedShiftListModel": {
        "type": "object",
        "properties": {
          "shifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgencyAwardedShiftModel"
            },
            "description": "Agency Professionals for current page.",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "List Agency Agency Requesting Shift List."
      },
      "AgencyAwardedShiftModel": {
        "type": "object",
        "properties": {
          "shiftID": {
            "type": "integer",
            "format": "int32"
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "positionName": {
            "type": "string",
            "nullable": true
          },
          "shiftStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftDateAwarded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "shiftPayMultiplier": {
            "type": "number",
            "format": "double"
          },
          "shiftBonusRate": {
            "type": "number",
            "format": "double"
          },
          "shiftBreakTime": {
            "type": "integer",
            "format": "int32"
          },
          "hasTimeCard": {
            "type": "boolean"
          },
          "shiftIsExpense": {
            "type": "boolean"
          },
          "contractorPayRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "chosenNurseID": {
            "type": "integer",
            "format": "int32"
          },
          "awardedNurse": {
            "type": "string",
            "nullable": true
          },
          "awardedBid": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AgencyBillingInfoModel": {
        "type": "object",
        "properties": {
          "billingAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressModel"
              }
            ],
            "description": "Billing address.",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Billing daytime phone number.",
            "nullable": true
          },
          "phoneExt": {
            "type": "string",
            "description": "Billing phone number ext.",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "description": "Billing fax.",
            "nullable": true
          },
          "agencyTaxID": {
            "type": "string",
            "description": "Agency Tax ID.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AgencyCancelShiftAwardModel": {
        "type": "object",
        "properties": {
          "shiftAwardCanceled": {
            "type": "boolean",
            "description": "Set to true if award offer is successfully declined"
          }
        },
        "additionalProperties": false,
        "description": "Response of AgencyCancelShiftAward"
      },
      "AgencyCancelShiftAwardParam": {
        "required": [
          "cancelShiftReasonId",
          "shiftId"
        ],
        "type": "object",
        "properties": {
          "shiftId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "cancelShiftReasonId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request for AgencyCancelShiftAward"
      },
      "AgencyContactItemResponse": {
        "type": "object",
        "properties": {
          "agencyContactID": {
            "type": "integer",
            "format": "int32"
          },
          "agencyId": {
            "type": "integer",
            "format": "int32"
          },
          "agencyName": {
            "type": "string",
            "nullable": true
          },
          "decryptedPassword": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "userActive": {
            "type": "boolean"
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "phoneExt": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "receiveCredentialMessages": {
            "type": "boolean"
          },
          "receiveAllShiftRelatedMessages": {
            "type": "boolean"
          },
          "receiveTimeCardRejectionMessages": {
            "type": "boolean"
          },
          "billingContact": {
            "type": "boolean"
          },
          "isAdmin": {
            "type": "boolean"
          },
          "lastSignin": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AgencyContactsResponse": {
        "type": "object",
        "properties": {
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgencyContactItemResponse"
            },
            "description": "Agency Contacts for current page.",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AgencyContractList": {
        "type": "object",
        "properties": {
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgencyContractModel"
            },
            "description": "Contracts for the current page",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AgencyContractModel": {
        "type": "object",
        "properties": {
          "contractAssignmentID": {
            "type": "integer",
            "format": "int32"
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "positionTypeName": {
            "type": "string",
            "nullable": true
          },
          "contractAssignmentTypeName": {
            "type": "string",
            "nullable": true
          },
          "shiftTimeType": {
            "type": "string",
            "nullable": true
          },
          "shiftStatusID": {
            "type": "integer",
            "format": "int32"
          },
          "contractAssignmentStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractAssignmentEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractAssignmentStartBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractAssignmentEndBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "bonusRate": {
            "type": "number",
            "format": "double"
          },
          "needStatusID": {
            "type": "integer",
            "format": "int32"
          },
          "needStatusDescription": {
            "type": "string",
            "nullable": true
          },
          "numberOfWeeks": {
            "type": "integer",
            "format": "int32"
          },
          "wageRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "contractPostRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "openContracts": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bidCount": {
            "type": "integer",
            "format": "int32"
          },
          "contractAssignmentDateSubmitted": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "submission": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AgencyContractSubmission"
              }
            ],
            "nullable": true
          },
          "contractAssignmentFacilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractAssignmentFacilityDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AgencyContractSubmission": {
        "type": "object",
        "properties": {
          "bidID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "chosenNurseID": {
            "type": "integer",
            "format": "int32"
          },
          "chosenNurse": {
            "type": "string",
            "nullable": true
          },
          "myBid": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "AgencyContractSummaryModel": {
        "type": "object",
        "properties": {
          "bidOn": {
            "type": "integer",
            "description": "Count of shifts/contracts is currently requesting.",
            "format": "int32"
          },
          "agencyProfessionalBidOn": {
            "type": "integer",
            "description": "Count of shifts/contracgts Agency Professional is currently requesting.",
            "format": "int32"
          },
          "won": {
            "type": "integer",
            "description": "Count of shifts/contracts is currently watching.",
            "format": "int32"
          },
          "notAwarded": {
            "type": "integer",
            "description": "Count of shifts/contracts is currently not awarded.",
            "format": "int32"
          },
          "awardOffer": {
            "type": "integer",
            "description": "Count of shifts/contracts is currently offered.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AgencyCreateExpenseRequest": {
        "required": [
          "expense",
          "facilityId",
          "positionId",
          "selectedNurseId",
          "shiftStartDate",
          "unitId",
          "wageCodeId"
        ],
        "type": "object",
        "properties": {
          "shiftId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "systemId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Required if it's new expense or the expense doesn't belong to any contracts for ICON(34).",
            "format": "int32",
            "nullable": true
          },
          "facilityId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "unitId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "positionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "wageCodeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "shiftStartDate": {
            "type": "string",
            "format": "date"
          },
          "selectedNurseId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "contractAssignmentId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Required for ICON(34).",
            "format": "int32",
            "nullable": true
          },
          "programId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Visible for registry version only.",
            "format": "int32",
            "nullable": true
          },
          "expense": {
            "type": "number",
            "format": "double"
          },
          "shiftComment": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AgencyCreateExpenseResponse": {
        "type": "object",
        "properties": {
          "shiftId": {
            "type": "integer",
            "description": "ShiftID will be greater than zero if shift is created successfully",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of Save Expense"
      },
      "AgencyCreatePastShiftRequest": {
        "required": [
          "payMultiplier",
          "positionId",
          "shiftEndDateTime",
          "shiftStartDateTime",
          "unitId"
        ],
        "type": "object",
        "properties": {
          "shiftId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "systemId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Required if it's new shift or the shift doesn't belong to any contracts.",
            "format": "int32",
            "nullable": true
          },
          "facilityId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Required if it's new shift or the shift doesn't belong to any contracts.",
            "format": "int32",
            "nullable": true
          },
          "unitId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "positionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "shiftStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftBillingDate": {
            "type": "string",
            "description": "Visible if AppVersion has setting ALLOW_AGENCY_BILLING_DATE(259).",
            "format": "date",
            "nullable": true
          },
          "payMultiplier": {
            "type": "number",
            "format": "double"
          },
          "shiftBonus": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "shiftBreakTime": {
            "type": "integer",
            "format": "int32"
          },
          "shiftReconcileNegativeHours": {
            "type": "boolean",
            "description": "In edit mode, visible if it's negative shift."
          },
          "shiftReconcileShiftId": {
            "type": "integer",
            "description": "In edit mode, visible if it's negative shift.",
            "format": "int32",
            "nullable": true
          },
          "selectedNurseId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Required if it's new shift or the shift doesn't belong to any contracts.",
            "format": "int32",
            "nullable": true
          },
          "programId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Visible for registry version only.",
            "format": "int32",
            "nullable": true
          },
          "agencyFacilityRateTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Wage Rate is Required if Agency Professional is selected.",
            "format": "int32",
            "nullable": true
          },
          "contractAssignmentId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shiftPayRate": {
            "type": "number",
            "description": "Visible if Agency Professional has a contract assignment for this time frame and this contract has custom pay rate.\r\n",
            "format": "double",
            "nullable": true
          },
          "shiftComment": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AgencyCreatePastShiftResponse": {
        "type": "object",
        "properties": {
          "shiftId": {
            "type": "integer",
            "description": "ShiftID will be greater than zero if shift is created successfully",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of Save Shift"
      },
      "AgencyDeclineAwardOfferModel": {
        "type": "object",
        "properties": {
          "awardOfferDeclined": {
            "type": "boolean",
            "description": "Set to true if award offer is successfully declined"
          }
        },
        "additionalProperties": false,
        "description": "Response of AgencyDeclineAwardOffer"
      },
      "AgencyDeclineAwardOfferParam": {
        "required": [
          "bidId"
        ],
        "type": "object",
        "properties": {
          "bidId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "declineReasonId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Required when AppVersion has DECLINE_AWARD_OFFER_REASON(288), will be ignored when app version does not have DECLINE_AWARD_OFFER_REASON(288)",
            "format": "int32",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "description": "Required when selected decline reason is 'OTHER', will be ignored when selected decline reason is not 'OTHER'",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request for AgencyDeclineAwardOffer"
      },
      "AgencyDeclineContractAwardOfferModel": {
        "type": "object",
        "properties": {
          "awardOfferDeclined": {
            "type": "boolean",
            "description": "Set to true if award offer is successfully declined"
          }
        },
        "additionalProperties": false,
        "description": "Response of AgencyDeclineContractAwardOffer"
      },
      "AgencyDeclineContractAwardOfferParam": {
        "required": [
          "contractBidId"
        ],
        "type": "object",
        "properties": {
          "contractBidId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "declineReasonId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Required when AppVersion has DECLINE_AWARD_OFFER_REASON(288), will be ignored when app version does not have DECLINE_AWARD_OFFER_REASON(288)",
            "format": "int32",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "description": "Required when selected decline reason is 'OTHER', will be ignored when selected decline reason is not 'OTHER'",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request for AgencyDeclineContractAwardOffer"
      },
      "AgencyFacilityRateItem": {
        "type": "object",
        "properties": {
          "agencyFacilityRateTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "rateTypeName": {
            "type": "string",
            "nullable": true
          },
          "rateTypeRate": {
            "type": "number",
            "format": "double"
          },
          "rateTypePayRate": {
            "type": "number",
            "format": "double"
          },
          "rateTypeActive": {
            "type": "boolean"
          },
          "selected": {
            "type": "boolean",
            "description": "Default to the current AgencyFacilityRate when Selected is true"
          }
        },
        "additionalProperties": false
      },
      "AgencyLostContract": {
        "type": "object",
        "properties": {
          "contractAssignmentID": {
            "type": "integer",
            "format": "int32"
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "positionTypeName": {
            "type": "string",
            "nullable": true
          },
          "shiftTimeType": {
            "type": "string",
            "nullable": true
          },
          "contractAssignmentStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractAssignmentEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "dateAwarded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "bonusRate": {
            "type": "number",
            "format": "double"
          },
          "numberOfWeeks": {
            "type": "integer",
            "format": "int32"
          },
          "contractorPayRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "awardedNurse": {
            "type": "string",
            "nullable": true
          },
          "awardedBid": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AgencyLostContractListModel": {
        "type": "object",
        "properties": {
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgencyLostContract"
            },
            "description": "Agency Requesting Contracts for current page.",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Agency LostContract List"
      },
      "AgencyLostShiftListModel": {
        "type": "object",
        "properties": {
          "shifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgencyLostShiftModel"
            },
            "description": "Agency Professionals for current page.",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AgencyLostShiftModel": {
        "type": "object",
        "properties": {
          "shiftID": {
            "type": "integer",
            "format": "int32"
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "positionName": {
            "type": "string",
            "nullable": true
          },
          "shiftStatusID": {
            "type": "integer",
            "format": "int32"
          },
          "shiftStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftDateAwarded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "shiftPayMultiplier": {
            "type": "number",
            "format": "double"
          },
          "shiftBonusRate": {
            "type": "number",
            "format": "double"
          },
          "shiftBreakTime": {
            "type": "integer",
            "format": "int32"
          },
          "contractorPayRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "awardedNurse": {
            "type": "string",
            "nullable": true
          },
          "awardedBid": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AgencyNurseAvailabilityListItem": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "integer",
            "description": "EventId",
            "format": "int32",
            "nullable": true
          },
          "shiftId": {
            "type": "integer",
            "description": "ShiftId",
            "format": "int32",
            "nullable": true
          },
          "startDateTime": {
            "type": "string",
            "description": "StartDateTime",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "description": "EndDateTime",
            "format": "date-time"
          },
          "professionalId": {
            "type": "integer",
            "description": "UserId of Professional",
            "format": "int32"
          },
          "nurseId": {
            "type": "integer",
            "description": "NurseId of Professional",
            "format": "int32"
          },
          "professionalFirstName": {
            "type": "string",
            "description": "FirstName of Professional",
            "nullable": true
          },
          "professionalLastName": {
            "type": "string",
            "description": "LastName of Professional",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "positionType": {
            "type": "string",
            "description": "PositionType of Professional",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Item of agency nurse availability list"
      },
      "AgencyNurseSummaryModel": {
        "type": "object",
        "properties": {
          "miniProfile": {
            "type": "integer",
            "description": "Count of Mini-Profiles.",
            "format": "int32"
          },
          "credentialed": {
            "type": "integer",
            "description": "Count of credentialed professionals.",
            "format": "int32"
          },
          "inProcess": {
            "type": "integer",
            "description": "Count of in-process professionals.",
            "format": "int32"
          },
          "pendingConfirmation": {
            "type": "integer",
            "description": "Count of pending confirmation.",
            "format": "int32"
          },
          "inactive": {
            "type": "integer",
            "description": "Count of inactive professionals.",
            "format": "int32"
          },
          "all": {
            "type": "integer",
            "description": "Count of all professionals.",
            "format": "int32"
          },
          "approved": {
            "type": "integer",
            "description": "Count of Approved professionals.",
            "format": "int32"
          },
          "expiredCredentialCount": {
            "type": "integer",
            "description": "Count of professionals with expired credentials.",
            "format": "int32",
            "nullable": true
          },
          "pendingCredentialCount": {
            "type": "integer",
            "description": "Count of professionals with pending credentials.",
            "format": "int32",
            "nullable": true
          },
          "terminatedCount": {
            "type": "integer",
            "description": "Count of Terminated professionals.",
            "format": "int32"
          },
          "inactiveLOAInactivityCount": {
            "type": "integer",
            "description": "Count of InactiveLOAInactivityCount professionals.",
            "format": "int32"
          },
          "inactiveNonCompliantCount": {
            "type": "integer",
            "description": "Count of InactiveNonCompliantCount professionals.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Agency professional/nurse summary."
      },
      "AgencyNurseSystemCredentialListItem": {
        "type": "object",
        "properties": {
          "nurseCredentialId": {
            "type": "integer",
            "format": "int32"
          },
          "credentialName": {
            "type": "string",
            "nullable": true
          },
          "nurseCredentialDocument": {
            "type": "string",
            "nullable": true
          },
          "credentialIsCore": {
            "type": "boolean"
          },
          "nurseCredentialFulfilled": {
            "type": "boolean"
          },
          "credentialExpireDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "credentialDateSubmitted": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "credentialDocumentUploaded": {
            "type": "boolean"
          },
          "credentialArchived": {
            "type": "boolean"
          },
          "uploadedBy": {
            "type": "string",
            "nullable": true
          },
          "showFulfilled": {
            "type": "boolean"
          },
          "allowViewCredential": {
            "type": "boolean",
            "description": "Indicates if the current logged-in user is allowed to view the credential document."
          },
          "allowViewArchive": {
            "type": "boolean",
            "description": "Indicates if the current logged-in user is allowed to view the archived credentials."
          }
        },
        "additionalProperties": false
      },
      "AgencyNurseSystemItem": {
        "type": "object",
        "properties": {
          "systemId": {
            "type": "integer",
            "format": "int32"
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "nurseSystemStatus": {
            "type": "string",
            "nullable": true
          },
          "nurseDateApplied": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "nurseDateApproved": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "systemAddress": {
            "type": "string",
            "nullable": true
          },
          "systemCity": {
            "type": "string",
            "nullable": true
          },
          "systemState": {
            "type": "string",
            "nullable": true
          },
          "systemZipCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AgencyOrderSummaryModel": {
        "type": "object",
        "properties": {
          "requesting": {
            "type": "integer",
            "description": "Count of shifts/contracts is currently requesting",
            "format": "int32"
          },
          "agencyProfessionalRequesting": {
            "type": "integer",
            "description": "Count of shifts/contracts Agency Professional is currently requesting",
            "format": "int32"
          },
          "watching": {
            "type": "integer",
            "description": "Count of shifts/contracts is currently watching",
            "format": "int32"
          },
          "won": {
            "type": "integer",
            "description": "Count of shifts/contracts is currently won",
            "format": "int32"
          },
          "lost": {
            "type": "integer",
            "description": "Count of shifts/contracts is currently lost",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Agency Shift/Contract Summary"
      },
      "AgencyProfessionalListItemModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User Id.",
            "format": "int32"
          },
          "nurseId": {
            "type": "integer",
            "description": "Nurse Id.",
            "format": "int32"
          },
          "nurseName": {
            "type": "string",
            "description": "Nurse name.",
            "nullable": true
          },
          "positionType": {
            "type": "string",
            "description": "Position Type.",
            "nullable": true
          },
          "careType": {
            "type": "string",
            "description": "Care Type.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Show Professional Name in the pattern of 'FirstName LastName(AgencyNurseStatus)' when AgencyNurseStatus is not empty,\r\nShow Professional Name in the pattern of 'FirstName LastName' when AgencyNurseStatus is empty,\r\nAgencyNurseStatus should be one of the following, 'Approved', 'Inactive', 'Mini Profile', 'In Process', 'Pending', 'Credentialed'.",
            "nullable": true
          },
          "Mobile": {
            "type": "string",
            "description": "Mobile. Value will show for UMMS",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "description": "Nurse Email. Value will show for UMMS",
            "nullable": true
          },
          "SecondaryEmail": {
            "type": "string",
            "description": "Secondary Email. Value will show for UMMS",
            "nullable": true
          },
          "UMMSEmployeeId": {
            "type": "string",
            "description": "Employee Id. Value will show for UMMS",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Return list of Agency professionals."
      },
      "AgencyProfessionalListModel": {
        "type": "object",
        "properties": {
          "professionals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgencyProfessionalListItemModel"
            },
            "description": "Agency Professionals for current page.",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "List Agency Professionals."
      },
      "AgencyProfessionalRequestingContract": {
        "type": "object",
        "properties": {
          "contractAssignmentID": {
            "type": "integer",
            "format": "int32"
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "positionTypeName": {
            "type": "string",
            "nullable": true
          },
          "shiftTimeTypeName": {
            "type": "string",
            "nullable": true
          },
          "shiftTimeTypeStart": {
            "type": "string",
            "format": "date-time"
          },
          "shiftTimeTypeEnd": {
            "type": "string",
            "format": "date-time"
          },
          "shiftStatusID": {
            "type": "integer",
            "format": "int32"
          },
          "contractAssignmentStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractAssignmentEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractAssignmentStartBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractAssignmentEndBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "needStatusID": {
            "type": "integer",
            "format": "int32"
          },
          "actionType": {
            "type": "integer",
            "format": "int32"
          },
          "bidID": {
            "type": "integer",
            "format": "int32"
          },
          "nurseID": {
            "type": "integer",
            "format": "int32"
          },
          "requester": {
            "type": "string",
            "nullable": true
          },
          "submissionDate": {
            "type": "string",
            "format": "date-time"
          },
          "approvedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "costCenterCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AgencyProfessionalRequestingContractListModel": {
        "type": "object",
        "properties": {
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgencyProfessionalRequestingContract"
            },
            "description": "Agency Requesting Contracts for current page.",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "List Agency Professional Requesting Contract Model."
      },
      "AgencyProfessionalRequestingShiftModel": {
        "type": "object",
        "properties": {
          "shiftID": {
            "type": "integer",
            "format": "int32"
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "positionName": {
            "type": "string",
            "nullable": true
          },
          "shiftStatusID": {
            "type": "integer",
            "format": "int32"
          },
          "shiftStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftStartBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftEndBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "needStatusID": {
            "type": "integer",
            "format": "int32"
          },
          "shiftBreakTime": {
            "type": "integer",
            "format": "int32"
          },
          "actionType": {
            "type": "integer",
            "format": "int32"
          },
          "bidID": {
            "type": "integer",
            "format": "int32"
          },
          "nurseID": {
            "type": "integer",
            "format": "int32"
          },
          "requester": {
            "type": "string",
            "nullable": true
          },
          "submissionDate": {
            "type": "string",
            "format": "date-time"
          },
          "approvedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "costCenterCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AgencyProfileModel": {
        "type": "object",
        "properties": {
          "agencyName": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "mainPhone": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time"
          },
          "sendEmail": {
            "type": "boolean"
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressModel"
              }
            ],
            "nullable": true
          },
          "mobilePhone": {
            "type": "string",
            "nullable": true
          },
          "recieveTextMessage": {
            "type": "boolean"
          },
          "phoneExt": {
            "type": "string",
            "nullable": true
          },
          "afterHoursPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AgencyRequestingContract": {
        "type": "object",
        "properties": {
          "contractAssignmentID": {
            "type": "integer",
            "format": "int32"
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "positionTypeName": {
            "type": "string",
            "nullable": true
          },
          "shiftTimeType": {
            "type": "string",
            "nullable": true
          },
          "shiftStatusID": {
            "type": "integer",
            "format": "int32"
          },
          "contractAssignmentStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractAssignmentEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractAssignmentStartBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractAssignmentEndBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "bonusRate": {
            "type": "number",
            "format": "double"
          },
          "numberOfWeeks": {
            "type": "integer",
            "format": "int32"
          },
          "needStatusID": {
            "type": "integer",
            "format": "int32"
          },
          "needStatusDescription": {
            "type": "string",
            "nullable": true
          },
          "contractorPayRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "awardedNurseID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "awardedBidID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "awardMessageSent": {
            "type": "boolean"
          },
          "showAcceptOfferButton": {
            "type": "boolean"
          },
          "showDeclineOfferButton": {
            "type": "boolean"
          },
          "submission": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AgencyContractSubmission"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AgencyRequestingContractListModel": {
        "type": "object",
        "properties": {
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgencyRequestingContract"
            },
            "description": "Agency Requesting Contracts for current page.",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Agency Requesting Contract List"
      },
      "AgencyRequestingShiftListModel": {
        "type": "object",
        "properties": {
          "shifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgencyRequestingShiftModel"
            },
            "description": "Agency Professionals for current page.",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "List Agency Agency Requesting Shift List."
      },
      "AgencyRequestingShiftModel": {
        "type": "object",
        "properties": {
          "shiftID": {
            "type": "integer",
            "format": "int32"
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "positionName": {
            "type": "string",
            "nullable": true
          },
          "shiftStatusID": {
            "type": "integer",
            "format": "int32"
          },
          "shiftStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftStartBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftEndBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftPayMultiplier": {
            "type": "number",
            "format": "double"
          },
          "shiftBonusRate": {
            "type": "number",
            "format": "double"
          },
          "shiftBreakTime": {
            "type": "integer",
            "format": "int32"
          },
          "needStatusID": {
            "type": "integer",
            "format": "int32"
          },
          "needStatusDescription": {
            "type": "string",
            "nullable": true
          },
          "contractorPayRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "shiftAwardedNurseID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shiftAwardedBidID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shiftAwardMessageSent": {
            "type": "boolean"
          },
          "showAcceptOfferButton": {
            "type": "boolean"
          },
          "showDeclineOfferButton": {
            "type": "boolean"
          },
          "submission": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AgencyShiftSubmissionModel"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AgencyRetractContractSubmissionModel": {
        "type": "object",
        "properties": {
          "submissionRetracted": {
            "type": "boolean",
            "description": "Set to true if submission is successfully retracted"
          }
        },
        "additionalProperties": false,
        "description": "Response of AgencyRetractContractSubmission"
      },
      "AgencyRetractContractSubmissionParam": {
        "required": [
          "contractAssignmentBidIds"
        ],
        "type": "object",
        "properties": {
          "contractAssignmentBidIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "List of Contract Assignment Bid Ids."
          },
          "retractReasonId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Optional List of Retract reasons.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request for Agency Retract Contract Submission."
      },
      "AgencyRetractShiftSubmissionModel": {
        "type": "object",
        "properties": {
          "submissionRetracted": {
            "type": "boolean",
            "description": "Set to true if submission is successfully retracted"
          }
        },
        "additionalProperties": false,
        "description": "Response of AgencyRetractShiftSubmission"
      },
      "AgencyRetractShiftSubmissionParam": {
        "required": [
          "bidIds"
        ],
        "type": "object",
        "properties": {
          "bidIds": {
            "maxItems": 200,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "retractReasonId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "RetractReasonId is required when app version has RETRACT_REASONS(249), it is ignored for app versions those do not have RETRACT_REASONS",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request for AgencyRetractShiftSubmission"
      },
      "AgencyShiftItem": {
        "type": "object",
        "properties": {
          "shiftID": {
            "type": "integer",
            "format": "int32"
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "positionName": {
            "type": "string",
            "nullable": true
          },
          "shiftStatusID": {
            "type": "integer",
            "format": "int32"
          },
          "shiftStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftStartBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftEndBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftPayMultiplier": {
            "type": "number",
            "format": "double"
          },
          "shiftBonusRate": {
            "type": "number",
            "format": "double"
          },
          "shiftBreakTime": {
            "type": "integer",
            "format": "int32"
          },
          "needStatusID": {
            "type": "integer",
            "format": "int32"
          },
          "needStatusDescription": {
            "type": "string",
            "nullable": true
          },
          "wageRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bidCount": {
            "type": "integer",
            "format": "int32"
          },
          "submission": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AgencyShiftSubmissionModel"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AgencyShiftListItem": {
        "type": "object",
        "properties": {
          "shiftId": {
            "type": "integer",
            "format": "int32"
          },
          "shiftIsHoliday": {
            "type": "boolean"
          },
          "facilityId": {
            "type": "integer",
            "format": "int32"
          },
          "unitId": {
            "type": "integer",
            "format": "int32"
          },
          "positionId": {
            "type": "integer",
            "format": "int32"
          },
          "programId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "awardedNurseId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "chosenNurseId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shiftStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftBreakTime": {
            "type": "integer",
            "format": "int32"
          },
          "agencyFacilityRateTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "regularRateDiff": {
            "type": "number",
            "format": "double"
          },
          "shiftPayMultiplier": {
            "type": "number",
            "format": "double"
          },
          "hours": {
            "type": "number",
            "format": "double"
          },
          "amountBilled": {
            "type": "number",
            "format": "double"
          },
          "shiftIsExpense": {
            "type": "boolean",
            "description": "Indicates if it is an expense shift."
          },
          "showTimeCard": {
            "type": "boolean",
            "description": "Indicates if the agency can View, Save/Update, and Fax this time card."
          },
          "hasTimeCard": {
            "type": "boolean",
            "description": "Indicates if the shift has a time card."
          }
        },
        "additionalProperties": false
      },
      "AgencyShiftListModel": {
        "type": "object",
        "properties": {
          "shifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgencyShiftItem"
            },
            "description": "Shifts for the current page",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AgencyShiftSubmissionModel": {
        "type": "object",
        "properties": {
          "bidID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "chosenNurseID": {
            "type": "integer",
            "format": "int32"
          },
          "chosenNurse": {
            "type": "string",
            "nullable": true
          },
          "myBid": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "AgencyShiftSummaryModel": {
        "type": "object",
        "properties": {
          "bidOn": {
            "type": "integer",
            "description": "Count of shifts/contracts is currently requesting.",
            "format": "int32"
          },
          "agencyProfessionalBidOn": {
            "type": "integer",
            "description": "Count of shifts/contracgts Agency Professional is currently requesting.",
            "format": "int32"
          },
          "watching": {
            "type": "integer",
            "description": "Count of shifts/contracts is currently watching.",
            "format": "int32"
          },
          "won": {
            "type": "integer",
            "description": "Count of shifts/contracts is currently won.",
            "format": "int32"
          },
          "notAwarded": {
            "type": "integer",
            "description": "Count of shifts/contracts is currently not awarded.",
            "format": "int32"
          },
          "awardOffer": {
            "type": "integer",
            "description": "Count of shifts/contracts is currently offered.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AgencySubmitContractRequestModel": {
        "type": "object",
        "properties": {
          "submissionCompleted": {
            "type": "boolean",
            "description": "Set to true if submission is successfully completed"
          },
          "overlappingContractId": {
            "type": "integer",
            "description": "ContractId that professional has that overlaps with this contract.",
            "format": "int32",
            "nullable": true
          },
          "overlappingByOtherAgency": {
            "type": "boolean",
            "description": "It is true when professional has already been submitted by another agency for this contract. Only make sense when OverlappingContractId has a value."
          }
        },
        "additionalProperties": false,
        "description": "Response of AgencySubmitContractRequest"
      },
      "AgencySubmitContractRequestParam": {
        "required": [
          "chosenNurseId",
          "contractId",
          "rate",
          "rateTypeId"
        ],
        "type": "object",
        "properties": {
          "contractId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "chosenNurseId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "rateTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Pass RateTypeId only when user can see rate dropdown or rate grid from UI, no matter they can select one or not. RateTypeId is required when Rate is null.",
            "format": "int32"
          },
          "rate": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "number",
            "description": "Pass Rate only when user can see rate textbox from UI, no matter they can edit it or not. Rate is required when RateTypeId is null.",
            "format": "double"
          },
          "professionalBidID": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Leave it null for now",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request for AgencySubmitContractRequest"
      },
      "AgencySubmitShiftRequestModel": {
        "type": "object",
        "properties": {
          "submissionCompleted": {
            "type": "boolean",
            "description": "Set to true if submission is successfully completed"
          }
        },
        "additionalProperties": false,
        "description": "Response of AgencySubmitShiftRequest"
      },
      "AgencySubmitShiftRequestParam": {
        "required": [
          "chosenNurseId",
          "rate",
          "rateTypeId",
          "shiftId"
        ],
        "type": "object",
        "properties": {
          "shiftId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "chosenNurseId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "fromAvailability": {
            "type": "boolean",
            "description": "Pass true when this web API is called from Availability screen, otherwise pass false"
          },
          "rateTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Pass RateTypeId only when user can see rate dropdown or rate grid from UI, no matter they can select one or not. RateTypeId is required when Rate is null.",
            "format": "int32"
          },
          "rate": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "number",
            "description": "Pass Rate only when user can see rate textbox from UI, no matter they can edit it or not. Rate is required when RateTypeId is null.",
            "format": "double"
          },
          "contractorPayRate": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "professionalBidID": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Leave it null for now",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request for AgencySubmitShiftRequest"
      },
      "AgencySystemSummaryModel": {
        "type": "object",
        "properties": {
          "approved": {
            "type": "integer",
            "description": "Count of approved health systems.",
            "format": "int32"
          },
          "pending": {
            "type": "integer",
            "description": "Count of pending health systems.",
            "format": "int32"
          },
          "inactive": {
            "type": "integer",
            "description": "Count of Denied/Inactive health systems.",
            "format": "int32"
          },
          "registryApproved": {
            "type": "integer",
            "description": "Count of approved health systems for Registry Version.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Health system summary data.\r\nApproved, Pending, and Inactive are available for Non-Registry version.\r\nRegistryApproved is available for Registry version."
      },
      "AgencyWatchedListShiftModel": {
        "type": "object",
        "properties": {
          "shifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgencyWatchedShiftModel"
            },
            "description": "Agency Professionals for current page.",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "List Agency Agency Requesting Shift List."
      },
      "AgencyWatchedShiftModel": {
        "type": "object",
        "properties": {
          "shiftID": {
            "type": "integer",
            "format": "int32"
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "positionName": {
            "type": "string",
            "nullable": true
          },
          "shiftStatusID": {
            "type": "integer",
            "format": "int32"
          },
          "shiftStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftStartBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftEndBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftPayMultiplier": {
            "type": "number",
            "format": "double"
          },
          "shiftBonusRate": {
            "type": "number",
            "format": "double"
          },
          "shiftBreakTime": {
            "type": "integer",
            "format": "int32"
          },
          "needStatusID": {
            "type": "integer",
            "format": "int32"
          },
          "needStatusDescription": {
            "type": "string",
            "nullable": true
          },
          "postRate": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "AllowAccessPositionTypeItem": {
        "type": "object",
        "properties": {
          "allowAccessPositionTypeID": {
            "type": "integer",
            "format": "int32"
          },
          "positionType": {
            "type": "string",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "dateCreatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AppVersionCustomConfigRequest": {
        "type": "object",
        "properties": {
          "masterCustomSettingIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppVersionItem": {
        "type": "object",
        "properties": {
          "appVersionId": {
            "type": "integer",
            "format": "int32"
          },
          "agencyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "systemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "appVersionURL": {
            "type": "string",
            "nullable": true
          },
          "appVersionName": {
            "type": "string",
            "nullable": true
          },
          "appVersionAddress": {
            "type": "string",
            "nullable": true
          },
          "appVersionAddress2": {
            "type": "string",
            "nullable": true
          },
          "appVersionCity": {
            "type": "string",
            "nullable": true
          },
          "appVersionState": {
            "type": "string",
            "nullable": true
          },
          "appVersionZipCode": {
            "type": "string",
            "nullable": true
          },
          "appVersionPhone": {
            "type": "string",
            "nullable": true
          },
          "appVersionFax": {
            "type": "string",
            "nullable": true
          },
          "registryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "appVersionPhonExt": {
            "type": "string",
            "nullable": true
          },
          "appVersionEmail": {
            "type": "string",
            "nullable": true
          },
          "appVersionSupportEmail": {
            "type": "string",
            "nullable": true
          },
          "appVersionKey": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "appVersionSupportPhone": {
            "type": "string",
            "nullable": true
          },
          "appVersionDoNotReplyEmail": {
            "type": "string",
            "nullable": true
          },
          "appVersionLastOrderRetrievalDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "appVersionLastInvoiceRetrievalDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "defaultMSPRate": {
            "type": "number",
            "format": "float"
          },
          "integrationNotificationEmail": {
            "type": "string",
            "nullable": true
          },
          "confirmationLetter": {
            "type": "string",
            "nullable": true
          },
          "isMSP": {
            "type": "boolean"
          },
          "hospitalAdminVersion": {
            "type": "integer",
            "format": "int32"
          },
          "defaultSubMasterMSPRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lastSubconStatementRetrievalDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "appVersionLaunch": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppVersionWithSettingItem": {
        "type": "object",
        "properties": {
          "appVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "appVersionName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "AppVersionWithSettingItem"
      },
      "ApproveRequisitionRequest": {
        "required": [
          "requisitionId"
        ],
        "type": "object",
        "properties": {
          "requisitionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "finalApproval": {
            "type": "boolean",
            "description": "Available if the system has the setting CUSTOM_REQUISITION_APPROVAL_FLOW(293)."
          },
          "nextLevelApprovers": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Available if the system has the setting CUSTOM_REQUISITION_APPROVAL_FLOW(293).\r\n\r\nRequired if it's available and the flag FinalApproval is false.",
            "nullable": true
          },
          "comments": {
            "maxLength": 2000,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApproveRequisitionResponse": {
        "type": "object",
        "properties": {
          "approved": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ApproveTimeEntryModel": {
        "type": "object",
        "properties": {
          "isApproved": {
            "type": "boolean",
            "description": "Set to true if shift is successfully approved by professional"
          },
          "approvedToBill": {
            "type": "boolean",
            "description": "Professional cannot approve after shift is approved to bill"
          },
          "outOfContractDateRange": {
            "type": "boolean",
            "description": "It is true when the shift you are approving is out of the date range of the contract it belongs to"
          },
          "overlapping": {
            "type": "boolean",
            "description": "It is true when the shift you are creating is overlapping with existing shift"
          }
        },
        "additionalProperties": false,
        "description": "Response of ApproveTimeEntry"
      },
      "ApproveTimeEntryParam": {
        "required": [
          "facilityId",
          "positionId",
          "shiftEndDateTime",
          "shiftId",
          "shiftStartDateTime",
          "unitId",
          "wageCodeId"
        ],
        "type": "object",
        "properties": {
          "shiftId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "facilityId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "unitId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "positionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "shiftStartDateTime": {
            "type": "string",
            "format": "date"
          },
          "shiftEndDateTime": {
            "type": "string",
            "format": "date"
          },
          "shiftBreakStartDateTime": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "shiftBreakEndDateTime": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "shiftBreakTime": {
            "type": "integer",
            "description": "Pass null if user does not specify it or it captures exact break datetime",
            "format": "int32",
            "nullable": true
          },
          "wageCodeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request for ApproveTimeEntry"
      },
      "ApprovedFacilityStatusItem": {
        "type": "object",
        "properties": {
          "agencyName": {
            "type": "string",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ArchivedAgencyNurseSystemCredentialListItem": {
        "type": "object",
        "properties": {
          "agencyNurseSystemCredentialId": {
            "type": "integer",
            "description": "AgencyNurseSystemCredentialId",
            "format": "int32"
          },
          "credentialName": {
            "type": "string",
            "nullable": true
          },
          "credentialIsCore": {
            "type": "boolean"
          },
          "credentialFulfilled": {
            "type": "boolean"
          },
          "credentialExpireDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "credentialDateSubmitted": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "credentialDocumentUploaded": {
            "type": "boolean"
          },
          "credentialDateArchived": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "credentialArchivedComments": {
            "type": "string",
            "nullable": true
          },
          "allowViewCredential": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ArchivedNurseCredentialItem": {
        "type": "object",
        "properties": {
          "nurseCredentialId": {
            "type": "integer",
            "description": "NurseCredentialId",
            "format": "int32"
          },
          "nurseId": {
            "type": "integer",
            "format": "int32"
          },
          "credentialId": {
            "type": "integer",
            "description": "Credential Id",
            "format": "int32"
          },
          "credentialName": {
            "type": "string",
            "description": "Credential Name",
            "nullable": true
          },
          "nurseCredentialDocument": {
            "type": "string",
            "nullable": true
          },
          "credentialIsCore": {
            "type": "boolean",
            "description": "Credential IsCore"
          },
          "nurseCredentialFulfilled": {
            "type": "boolean"
          },
          "nurseCredentialExpireDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "nurseCredentialDateSubmitted": {
            "type": "string",
            "format": "date-time"
          },
          "nurseCredentialDocumentUploaded": {
            "type": "boolean"
          },
          "nurseCredentialDateArchived": {
            "type": "string",
            "format": "date-time"
          },
          "nurseCredentialArchivedComments": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AvailabilityListItem": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "integer",
            "description": "EventId",
            "format": "int32"
          },
          "startDateTime": {
            "type": "string",
            "description": "StartDateTime",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "description": "EndDateTime",
            "format": "date-time"
          },
          "professionalId": {
            "type": "integer",
            "description": "UserId of Professional",
            "format": "int32"
          },
          "nurseId": {
            "type": "integer",
            "description": "NurseId of Professional",
            "format": "int32"
          },
          "professionalFirstName": {
            "type": "string",
            "description": "FirstName of Professional",
            "nullable": true
          },
          "professionalLastName": {
            "type": "string",
            "description": "LastName of Professional",
            "nullable": true
          },
          "positionType": {
            "type": "string",
            "description": "PositionType of Professional",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Item of availability list"
      },
      "AwardOfferContract": {
        "type": "object",
        "properties": {
          "contractAssignmentId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "contractAssignmentBatchId": {
            "type": "integer",
            "description": "Return the batch id if the contract is in a batch.",
            "format": "int32",
            "nullable": true
          },
          "contractAssignmentStartDateTime": {
            "type": "string",
            "description": "Contract Start Date",
            "format": "date-time"
          },
          "contractAssignmentEndDateTime": {
            "type": "string",
            "description": "Contract End Date",
            "format": "date-time"
          },
          "contractAssignmentStartBidDateTime": {
            "type": "string",
            "description": "Signup Start Date Time",
            "format": "date-time"
          },
          "contractAssignmentEndBidDateTime": {
            "type": "string",
            "description": "Signup End Date Time",
            "format": "date-time"
          },
          "dateCreatedOn": {
            "type": "string",
            "description": "Creation Date",
            "format": "date-time",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "positionTypeName": {
            "type": "string",
            "nullable": true
          },
          "programName": {
            "type": "string",
            "description": "Registry version only.",
            "nullable": true
          },
          "shiftTime": {
            "type": "string",
            "nullable": true
          },
          "bidCount": {
            "type": "integer",
            "format": "int32"
          },
          "userFirstName": {
            "type": "string",
            "nullable": true
          },
          "userLastName": {
            "type": "string",
            "nullable": true
          },
          "isAgency": {
            "type": "boolean"
          },
          "agencyId": {
            "type": "integer",
            "format": "int32"
          },
          "agencyName": {
            "type": "string",
            "nullable": true
          },
          "nurseId": {
            "type": "integer",
            "format": "int32"
          },
          "hasPrivateComments": {
            "type": "boolean",
            "description": "Indicates if the contrac has private comments. If true, show a pupup for the private comments. For VMS only."
          }
        },
        "additionalProperties": false
      },
      "AwardOfferShiftItem": {
        "type": "object",
        "properties": {
          "shiftId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Always \"AwardOffer\".",
            "nullable": true
          },
          "positionName": {
            "type": "string",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "bidCount": {
            "type": "integer",
            "format": "int32"
          },
          "shiftStartDateTime": {
            "type": "string",
            "description": "Shift Start Date",
            "format": "date-time"
          },
          "shiftEndDateTime": {
            "type": "string",
            "description": "Shift End Date",
            "format": "date-time"
          },
          "shiftStartBidDateTime": {
            "type": "string",
            "description": "Signup Start Date Time",
            "format": "date-time"
          },
          "shiftEndBidDateTime": {
            "type": "string",
            "description": "Signup End Date Time",
            "format": "date-time"
          },
          "shiftBreakTime": {
            "type": "integer",
            "format": "int32"
          },
          "programName": {
            "type": "string",
            "description": "Registry version only.",
            "nullable": true
          },
          "postRate": {
            "type": "number",
            "format": "double"
          },
          "userFirstName": {
            "type": "string",
            "nullable": true
          },
          "userLastName": {
            "type": "string",
            "nullable": true
          },
          "isAgency": {
            "type": "boolean"
          },
          "nurseID": {
            "type": "integer",
            "format": "int32"
          },
          "agencyID": {
            "type": "integer",
            "format": "int32"
          },
          "agencyName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AwardedShiftItem": {
        "type": "object",
        "properties": {
          "shiftId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Always \"Awarded\".",
            "nullable": true
          },
          "positionName": {
            "type": "string",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "bidCount": {
            "type": "integer",
            "format": "int32"
          },
          "shiftStartDateTime": {
            "type": "string",
            "description": "Shift Start Date",
            "format": "date-time"
          },
          "shiftEndDateTime": {
            "type": "string",
            "description": "Shift End Date",
            "format": "date-time"
          },
          "shiftBreakTime": {
            "type": "integer",
            "format": "int32"
          },
          "nurseId": {
            "type": "integer",
            "description": "Shift NurseID / Choosen NurseID",
            "format": "int32"
          },
          "agencyId": {
            "type": "integer",
            "description": "Agency Id",
            "format": "int32"
          },
          "agencyName": {
            "type": "string",
            "description": "AgencyName, it is not empty when shift is awarded to an agency professional",
            "nullable": true
          },
          "userFirstName": {
            "type": "string",
            "description": "FirstName of professional who awarded the shift",
            "nullable": true
          },
          "userLastName": {
            "type": "string",
            "description": "LastName of professional who awarded the shift",
            "nullable": true
          },
          "hasTimeCard": {
            "type": "boolean"
          },
          "shiftIsExpense": {
            "type": "boolean"
          },
          "shiftReconcileNegativeHours": {
            "type": "boolean"
          },
          "reviewer": {
            "type": "string",
            "description": "Visible only for JHU when originating from Pending Survey (Performance Evaluation)",
            "nullable": true
          },
          "programName": {
            "type": "string",
            "description": "Registry version only.",
            "nullable": true
          },
          "postRate": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "BaseResponseModelOfGetFAQByIdResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "description": "Success = 10000 - Request is processed successfully\r\nFailed = 20000 - Request is processed but not successfully, due to certain reasons like validation failed \r\nException = 30000 - Exception occurred when request is processed, \r\nUpgradeRequired = 99999 - Need to upgrade mobile apps first, only applicable for mobile apps",
            "format": "int32"
          },
          "message": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Message may need to show to end user when request is processed successfully or mobile app upgrade is required,\r\nor show to front-end developer why request fails or exception details",
            "nullable": true
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GetFAQByIdResponse"
              }
            ],
            "description": "Data that needs to return, could be a value or object when request is processed successfully, otherwise it will be null",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Base model of each response"
      },
      "BaseResponseModelOfGetFAQsResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "description": "Success = 10000 - Request is processed successfully\r\nFailed = 20000 - Request is processed but not successfully, due to certain reasons like validation failed \r\nException = 30000 - Exception occurred when request is processed, \r\nUpgradeRequired = 99999 - Need to upgrade mobile apps first, only applicable for mobile apps",
            "format": "int32"
          },
          "message": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Message may need to show to end user when request is processed successfully or mobile app upgrade is required,\r\nor show to front-end developer why request fails or exception details",
            "nullable": true
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GetFAQsResponse"
              }
            ],
            "description": "Data that needs to return, could be a value or object when request is processed successfully, otherwise it will be null",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Base model of each response"
      },
      "BaseResponseModelOfSelectableItems": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "description": "Success = 10000 - Request is processed successfully\r\nFailed = 20000 - Request is processed but not successfully, due to certain reasons like validation failed \r\nException = 30000 - Exception occurred when request is processed, \r\nUpgradeRequired = 99999 - Need to upgrade mobile apps first, only applicable for mobile apps",
            "format": "int32"
          },
          "message": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Message may need to show to end user when request is processed successfully or mobile app upgrade is required,\r\nor show to front-end developer why request fails or exception details",
            "nullable": true
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SelectableItems"
              }
            ],
            "description": "Data that needs to return, could be a value or object when request is processed successfully, otherwise it will be null",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Base model of each response"
      },
      "BatchContractActionType": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "BatchContractDetail": {
        "type": "object",
        "properties": {
          "contactAssignmentID": {
            "type": "integer",
            "format": "int32"
          },
          "positionTypeID": {
            "type": "integer",
            "format": "int32"
          },
          "positionTypeName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "facilityID": {
            "type": "integer",
            "format": "int32"
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "thirdPartyID": {
            "type": "string",
            "nullable": true
          },
          "calculatedStatus": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BatchedShiftItem": {
        "type": "object",
        "properties": {
          "shiftId": {
            "type": "integer",
            "format": "int32"
          },
          "shiftStartDateTime": {
            "type": "string",
            "description": "Shift Start Date",
            "format": "date-time"
          },
          "shiftEndDateTime": {
            "type": "string",
            "description": "Shift End Date",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CacheKeySizeItem": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Redis Key, case sensitive, when redis key is composed of multiple parts - contains a colon, it is the part before the first colon, or it is exactly the same as the const string in B4Health.Common.RedisKeys.KeyName.\r\nFor example if the redis key is 'Credential', then Key should be 'Credential', if redis key is 'Facility:123', then key should by 'Facility'",
            "nullable": true
          },
          "size": {
            "type": "number",
            "description": "Size of key in kilobyte",
            "format": "float"
          }
        },
        "additionalProperties": false,
        "description": "CacheKeySizeItem"
      },
      "CalculateBreaktimeResponse": {
        "type": "object",
        "properties": {
          "breakTime": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CareTypeListResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CareTypeModel"
            },
            "description": "Position Type for current page.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CareTypeModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChangePasswordParam": {
        "required": [
          "confirmPassword",
          "password"
        ],
        "type": "object",
        "properties": {
          "password": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Encrypt it before sending"
          },
          "confirmPassword": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Encrypt it before sending"
          }
        },
        "additionalProperties": false,
        "description": "Request for changing password"
      },
      "ClearByKeyResponse": {
        "type": "object",
        "properties": {
          "cacheCleared": {
            "type": "boolean",
            "description": "CacheCleared"
          }
        },
        "additionalProperties": false,
        "description": "Response for web API ClearByKey"
      },
      "CloseRequisitionRequest": {
        "required": [
          "requisitionId"
        ],
        "type": "object",
        "properties": {
          "requisitionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Requisition ID",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request for Close Requisition"
      },
      "CommentAgencyNurseCredentialModel": {
        "type": "object",
        "properties": {
          "commentAdded": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Response of CommentAgencyNurseCredential"
      },
      "CommentAgencyNurseCredentialParam": {
        "required": [
          "comments",
          "credentialId",
          "nurseId"
        ],
        "type": "object",
        "properties": {
          "nurseId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "credentialId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "comments": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "Request for CommentAgencyNurseCredential"
      },
      "CommentModel": {
        "type": "object",
        "properties": {
          "commentID": {
            "type": "integer",
            "format": "int32"
          },
          "nurseID": {
            "type": "integer",
            "format": "int32"
          },
          "adminID": {
            "type": "integer",
            "format": "int32"
          },
          "commentActive": {
            "type": "boolean"
          },
          "commentDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "commentText": {
            "type": "string",
            "nullable": true
          },
          "commentSubject": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "systemName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a comment entity that contains details about comments made by users such as nurses or administrators."
      },
      "Constants_AgencySystemStatus": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "Constants_AvailabilityType": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Constants_AwardedContractStatus": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "Constants_AwardedShiftStatus": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "Constants_B4HDocumentType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "Constants_DateTypeInMonth": {
        "enum": [
          1,
          2,
          3,
          6,
          12
        ],
        "type": "integer",
        "format": "int32"
      },
      "Constants_EventExportOption": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "Constants_EventOption": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "Constants_LoginTypes": {
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "Constants_NotAwardedOrderStatus": {
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "Constants_OpenOrderStatus": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "ContractAssignmentFacilityDto": {
        "type": "object",
        "properties": {
          "contractAssignmentID": {
            "type": "integer",
            "format": "int32"
          },
          "facilityID": {
            "type": "integer",
            "format": "int32"
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContractAssignmentModel": {
        "type": "object",
        "properties": {
          "contractAssignmentID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ContractBatchModel": {
        "type": "object",
        "properties": {
          "contractAssignmentBatchID": {
            "type": "integer",
            "format": "int32"
          },
          "contractAssignmentBatchName": {
            "type": "string",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "positionTypeName": {
            "type": "string",
            "nullable": true
          },
          "numberOfContracts": {
            "type": "integer",
            "format": "int32"
          },
          "awardedContracts": {
            "type": "integer",
            "format": "int32"
          },
          "openContracts": {
            "type": "integer",
            "format": "int32"
          },
          "notAwarded": {
            "type": "integer",
            "format": "int32"
          },
          "contractAssignmentBatchDateCreatedOn": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ContractDetailsModel": {
        "type": "object",
        "properties": {
          "contractAssignmentId": {
            "type": "integer",
            "format": "int32"
          },
          "shiftStatusId": {
            "type": "integer",
            "description": "Contract Status: 1 - Open, 2 - Pending, 3 - Awarded, 4 - Cancelled, 5 - Scheduled",
            "format": "int32"
          },
          "positionTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "positionTypeName": {
            "type": "string",
            "nullable": true
          },
          "systemId": {
            "type": "integer",
            "format": "int32"
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "facility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContractDetailsModel_FacilityModel"
              }
            ],
            "nullable": true
          },
          "contractAssignmentFacilities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "contractAssignmentStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractAssignmentEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractAssignmentStartBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractAssignmentEndBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "description": "Do not show to GHR Agency.",
            "nullable": true
          },
          "additionalInfo": {
            "type": "string",
            "nullable": true
          },
          "dateCreatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "contractAssignmentHasFileVersion": {
            "type": "boolean",
            "description": "Indicates if the contract has attached document."
          },
          "contractAssignmentFileType": {
            "type": "string",
            "nullable": true
          },
          "programId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "programName": {
            "type": "string",
            "nullable": true
          },
          "unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContractDetailsModel_UnitModel"
              }
            ],
            "nullable": true
          },
          "numberOfWeeks": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shiftTimeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContractDetailsModel_ShiftTimeTypeModel"
              }
            ],
            "nullable": true
          },
          "shiftTimeTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "needStatus": {
            "type": "string",
            "description": "For registry version, do not show it for hospital.",
            "nullable": true
          },
          "complianceStatus": {
            "type": "string",
            "description": "For TNAA(7), the contract is awarded on Hospital side.",
            "nullable": true
          },
          "lastUpdatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "parentContractAssignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hoursPerWeek": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "careTypeName": {
            "type": "string",
            "nullable": true
          },
          "numberOfOpenContractsInBatch": {
            "type": "integer",
            "description": "For GHR(17) only. Show Open Contracts in Batch on agency side.",
            "format": "int32",
            "nullable": true
          },
          "primaryInBatch": {
            "type": "boolean",
            "description": "For hospital side."
          },
          "requisition": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContractDetailsModel_RequisitionModel"
              }
            ],
            "nullable": true
          },
          "accountManagerName": {
            "type": "string",
            "nullable": true
          },
          "assignmentManagerName": {
            "type": "string",
            "nullable": true
          },
          "assignmentManagerEmail": {
            "type": "string",
            "nullable": true
          },
          "assignmentManagerPhone": {
            "type": "string",
            "nullable": true
          },
          "secondaryPositionTypeName": {
            "type": "string",
            "nullable": true
          },
          "customerReference": {
            "type": "string",
            "description": "For system has setting CONTRACT_CUSTOMER(274).",
            "nullable": true
          },
          "hiringManager": {
            "type": "string",
            "description": "Show on hospital side. For App Version has setting HIRING_MANAGER_AND_TIMESHEET_APPROVER(280).",
            "nullable": true
          },
          "timeSheetApprover": {
            "type": "string",
            "description": "Show on hospital side. For App Version has setting HIRING_MANAGER_AND_TIMESHEET_APPROVER(280).",
            "nullable": true
          },
          "wageRate": {
            "type": "string",
            "nullable": true
          },
          "wageRateLabel": {
            "type": "string",
            "nullable": true
          },
          "additionalBillRate": {
            "type": "string",
            "nullable": true
          },
          "additionalPayRate": {
            "type": "string",
            "nullable": true
          },
          "contractType": {
            "type": "string",
            "description": "For NU_WEST(22) only.",
            "nullable": true
          },
          "jobCategory": {
            "type": "string",
            "description": "For TNAA(7) only.",
            "nullable": true
          },
          "showConfirmationVerbiage": {
            "type": "boolean",
            "description": "For agency side."
          },
          "showAcceptAwardOffer": {
            "type": "boolean",
            "description": "For agency side."
          },
          "showDeclineAwardOffer": {
            "type": "boolean",
            "description": "For agency side."
          },
          "showRequestButton": {
            "type": "boolean",
            "description": "For agency side."
          },
          "float": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "For TNAA(7) only.",
            "nullable": true
          },
          "requestedTimeOff": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "For App Version has setting REQUESTED_TIME_OFF(326), and the contract is awarded.",
            "nullable": true
          },
          "facilityDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractDetailsModel_FacilityDocumentModel"
            },
            "nullable": true
          },
          "batchedContractAssignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractDetailsModel_BatchedContractAssignmentModel"
            },
            "nullable": true
          },
          "requiredCredentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractDetailsModel_RequiredCredentialModel"
            },
            "description": "For agency side.",
            "nullable": true
          },
          "bids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractDetailsModel_NurseBid"
            },
            "description": "For agency side.",
            "nullable": true
          },
          "contractDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractDetailsModel_ContractDocumentModel"
            },
            "nullable": true
          },
          "allowReconcileContract": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User is able to reconcile the shift."
          },
          "allowEditContract": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User is able to edit the shift."
          },
          "allowUpdateNeedStatus": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User is able to update the Need Status."
          }
        },
        "additionalProperties": false
      },
      "ContractDetailsModel_BatchedContractAssignmentModel": {
        "type": "object",
        "properties": {
          "contractAssignmentId": {
            "type": "integer",
            "format": "int32"
          },
          "contractAssignmentStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractAssignmentEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "positionTypeName": {
            "type": "string",
            "nullable": true
          },
          "shiftTimeTypeStart": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "shiftTimeTypeEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContractDetailsModel_ContractDocumentModel": {
        "type": "object",
        "properties": {
          "contractDocumentID": {
            "type": "integer",
            "format": "int32"
          },
          "documentName": {
            "type": "string",
            "nullable": true
          },
          "documentFileName": {
            "type": "string",
            "nullable": true
          },
          "documentType": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ContractDetailsModel_FacilityDocumentModel": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "integer",
            "format": "int32"
          },
          "documentType": {
            "type": "integer",
            "format": "int32"
          },
          "documentName": {
            "type": "string",
            "nullable": true
          },
          "attachmentFileName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContractDetailsModel_FacilityModel": {
        "type": "object",
        "properties": {
          "labelAlias": {
            "type": "string",
            "description": "System has setting FACILITY_LABEL_AlIAS(322).",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "directions": {
            "type": "string",
            "description": "For agency or nurse, but do not show to NU_WEST.",
            "nullable": true
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressModel"
              }
            ],
            "description": "For agency or nurse, and it's NU_WEST.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContractDetailsModel_NurseBid": {
        "type": "object",
        "properties": {
          "bidId": {
            "type": "integer",
            "format": "int32"
          },
          "bidActive": {
            "type": "boolean"
          },
          "nurseId": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "positionTypeName": {
            "type": "string",
            "nullable": true
          },
          "careTypes": {
            "type": "string",
            "nullable": true
          },
          "rate": {
            "type": "string",
            "nullable": true
          },
          "rejectedReason": {
            "type": "string",
            "nullable": true
          },
          "allowRetract": {
            "type": "boolean"
          },
          "requiredCredential": {
            "type": "boolean",
            "description": "RequiredCredential is true when app version has REQUIRED_CREDENTIAL(131)."
          },
          "requiredCredentialAdded": {
            "type": "boolean",
            "description": "RequiredCredentialAdded indicates if system has added any required credentials, \r\nwhen both RequiredCredential and RequiredCredentialAdded are true show View Credentials link in the Skills Met column,\r\nshow empty when RequiredCredential is true and RequiredCredentialAdded is false."
          },
          "allRequiredCredentialMet": {
            "type": "boolean"
          },
          "agencyNurseStatus": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContractDetailsModel_RequiredCredentialModel": {
        "type": "object",
        "properties": {
          "credentialName": {
            "type": "string",
            "nullable": true
          },
          "waivable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ContractDetailsModel_RequisitionModel": {
        "type": "object",
        "properties": {
          "requisitionId": {
            "type": "integer",
            "format": "int32"
          },
          "requisitionReason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContractDetailsModel_ShiftTimeTypeModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContractDetailsModel_UnitModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContractItem": {
        "type": "object",
        "properties": {
          "contractAssignmentID": {
            "type": "integer",
            "format": "int32"
          },
          "contractAssignmentStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractAssignmentEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "systemID": {
            "type": "integer",
            "format": "int32"
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "facilityID": {
            "type": "integer",
            "format": "int32"
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitID": {
            "type": "integer",
            "format": "int32"
          },
          "unitName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContractRateDifferentialReason": {
        "type": "object",
        "properties": {
          "isHardToFill": {
            "type": "boolean"
          },
          "isNightShift": {
            "type": "boolean"
          },
          "isNegotiatedWithAgency": {
            "type": "boolean"
          },
          "isOtherReason": {
            "type": "boolean"
          },
          "otherRateDifferentialReason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContractRequiredCredential": {
        "type": "object",
        "properties": {
          "credentialName": {
            "type": "string",
            "nullable": true
          },
          "waivable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ContractShift": {
        "type": "object",
        "properties": {
          "shiftId": {
            "type": "integer",
            "format": "int32"
          },
          "shiftStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftBatchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shiftContactName": {
            "type": "string",
            "nullable": true
          },
          "shiftContactPhone": {
            "type": "string",
            "nullable": true
          },
          "shiftComment": {
            "type": "string",
            "nullable": true
          },
          "shiftBreakTime": {
            "type": "integer",
            "format": "int32"
          },
          "shiftIsExpense": {
            "type": "boolean"
          },
          "shiftReconcileNegativeHours": {
            "type": "boolean"
          },
          "positionName": {
            "type": "string",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "facilityAddress": {
            "type": "string",
            "nullable": true
          },
          "facilityAddress2": {
            "type": "string",
            "nullable": true
          },
          "facilityCity": {
            "type": "string",
            "nullable": true
          },
          "facilityState": {
            "type": "string",
            "nullable": true
          },
          "facilityZipCode": {
            "type": "string",
            "nullable": true
          },
          "timeCardFileType": {
            "type": "string",
            "nullable": true
          },
          "programName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContractSubmission": {
        "type": "object",
        "properties": {
          "bidId": {
            "type": "integer",
            "format": "int32"
          },
          "contractAssignmentId": {
            "type": "integer",
            "format": "int32"
          },
          "nurseId": {
            "type": "integer",
            "description": "If agency requested the shift, then it's the NurseId of the agency; otherwise, it's the NurseId of the internal professional.",
            "format": "int32"
          },
          "awardedNurseId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userFirstName": {
            "type": "string",
            "description": "The professional's first name.",
            "nullable": true
          },
          "userLastName": {
            "type": "string",
            "description": "The professional's last name.",
            "nullable": true
          },
          "bidDatePlaced": {
            "type": "string",
            "description": "Submission Date",
            "format": "date-time"
          },
          "isAgency": {
            "type": "boolean",
            "description": "Indicates if the agency requested the shift."
          },
          "agencyId": {
            "type": "integer",
            "description": "If the submission is for agency professional, then AgencyId is greater than 0.",
            "format": "int32"
          },
          "agencyName": {
            "type": "string",
            "description": "If the submission is for agency professional, then AgencyName is not null or empty.",
            "nullable": true
          },
          "chosenNurseId": {
            "type": "integer",
            "description": "If the submission is for agency professional, then ChosenNurseId is greater than 0.",
            "format": "int32"
          },
          "jobTitle": {
            "type": "string",
            "description": "Visible for Internal Professional only.",
            "nullable": true
          },
          "agencyFacilityRateTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "agencyNurseFacilityStatus": {
            "type": "integer",
            "description": "For registry version, or system has the setting RESTRICT_AWARD_BY_AGENCY_NURSE_FACILITY(72). Show the status icon in the column 'Notes'.\r\n\r\nUnder Review = 0, Approved by Facility = 1, Denied by Facility = 2",
            "format": "int32"
          },
          "rejectedReason": {
            "type": "string",
            "description": "Decline request reason.",
            "nullable": true
          },
          "rejectedReasonComments": {
            "type": "string",
            "description": "Decline request comments.",
            "nullable": true
          },
          "placedAgencyContactName": {
            "type": "string",
            "description": "Requested by agency contact name.",
            "nullable": true
          },
          "acceptedAgencyContactName": {
            "type": "string",
            "description": "Offer accepted by agency contact name.",
            "nullable": true
          },
          "isHigherBid": {
            "type": "boolean",
            "description": "Indicates if the submission is a higher bid. If it's true, show the higher indicator '(+)'."
          },
          "isLowerBid": {
            "type": "boolean",
            "description": "Indicates if the submission is a lower bid. If it's true, show the lower indicator '(-)'."
          },
          "awardedContractCancelledReason": {
            "type": "string",
            "description": "For AMN(36) only, show the cancel reason in the column 'Award Submission' when awarded contract is cancelled by agency nurse.",
            "nullable": true
          },
          "isRetracted": {
            "type": "boolean",
            "description": "Indicates if the submission is retracted. If it's retracted, show retracted information."
          },
          "dateRetracted": {
            "type": "string",
            "description": "Retracted Date.",
            "format": "date-time",
            "nullable": true
          },
          "retractedBy": {
            "type": "string",
            "nullable": true
          },
          "isOfferDeclined": {
            "type": "boolean",
            "description": "Indicates if the award offer is declined."
          },
          "dateOfferDeclined": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "offerDeclinedReason": {
            "type": "string",
            "nullable": true
          },
          "offerDeclinedReasonComments": {
            "type": "string",
            "nullable": true
          },
          "dateOffered": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "offeredBy": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Notes: HU, HF, HS, PT, EC, NV",
            "nullable": true
          },
          "submissionStatus": {
            "type": "string",
            "description": "Submission Status: 'REQUEST', 'WIN NOW REQUEST', 'AWARD OFFER SENT', 'AWARDED CONTRACT'.",
            "nullable": true
          },
          "rateText": {
            "type": "string",
            "description": "By default, the column name is 'Offered Rate', if system has FACILITY_RATE_TYPE(67), change the column name to 'Charge / Pay Rate'.\r\n\r\nThe rate text is similar to these: '$50.00', '$59.76 / $59.76', 'Base Pay Rate', '1.25 x Base Pay Rate'.",
            "nullable": true
          },
          "multipliedRateText": {
            "type": "string",
            "description": "This is multiplied against the Health Care Professional's Base Pay Rate. For example, '(1.25 x Offered Rate)'.",
            "nullable": true
          },
          "bonusRateText": {
            "type": "string",
            "description": "Extra bonuses as a fixed dollar amount. For example, '$10 hourly bonus'.",
            "nullable": true
          },
          "hasDuplicates": {
            "type": "boolean",
            "description": "Indicates if the nurse is on multiple bids."
          },
          "allowAssignmentKeyEditing": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User is able to edit the Assignment Key."
          },
          "assignmentKey": {
            "type": "string",
            "nullable": true
          },
          "viewRTO": {
            "type": "boolean"
          },
          "skillsMet": {
            "type": "string",
            "description": "# Skills Met. For example, '4/4'.",
            "nullable": true
          },
          "viewRequiredSkills": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User is able to view the required shift skills."
          },
          "viewRequiredCredentials": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User is able to view the required credentials."
          },
          "allRequiredCredentialMet": {
            "type": "boolean",
            "description": "Indicates if all required credentials are met."
          },
          "showFacilityRateType": {
            "type": "boolean",
            "description": "Indicates if showing Facility Rate Type is required when awarding the request."
          },
          "requiresReconcileConfirmation": {
            "type": "boolean",
            "description": "Indicates if Reconcile Confirmation is required when awarding the request."
          },
          "allowAwardRequest": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User is able to award the request."
          },
          "allowDenyRequest": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User is able to decline the request."
          },
          "allowAwardToOtherContract": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User is able to award the request to other contract."
          },
          "allowRateEditing": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User is able to edit the rate."
          },
          "prospectStatus": {
            "type": "integer",
            "description": "1 - This Professional is currently being reviewed and considered for this Contract Assignment.\r\nOther values - This Professional is no longer being considered for this Contract Assignment.",
            "format": "int32",
            "nullable": true
          },
          "allowProspectStatusEditing": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User is able to edit the prospect status."
          },
          "allowContractAssignmentStatusEditing": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User is able to edit the Contract Assignment status."
          },
          "contractAssignmentStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContractSubmission_ContractAssignmentAgencyNurseStatus"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContractSubmission_ContractAssignmentAgencyNurseStatus": {
        "type": "object",
        "properties": {
          "statusName": {
            "type": "string",
            "nullable": true
          },
          "dateCreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CopyPositionSkillsRequest": {
        "required": [
          "destinationPositionId",
          "sourcePositionId"
        ],
        "type": "object",
        "properties": {
          "sourcePositionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "SourcePositionId to copy skills from",
            "format": "int32"
          },
          "destinationPositionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "DestinationPositionId to copy skills to",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request of CopyPositionSkills"
      },
      "CopyPositionSkillsResponse": {
        "type": "object",
        "properties": {
          "skillsCopied": {
            "type": "boolean",
            "description": "Indicates if position skills are copied successfully"
          }
        },
        "additionalProperties": false,
        "description": "Response of CopyPositionSkills"
      },
      "CopySystemTierItem": {
        "type": "object",
        "properties": {
          "tierNumber": {
            "type": "integer",
            "format": "int32"
          },
          "tierActive": {
            "type": "boolean"
          },
          "systemId": {
            "type": "integer",
            "format": "int32"
          },
          "facilityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "programId": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfDays": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfHours": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "tieringByContractStartDate": {
            "type": "boolean"
          },
          "tierAgencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetTierAgencyListItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CopySystemTierRequest": {
        "type": "object",
        "properties": {
          "tierId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CopySystemTierResponse": {
        "type": "object",
        "properties": {
          "tierInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CopySystemTierItem"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CopyUnitRequisitionSettingsRequest": {
        "required": [
          "facilityId",
          "targetUnitId",
          "unitId"
        ],
        "type": "object",
        "properties": {
          "facilityId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "unitId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "targetUnitId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CopyUnitRequisitionSettingsResponse": {
        "type": "object",
        "properties": {
          "copied": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CostCenterListItem": {
        "type": "object",
        "properties": {
          "costCenter": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateContactModel": {
        "type": "object",
        "properties": {
          "agencyContactId": {
            "type": "integer",
            "description": "AgencyContactId is greater than 0 if agency contact gets created successfully",
            "format": "int32"
          },
          "userAlreadyExists": {
            "type": "boolean",
            "description": "UserAlreadyExists is true if username that user inputs is already there, agency contact was not created"
          }
        },
        "additionalProperties": false,
        "description": "Response of CreateContact"
      },
      "CreateContactParam": {
        "required": [
          "email",
          "firstName",
          "lastName",
          "phone",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "streetAddress": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "streetAddress2": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "stateId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "zipCode": {
            "maxLength": 10,
            "minLength": 0,
            "pattern": "^(\\d{5}-\\d{4}|\\d{5})$",
            "type": "string",
            "nullable": true
          },
          "phone": {
            "maxLength": 12,
            "minLength": 0,
            "pattern": "^\\d{3}[\\-]\\d{3}[\\-]\\d{4}",
            "type": "string"
          },
          "phoneExt": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "fax": {
            "maxLength": 17,
            "minLength": 0,
            "pattern": "(^([1])?\\s*(\\(\\d{3}\\))?\\s*\\d{3}[\\-\\s]?\\d{4}$)|(^\\+?\\d([\\d\\-\\.]){7,20})",
            "type": "string",
            "nullable": true
          },
          "receiveCredentialMessages": {
            "type": "boolean"
          },
          "receiveAllShiftRelatedMessages": {
            "type": "boolean"
          },
          "billingContact": {
            "type": "boolean"
          },
          "isAdmin": {
            "type": "boolean"
          },
          "rateSurveyKeyContact": {
            "type": "boolean"
          },
          "auditComplianceOfficer": {
            "type": "boolean"
          },
          "usageReportCoordinator": {
            "type": "boolean"
          },
          "agencyLicenseCoordinator": {
            "type": "boolean"
          },
          "agencyInsuranceCoordinator": {
            "type": "boolean"
          },
          "registryLiaisonKeyContact": {
            "type": "boolean"
          },
          "authorizedSigner": {
            "type": "boolean"
          },
          "contractsAdministrator": {
            "type": "boolean"
          },
          "clinicalRepresentative": {
            "type": "boolean"
          },
          "receiveTextCancellations": {
            "type": "boolean"
          },
          "mobilePhone": {
            "maxLength": 12,
            "minLength": 0,
            "pattern": "^\\d{3}[\\-]\\d{3}[\\-]\\d{4}",
            "type": "string",
            "nullable": true
          },
          "selectedPrograms": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Selected program Id",
            "nullable": true
          },
          "selectedFacilities": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Only selected facility Id, no system Id",
            "nullable": true
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "programCategoryKey": {
            "type": "string",
            "nullable": true
          },
          "sendEmail": {
            "type": "boolean"
          },
          "username": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Request for CreateContact"
      },
      "CredentialModel": {
        "type": "object",
        "properties": {
          "credentialId": {
            "type": "integer",
            "description": "Credential Id",
            "format": "int32"
          },
          "credentialName": {
            "type": "string",
            "description": "Credential Name",
            "nullable": true
          },
          "isCore": {
            "type": "boolean",
            "description": "Credential IsCore"
          },
          "requireState": {
            "type": "boolean",
            "description": "State is Required"
          },
          "requireType": {
            "type": "boolean",
            "description": "Type is Required"
          }
        },
        "additionalProperties": false,
        "description": "Response of Credentials Model"
      },
      "CustomSetting": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of Custom Config Setting",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Name of Custom Config Setting",
            "nullable": true
          },
          "explanation": {
            "type": "string",
            "description": "Usage Explanation of Custom Config Setting",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "MasterCustomSetting"
      },
      "DeclineProfessionalBidContractParam": {
        "required": [
          "professionalBidId"
        ],
        "type": "object",
        "properties": {
          "professionalBidId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Professional Bid Id",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Decline Professional Bid Contract Param"
      },
      "DeclineProfessionalBidShiftParam": {
        "required": [
          "professionalBidId"
        ],
        "type": "object",
        "properties": {
          "professionalBidId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Professional Bid Id",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Decline Professional Bid Param"
      },
      "DeclineRequisitionRequest": {
        "required": [
          "requisitionId"
        ],
        "type": "object",
        "properties": {
          "requisitionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "comments": {
            "maxLength": 2000,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeclineRequisitionResponse": {
        "type": "object",
        "properties": {
          "declined": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DeleteAdminRequest": {
        "required": [
          "adminId"
        ],
        "type": "object",
        "properties": {
          "adminId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DeleteAdminResponse": {
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DeleteAgencyInsuranceDocumentResponse": {
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DeleteAgencyLicenseDocumentResponse": {
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DeleteAgencyNurseSystemCredentialRequest": {
        "required": [
          "agencyNurseSystemCredentialId"
        ],
        "type": "object",
        "properties": {
          "agencyNurseSystemCredentialId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DeleteAgencyNurseSystemCredentialResponse": {
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean",
            "description": "Set to true if agency nurse system credential(s) successfully deleted"
          }
        },
        "additionalProperties": false,
        "description": "Response of DeleteAgencyNurseSystemCredential"
      },
      "DeleteAllowAccessPositionTypeRequest": {
        "required": [
          "agencyId",
          "allowAccessPositionTypeId"
        ],
        "type": "object",
        "properties": {
          "agencyId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "allowAccessPositionTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DeleteAllowAccessPositionTypeResponse": {
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DeleteAvailabilityRequest": {
        "required": [
          "eventId",
          "option"
        ],
        "type": "object",
        "properties": {
          "eventId": {
            "type": "integer",
            "description": "EventId",
            "format": "int32"
          },
          "option": {
            "maximum": 3,
            "minimum": 1,
            "type": "integer",
            "description": "Extra Option to delete availability. Needs to be one of 1(this occurrence only), 2(this and all future occurrences), 3(all the occurrences)",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request of DeleteAvailability"
      },
      "DeleteAvailabilityResponse": {
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean",
            "description": "It means that event gets deleted successfully when Deleted is true"
          }
        },
        "additionalProperties": false
      },
      "DeleteContactsModel": {
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean",
            "description": "Set to true if agency contacts are successfully deleted"
          }
        },
        "additionalProperties": false,
        "description": "Response of DeleteContacts"
      },
      "DeleteContactsParam": {
        "required": [
          "agencyContactIds"
        ],
        "type": "object",
        "properties": {
          "agencyContactIds": {
            "maxItems": 200,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Pass AgencyContactId list when they choose to delete some agency contacts"
          }
        },
        "additionalProperties": false,
        "description": "Request for DeleteContacts"
      },
      "DeleteFacilityAgencyDocumentRequest": {
        "required": [
          "facilityAgencyDocumentId"
        ],
        "type": "object",
        "properties": {
          "facilityAgencyDocumentId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DeleteFacilityAgencyDocumentResponse": {
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DeleteFacilityDocumentRequest": {
        "required": [
          "facilityDocumentID"
        ],
        "type": "object",
        "properties": {
          "facilityDocumentID": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Facility Document ID",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DeleteFacilityDocumentResponse": {
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DeleteFacilityRequest": {
        "required": [
          "facilityId"
        ],
        "type": "object",
        "properties": {
          "facilityId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "FacilityId",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request of DeleteFacility"
      },
      "DeleteFacilityResponse": {
        "type": "object",
        "properties": {
          "facilityDeleted": {
            "type": "boolean",
            "description": "Indicates if facility is deleted successfully"
          }
        },
        "additionalProperties": false,
        "description": "Response of DeleteFacility"
      },
      "DeleteInvoicePeriodRequest": {
        "type": "object",
        "properties": {
          "invoicePeriodId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DeleteMessageModel": {
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean",
            "description": "Set to true if message is successfully deleted"
          }
        },
        "additionalProperties": false,
        "description": "Response of DeleteMessage"
      },
      "DeleteMessageParam": {
        "required": [
          "messageIds"
        ],
        "type": "object",
        "properties": {
          "messageIds": {
            "maxItems": 200,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Pass message id list when they choose to delete some messages, it will be ignored when DeleteAll is true"
          },
          "deleteAll": {
            "type": "boolean",
            "description": "Pass true if they want to delete all the unexpired messages from inbox, otherwise keep it false"
          }
        },
        "additionalProperties": false,
        "description": "Request for DeleteMessage"
      },
      "DeleteNurseCredentialModel": {
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean",
            "description": "Set to true if nurse credential(s) successfully deleted"
          }
        },
        "additionalProperties": false,
        "description": "Response of DeleteNurseCredential"
      },
      "DeleteNurseCredentialParam": {
        "required": [
          "nurseCredentialIds"
        ],
        "type": "object",
        "properties": {
          "nurseCredentialIds": {
            "maxItems": 200,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "additionalProperties": false,
        "description": "Request for DeleteNurseCredential"
      },
      "DeletePositionRequest": {
        "required": [
          "positionId"
        ],
        "type": "object",
        "properties": {
          "positionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "PositionId",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request of DeletePosition"
      },
      "DeletePositionResponse": {
        "type": "object",
        "properties": {
          "positionDeleted": {
            "type": "boolean",
            "description": "Indicates if position is deleted successfully"
          }
        },
        "additionalProperties": false,
        "description": "Response of DeletePosition"
      },
      "DeleteRegistryDocumentRequest": {
        "required": [
          "registryDocumentId"
        ],
        "type": "object",
        "properties": {
          "registryDocumentId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DeleteRegistryDocumentResponse": {
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DeleteRequisitionSettingLevelRequest": {
        "required": [
          "requisitionSettingLevelId"
        ],
        "type": "object",
        "properties": {
          "requisitionSettingLevelId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DeleteRequisitionSettingLevelResponse": {
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DeleteSystemDocumentRequest": {
        "required": [
          "systemDocumentID"
        ],
        "type": "object",
        "properties": {
          "systemDocumentID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DeleteSystemDocumentResponse": {
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DeleteSystemTierRequest": {
        "type": "object",
        "properties": {
          "tierId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DeleteUnitRequest": {
        "required": [
          "unitId"
        ],
        "type": "object",
        "properties": {
          "unitId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "UnitId",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request of Delete Unit"
      },
      "DeleteUnitResponse": {
        "type": "object",
        "properties": {
          "unitDeleted": {
            "type": "boolean",
            "description": "Indicates if Unit is deleted successfully"
          }
        },
        "additionalProperties": false,
        "description": "Response of Delete Unit"
      },
      "DeleteWageCodeRequest": {
        "required": [
          "wageCodeId"
        ],
        "type": "object",
        "properties": {
          "wageCodeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "WageCodeId",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request of DeleteWageCode"
      },
      "DeleteWageCodeResponse": {
        "type": "object",
        "properties": {
          "wageCodeDeleted": {
            "type": "boolean",
            "description": "Indicates if wage code is deleted successfully"
          }
        },
        "additionalProperties": false,
        "description": "Response of DeleteWageCode"
      },
      "EmbedReport": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Power BI report to be embedded",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "embedUrl": {
            "type": "string",
            "description": "The URL of the dataset that defines the data schema that the report uses.",
            "nullable": true
          },
          "webUrl": {
            "type": "string",
            "nullable": true
          },
          "datasetId": {
            "type": "string",
            "description": "The ID of the dataset that defines the data schema that the report uses.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmbedToken": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "tokenId": {
            "type": "string",
            "nullable": true
          },
          "expiration": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "EmploymentHistoryItem": {
        "type": "object",
        "properties": {
          "monthNum": {
            "type": "integer",
            "description": "MonthNum, 0 means current month when request IncludeCurrentMonth is true, 1 means last month, 2 means month before last month",
            "format": "int32"
          },
          "monthAbbrv": {
            "type": "string",
            "description": "Abbreviation(first 3 characters) of month name, 'CUR' means it is current month",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Start Date of month",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End Date of month",
            "format": "date-time"
          },
          "employmentCount": {
            "type": "integer",
            "description": "Count of Employment group by month",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EvaluationTrackingComment": {
        "type": "object",
        "properties": {
          "facilityEvaluationLogID": {
            "type": "integer",
            "format": "int32"
          },
          "evaluationStatus": {
            "type": "string",
            "description": "Evaluation Status: SENT, RESENT, RETURNED, VALIDATED, CALLED IN, UNIT MGR UNRESPONSIVE, CANCEL ERROR\r\n\r\nFormat on Line #2:\r\n\r\n1. EvaluationStatus = \"RETURNED\" or EvaluationStatus = \"VALIDATED\"\r\n\r\n   Format: Record [FacilityEvaluationLogID with the link to view Performance Evaluation],[4 spaces][Response Type]\r\n\r\n   Example: Record 1170,    Positive\r\n\r\n   \r\n2. For other values of Evaluation Status:\r\n\r\n   Format: Record [FacilityEvaluationLogID], Sent to [Manager]\r\n\r\n   Example: Record 2369, Sent to Maria Batis",
            "nullable": true
          },
          "evaluationType": {
            "type": "integer",
            "description": "Evaluation Type: CONTRACT = 0; SHIFT = 1; PERFORMANCE = 2;\r\n\r\nFormat on Line #1:\r\n\r\n1. EvaluationType = 0\r\n\r\n   Format: [Evaluation Status] EVAL Contract, [FacilityAbbrv] [UnitName] [Evaluation Start Date MM/DD/YY] - [Evaluation End Date MM/DD/YY]\r\n\r\n   Example: SENT EVAL Contract, BCC ADMINISTRATION 07/24/22 - 07/19/25\r\n\r\n   \r\n2. EvaluationType = 1\r\n\r\n   Format: [Evaluation Status] EVAL PRN, [FacilityAbbrv] [UnitName] [Evaluation Start Date MM/DD/YY]\r\n\r\n   Example: SENT EVAL PRN, BCC ADMINISTRATION 10/06/21\r\n\r\n   \r\n3. EvaluationType = 2, Date Range is visible when Evaluation Status is RETURNED or VALIDATED.\r\n\r\n   Format: [Evaluation Status] EVAL Performance, Intrastaff [Evaluation Start Date MM/DD/YY] - [Evaluation End Date MM/DD/YY]\r\n\r\n   Example: VALIDATED EVAL Performance, Intrastaff 10/07/21 - 10/31/21\r\n",
            "format": "int32"
          },
          "evaluationStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "evaluationEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "manager": {
            "type": "string",
            "nullable": true
          },
          "facilityAbbrv": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "responseType": {
            "type": "string",
            "nullable": true
          },
          "datePosted": {
            "type": "string",
            "format": "date-time"
          },
          "postedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExportContractListParam": {
        "required": [
          "systemID"
        ],
        "type": "object",
        "properties": {
          "systemID": {
            "type": "integer",
            "description": "SystemId",
            "format": "int32"
          },
          "programID": {
            "type": "integer",
            "description": "ProgramId",
            "format": "int32",
            "nullable": true
          },
          "facilityID": {
            "type": "integer",
            "description": "FacilityId",
            "format": "int32",
            "nullable": true
          },
          "unitID": {
            "type": "integer",
            "description": "UnitId",
            "format": "int32",
            "nullable": true
          },
          "includeAvailableContractCount": {
            "type": "boolean",
            "description": "IncludeAvailableContractCount"
          },
          "jobCategoryList": {
            "type": "string",
            "description": "JobCategoryList",
            "nullable": true
          },
          "contractAssignmentTypeId": {
            "type": "integer",
            "description": "ContractAssignmentTypeId",
            "format": "int32",
            "nullable": true
          },
          "positionTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "sorting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDescription"
              }
            ],
            "description": "Supported sort field names: SystemId, ProgramId, FacilityId, UnitId, StartDateTime, EndDateTime. \r\nSort direction: 0 - Ascending, 1 - Descending",
            "format": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request for ExportContractList"
      },
      "ExportShiftsBySystemParam": {
        "required": [
          "systemId"
        ],
        "type": "object",
        "properties": {
          "systemId": {
            "type": "integer",
            "format": "int32"
          },
          "facilityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "programId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "positionTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "sorting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDescription"
              }
            ],
            "description": "Supported sort field names: Position, Unit, MyBid, BidCount, StartDateTime, ShiftStatus, ShiftID, EndBidDateTime. \r\n\r\n\r\nSort direction: 0 - Ascending, 1 - Descending",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FAQItemDetailedResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Gets or sets the Id of the FAQ.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the name of the FAQ.",
            "nullable": true
          },
          "attachmentFileName": {
            "type": "string",
            "description": "Gets or sets the attachment file name.",
            "nullable": true
          },
          "showToAgency": {
            "type": "boolean",
            "description": "Gets or sets whether to show to agency."
          },
          "showToHospital": {
            "type": "boolean",
            "description": "Gets or sets whether to show to hospital."
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets whether the FAQ is active."
          },
          "systemName": {
            "type": "string",
            "description": "Gets or set the system name.",
            "nullable": true
          },
          "datePosted": {
            "type": "string",
            "description": "Gets or sets date posted.",
            "format": "date-time"
          },
          "systemId": {
            "type": "integer",
            "description": "Gets or sets the System Id.",
            "format": "int32"
          },
          "faqCategoryId": {
            "type": "integer",
            "description": "Gets or sets the FAQ category Id.",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Gets or sets the description of the file name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FAQItemResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Gets or sets the Id of the FAQ.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the name of the FAQ.",
            "nullable": true
          },
          "attachmentFileName": {
            "type": "string",
            "description": "Gets or sets the attachment file name.",
            "nullable": true
          },
          "showToAgency": {
            "type": "boolean",
            "description": "Gets or sets whether to show to agency."
          },
          "showToHospital": {
            "type": "boolean",
            "description": "Gets or sets whether to show to hospital."
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets whether the FAQ is active."
          },
          "systemName": {
            "type": "string",
            "description": "Gets or set the system name.",
            "nullable": true
          },
          "datePosted": {
            "type": "string",
            "description": "Gets or sets date posted.",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "FacilityAgencyDocumentItem": {
        "type": "object",
        "properties": {
          "facilityAgencyDocumentId": {
            "type": "integer",
            "format": "int32"
          },
          "agencyId": {
            "type": "integer",
            "format": "int32"
          },
          "documentId": {
            "type": "integer",
            "format": "int32"
          },
          "documentName": {
            "type": "string",
            "nullable": true
          },
          "documentIsCore": {
            "type": "boolean"
          },
          "facilityAgencyDocumentFileName": {
            "type": "string",
            "nullable": true
          },
          "facilityAgencyDocumentFulfilled": {
            "type": "boolean"
          },
          "facilityAgencyDocumentExpireDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FaxCoversheetModel": {
        "type": "object",
        "properties": {
          "to": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "faxNumber": {
            "type": "string",
            "nullable": true
          },
          "credential": {
            "type": "string",
            "nullable": true
          },
          "barCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of FaxCoversheet"
      },
      "FaxCoversheetParam": {
        "required": [
          "credentialId",
          "nurseId"
        ],
        "type": "object",
        "properties": {
          "nurseId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "credentialId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "expirationDate": {
            "type": "string",
            "description": "Required when CredentialIsCore is true",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request for FaxCoversheet"
      },
      "ForgetPasswordModel": {
        "type": "object",
        "properties": {
          "messageSent": {
            "type": "boolean",
            "description": "Indicates if message has been sent successfully"
          },
          "userCount": {
            "type": "integer",
            "description": "Only make sense when it is non-registry version",
            "format": "int32"
          },
          "userActive": {
            "type": "boolean",
            "description": "Only make sense when it is non-registry version and UserCount is 1"
          }
        },
        "additionalProperties": false,
        "description": "Response for ForgetPasswordModel"
      },
      "ForgetPasswordParam": {
        "required": [
          "emailAddress",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "emailAddress": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "passwordAnswer": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "appVersionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request for getting a link to reset password"
      },
      "GetAccessTokenModel": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "AccessToken generated, include it in every request if it requires user authentication",
            "nullable": true
          },
          "tokenExpiration": {
            "type": "string",
            "format": "date-time"
          },
          "userID": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "userEmail": {
            "type": "string",
            "nullable": true
          },
          "userTitle": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "appVersionID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "systemID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "adminID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "systemEnablePermissionFramework": {
            "type": "boolean"
          },
          "hasAgencyNurseVerifications": {
            "type": "boolean"
          },
          "adminHasAgencyNurseVerifications": {
            "type": "boolean"
          },
          "editFacilityID": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Faclity Id list from AdminFacility of Hospital User, for unit managers where system has ADMIN_RECEIVE_TIME_CARD(183) it also includes the FacilityId of their first unit, \r\nit is always empty for TN_ACROSS_AMERICA(7) hospital admin(non-unit-manager)",
            "nullable": true
          },
          "editUnitID": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Unit Id list that unit managers have access to when system has VIEW_FACILITY_ONLY(199)",
            "nullable": true
          },
          "facilityID": {
            "type": "integer",
            "description": "Facility ID of Unit Manager's First Unit when system does not have ADMIN_RECEIVE_TIME_CARD(183)",
            "format": "int32",
            "nullable": true
          },
          "unitID": {
            "type": "integer",
            "description": "Unit Manager's First Unit ID when system does not have ADMIN_RECEIVE_TIME_CARD(183)",
            "format": "int32",
            "nullable": true
          },
          "agencyID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "agencyContactID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "agencyContactIsAdmin": {
            "type": "boolean"
          },
          "agencyName": {
            "type": "string",
            "nullable": true
          },
          "receiveTextCancellations": {
            "type": "boolean"
          },
          "stageAgencyNurseUploadedCredential": {
            "type": "boolean"
          },
          "positionTypeName": {
            "type": "string",
            "nullable": true
          },
          "nurseID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "agencyNurseID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "changePassword": {
            "type": "boolean"
          },
          "daysToExpire": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "agencyIsIRP": {
            "type": "boolean"
          },
          "firstLogin": {
            "type": "boolean"
          },
          "contactSupport": {
            "type": "boolean"
          },
          "registryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isMsp": {
            "type": "boolean"
          },
          "customSystemId": {
            "type": "integer",
            "description": "Set it with SystemID from CustomAppVersions.xml",
            "format": "int32",
            "nullable": true
          },
          "isApprovedByDuke": {
            "type": "boolean"
          },
          "chooseMode": {
            "type": "boolean",
            "description": "ChooseMode is true when user is a hospital admin and at the same time a nurse, which means that user needs to choose which role they would like to log in as. \r\nTo do so front end needs to call api/Auth/GetAccessToken again with request.LoginType set to Admin(2) or Nurse(3)"
          },
          "loginAsByUserID": {
            "type": "integer",
            "description": "when registry admin or corporate admin proxy log in as hospital user, agency, agency contact or nurse, LoginAsByUserID is UserId of registry admin or corporate admin",
            "format": "int32",
            "nullable": true
          },
          "editRegistryUserAccounts": {
            "type": "boolean",
            "description": "Registry User will have access to Regitry Admin list when EditRegistryUserAccounts is set to True."
          },
          "allowRequisitionCreate": {
            "type": "boolean",
            "description": "Unit Manager will have access to Create Requisition when AllowRequisitionCreate is set to True.\r\nBut this will get overriden by Super User/Admin when system setting is enabled for REQUISITION_ALLOW_SUPER_USER(187) or REQUISITION_ALLOW_HOSP_ADMIN(246)"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetAccessTokenModel"
      },
      "GetAdminDropDownListResponse": {
        "type": "object",
        "properties": {
          "admins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdminDropDownOption"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAdminFacilitiesAndUnitsByAdminIDResponse": {
        "type": "object",
        "properties": {
          "adminFacilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdminFacilityModel"
            },
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetAdminListforMessagesModel": {
        "type": "object",
        "properties": {
          "userID": {
            "type": "integer",
            "format": "int32"
          },
          "adminID": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "userSendEmail": {
            "type": "boolean"
          },
          "isUnitManager": {
            "type": "boolean"
          },
          "isSuperUser": {
            "type": "boolean"
          },
          "isFacilityAdmin": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetAdminListforMessagesResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAdminListforMessagesModel"
            },
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetAgenciesByProgramsRequest": {
        "type": "object",
        "properties": {
          "programIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAgenciesWithAlignedProgramAgencyFacilityCountItem": {
        "type": "object",
        "properties": {
          "agencyId": {
            "type": "integer",
            "format": "int32"
          },
          "agencyName": {
            "type": "string",
            "nullable": true
          },
          "alignedProgramAgencyFacilityCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetAgenciesWithAlignedProgramAgencyFacilityCountResponse": {
        "type": "object",
        "properties": {
          "totalFacilities": {
            "type": "integer",
            "format": "int32"
          },
          "agencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAgenciesWithAlignedProgramAgencyFacilityCountItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAgencyContactByNameParam": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "First name to search",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Last name to search",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAgencyContactListParam": {
        "required": [
          "paging"
        ],
        "type": "object",
        "properties": {
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationInfo"
              }
            ],
            "description": "The pagination info that constains page index and page size."
          },
          "sorting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDescription"
              }
            ],
            "description": "The sort description that contains the sort column and sort order.",
            "nullable": true
          },
          "userStatus": {
            "type": "integer",
            "description": "Active=1, Inactive=0, All=-1",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAgencyContactsModel": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "phoneExt": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "programCategory": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "billingContact": {
            "type": "boolean"
          },
          "staffingContact": {
            "type": "boolean"
          },
          "admin": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetAgencyContactsResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAgencyContactsModel"
            },
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetAgencyContractRatesModel": {
        "type": "object",
        "properties": {
          "overlappingContractId": {
            "type": "integer",
            "description": "ContractId that professional has that overlaps with this contract.",
            "format": "int32",
            "nullable": true
          },
          "overlappingByOtherAgency": {
            "type": "boolean",
            "description": "It is true when professional has already been submitted by another agency for this contract. Only make sense when OverlappingContractId has a value."
          },
          "expiredCredentials": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of expired credential name",
            "nullable": true
          },
          "requestedTimeoffs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of RequestedTimeoff, only when app version has REQUESTED_TIME_OFF(326)",
            "nullable": true
          },
          "agencyFacilityRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgencyFacilityRateItem"
            },
            "description": "Rate dropdown to select/view",
            "nullable": true
          },
          "enableRateType": {
            "type": "boolean",
            "description": "Do not allow user to change the selected option of the rate dropdown when EnableRateType is true"
          },
          "useDesiredRate": {
            "type": "boolean",
            "description": "contract.UseDesiredRate"
          },
          "rate": {
            "type": "number",
            "description": "Show a textbox to user instead of a rate dropdown when system has NO_RATE_DRODDOWN(175) or USE_RATE_TABLE_ALLOW_EDIT(182), or contract.UseDesiredRate is true,\r\n\r\n\r\nPopulate the textbox with Rate when Rate has a value.\r\nDisable the textbox when shift.UseCustomRate is true and shift.ShiftMaximumBid has a value.",
            "format": "double",
            "nullable": true
          },
          "enableRate": {
            "type": "boolean",
            "description": "Do not allow user to change the value of the rate textbox when EnableRate is true"
          },
          "maxRate": {
            "type": "number",
            "description": "Do not allow rate greater than MaxRate when MaxRate has a value",
            "format": "double",
            "nullable": true
          },
          "viewAdjustedRate": {
            "type": "boolean",
            "description": "When ViewAdjustRate is true show RateTypePayRate instead of RateTypeRate"
          },
          "bonusRate": {
            "type": "number",
            "description": "Need to show it when it is not 0.00 and app version does not have ALLOW_REGISTRY_AGENCY_EDIT(101)",
            "format": "double",
            "nullable": true
          },
          "preloadWeekdayPayRate": {
            "type": "number",
            "description": "AppVersionID = DEDICATED_NURSES, dbo.ShiftSystemPreLoadPayRate.Weekday when there is a record in dbo.ContractAssignmentSystemPreLoadPayRate for the contract",
            "format": "double",
            "nullable": true
          },
          "preloadWeekendPayRate": {
            "type": "number",
            "description": "AppVersionID = DEDICATED_NURSES, dbo.ShiftSystemPreLoadPayRate.Weekend when there is a record in dbo.ContractAssignmentSystemPreLoadPayRate for the contract",
            "format": "double",
            "nullable": true
          },
          "contractAssignmentPayRate": {
            "type": "number",
            "description": "Show it when app version or system has CUSTOM_PAY_RATE(271) and there is no dbo.ContractAssignmentSystemPreLoadPayRate",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetAgencyContractRates"
      },
      "GetAgencyContractRatesParam": {
        "required": [
          "chosenNurseId",
          "contractId"
        ],
        "type": "object",
        "properties": {
          "contractId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "chosenNurseId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request for GetAgencyContractRates"
      },
      "GetAgencyDocumentItemResponse": {
        "type": "object",
        "properties": {
          "agencyDocumentID": {
            "type": "integer",
            "description": "Agency Document ID",
            "format": "int32"
          },
          "agencyDocumentName": {
            "type": "string",
            "description": "Agency Document Name",
            "nullable": true
          },
          "agencyName": {
            "type": "string",
            "description": "Agency Name",
            "nullable": true
          },
          "documentCategoryName": {
            "type": "string",
            "description": "Document Category Name",
            "nullable": true
          },
          "documentDescription": {
            "type": "string",
            "description": "Document Description",
            "nullable": true
          },
          "attachmentFileName": {
            "type": "string",
            "description": "Attachment File Name",
            "nullable": true
          },
          "agencyDocumentStartDate": {
            "type": "string",
            "description": "Agency Document Start Date",
            "format": "date-time",
            "nullable": true
          },
          "agencyDocumentEndDate": {
            "type": "string",
            "description": "Agency Document End Date",
            "format": "date-time",
            "nullable": true
          },
          "documentUploadedAt": {
            "type": "string",
            "description": "Agency Document Uploaded At",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetAgencyDocument"
      },
      "GetAgencyDocumentResponse": {
        "type": "object",
        "properties": {
          "agencyDocumentID": {
            "type": "integer",
            "description": "Agency Document ID",
            "format": "int32"
          },
          "agencyDocumentName": {
            "type": "string",
            "description": "Agency Document Name",
            "nullable": true
          },
          "agencyName": {
            "type": "string",
            "description": "Agency Name",
            "nullable": true
          },
          "documentCategoryName": {
            "type": "string",
            "description": "Document Category Name",
            "nullable": true
          },
          "documentDescription": {
            "type": "string",
            "description": "Document Description",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "Status",
            "format": "int32"
          },
          "attachmentFileName": {
            "type": "string",
            "description": "Attachment File Name",
            "nullable": true
          },
          "agencyDocumentStartDate": {
            "type": "string",
            "description": "Agency Document Start Date",
            "format": "date-time",
            "nullable": true
          },
          "agencyDocumentEndDate": {
            "type": "string",
            "description": "Agency Document End Date",
            "format": "date-time",
            "nullable": true
          },
          "documentUploadedAt": {
            "type": "string",
            "description": "Agency Document Uploaded At",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetAgencyDocument"
      },
      "GetAgencyDocumentsResponse": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAgencyDocumentItemResponse"
            },
            "description": "Agency Documents for current page.",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetAgencyFacilityRateTypesRequest": {
        "required": [
          "facilityId"
        ],
        "type": "object",
        "properties": {
          "agencyId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Required if it's not for Agency side.",
            "format": "int32",
            "nullable": true
          },
          "facilityId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "programId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Required for registry version.",
            "format": "int32",
            "nullable": true
          },
          "shiftStartDate": {
            "type": "string",
            "description": "Used for registry version.",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAgencyInsuranceDocumentResponse": {
        "type": "object",
        "properties": {
          "agencyInsuranceDocumentID": {
            "type": "integer",
            "format": "int32"
          },
          "policyNumber": {
            "type": "string",
            "nullable": true
          },
          "agencyName": {
            "type": "string",
            "nullable": true
          },
          "insuranceTypeID": {
            "type": "string",
            "nullable": true
          },
          "insuranceTypeName": {
            "type": "string",
            "nullable": true
          },
          "agencyInsuranceDocumentName": {
            "type": "string",
            "nullable": true
          },
          "agencyInsuranceStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "agencyInsuranceEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "agencyInsuranceUploadedBy": {
            "type": "string",
            "nullable": true
          },
          "agencyInsuranceUploadedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "GetAgencyInsuranceResponse": {
        "type": "object",
        "properties": {
          "agencyInsuranceDocumentID": {
            "type": "integer",
            "description": "Agency Insurance Document ID",
            "format": "int32"
          },
          "policyNumber": {
            "type": "string",
            "description": "Policy Number",
            "nullable": true
          },
          "agencyName": {
            "type": "string",
            "description": "Agency Name",
            "nullable": true
          },
          "insuranceTypeName": {
            "type": "string",
            "description": "Insurance Type Name",
            "nullable": true
          },
          "agencyInsuranceDocumentName": {
            "type": "string",
            "description": "Agency Insurance Document Name",
            "nullable": true
          },
          "agencyInsuranceStartDate": {
            "type": "string",
            "description": "Agency Document Start Date",
            "format": "date-time",
            "nullable": true
          },
          "agencyInsuranceEndDate": {
            "type": "string",
            "description": "Agency Document End Date",
            "format": "date-time",
            "nullable": true
          },
          "agencyInsuranceUploadedBy": {
            "type": "string",
            "description": "Agency Insurance Uploaded By",
            "nullable": true
          },
          "agencyInsuranceUploadedDate": {
            "type": "string",
            "description": "Agency Insurance Uploaded By",
            "format": "date-time"
          },
          "locked": {
            "type": "boolean",
            "description": "Locked"
          },
          "hasArchived": {
            "type": "boolean",
            "description": "Has Archived Insurance for the same insurance type"
          },
          "perOccurrence": {
            "type": "number",
            "description": "Agency Insurance Per Occurence",
            "format": "double",
            "nullable": true
          },
          "aggregation": {
            "type": "number",
            "description": "Agency Insurance Aggregation",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of Get Agency Insurance Response"
      },
      "GetAgencyInsurancesResponse": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAgencyInsuranceResponse"
            },
            "description": "Agency Registry Documents for current page.",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Get Agency Insurances Response."
      },
      "GetAgencyLicenseDocumentResponse": {
        "type": "object",
        "properties": {
          "agencyLicenseDocumentID": {
            "type": "integer",
            "format": "int32"
          },
          "licenseNumber": {
            "type": "string",
            "nullable": true
          },
          "agencyName": {
            "type": "string",
            "nullable": true
          },
          "agencyLicenseDocumentName": {
            "type": "string",
            "nullable": true
          },
          "agencyLicenseDocumentStateID": {
            "type": "string",
            "nullable": true
          },
          "agencyLicenseDocumentState": {
            "type": "string",
            "nullable": true
          },
          "agencyLicenseDocumentStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "agencyLicenseDocumentEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "agencyLicenseDocumentUploadedBy": {
            "type": "string",
            "nullable": true
          },
          "agencyLicenseDocumentUploadedDate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAgencyLicenseItem": {
        "type": "object",
        "properties": {
          "agencyLicenseDocumentID": {
            "type": "integer",
            "description": "Agency License Document ID",
            "format": "int32"
          },
          "licenseNumber": {
            "type": "string",
            "description": "License Number",
            "nullable": true
          },
          "agencyName": {
            "type": "string",
            "description": "Agency Name",
            "nullable": true
          },
          "registryRegionID": {
            "type": "string",
            "description": "Registry Region ID",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "State",
            "nullable": true
          },
          "agencyLicenseDocumentName": {
            "type": "string",
            "description": "Attachment File Name",
            "nullable": true
          },
          "agencyLicenseDocumentStartDate": {
            "type": "string",
            "description": "Agency License Start Date",
            "format": "date-time"
          },
          "agencyLicenseDocumentEndDate": {
            "type": "string",
            "description": "Agency License End Date",
            "format": "date-time"
          },
          "agencyLicenseDocumentUploadedBy": {
            "type": "string",
            "description": "Agency License Uploaded by",
            "nullable": true
          },
          "agencyLicenseDocumentUploadedDate": {
            "type": "string",
            "description": "Agency License Uploaded At",
            "format": "date-time"
          },
          "locked": {
            "type": "boolean",
            "description": "Locked"
          }
        },
        "additionalProperties": false
      },
      "GetAgencyLicensesResponse": {
        "type": "object",
        "properties": {
          "licenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAgencyLicenseItem"
            },
            "description": "Agency Licenses for current page.",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetAgencyLicenses"
      },
      "GetAgencyListItem": {
        "type": "object",
        "properties": {
          "agencyId": {
            "type": "integer",
            "description": "Agency ID",
            "format": "int32"
          },
          "agencyName": {
            "type": "string",
            "description": "Agency Name",
            "nullable": true
          },
          "agencyActive": {
            "type": "boolean",
            "description": "Agency Active"
          },
          "nurseAddress": {
            "type": "string",
            "description": "Nurse Address",
            "nullable": true
          },
          "nurseAddress2": {
            "type": "string",
            "description": "Nurse Address2",
            "nullable": true
          },
          "nurseCity": {
            "type": "string",
            "description": "Nurse City",
            "nullable": true
          },
          "nurseState": {
            "type": "string",
            "description": "Nurse State",
            "nullable": true
          },
          "nurseZipCode": {
            "type": "string",
            "description": "Nurse ZipCode",
            "nullable": true
          },
          "userPhone": {
            "type": "string",
            "description": "User Phone",
            "nullable": true
          },
          "userActive": {
            "type": "boolean",
            "description": "User Active"
          },
          "nurseSystemStatus": {
            "type": "string",
            "description": "NurseSystemStatus, APPROVED = \"A\", PENDING = \"P\", DENIED = \"D\", INACTIVE = \"I\"",
            "nullable": true
          },
          "systemId": {
            "type": "integer",
            "description": "SystemId",
            "format": "int32"
          },
          "nurseSystemId": {
            "type": "integer",
            "description": "NurseSystemId",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "List item of agency list"
      },
      "GetAgencyListResponse": {
        "type": "object",
        "properties": {
          "agencyList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAgencyListItem"
            },
            "description": "Facilities for current page.",
            "nullable": true
          },
          "approvedCount": {
            "type": "integer",
            "description": "Count of approved records.",
            "format": "int32"
          },
          "pendingCount": {
            "type": "integer",
            "description": "Count of pending records.",
            "format": "int32"
          },
          "deniedCount": {
            "type": "integer",
            "description": "Count of denied records.",
            "format": "int32"
          },
          "inactiveCount": {
            "type": "integer",
            "description": "Count of inactive records.",
            "format": "int32"
          },
          "allCount": {
            "type": "integer",
            "description": "Count of all records.",
            "format": "int32"
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetAgencyList"
      },
      "GetAgencyListforMessagesModel": {
        "type": "object",
        "properties": {
          "agencyID": {
            "type": "integer",
            "format": "int32"
          },
          "agencyName": {
            "type": "string",
            "nullable": true
          },
          "userID": {
            "type": "integer",
            "format": "int32"
          },
          "userPhone": {
            "type": "string",
            "nullable": true
          },
          "userEmail": {
            "type": "string",
            "nullable": true
          },
          "userSendEmail": {
            "type": "boolean"
          },
          "nurseMobilePhone": {
            "type": "string",
            "nullable": true
          },
          "nurseReceiveTextMessage": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetAgencyListforMessagesResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAgencyListforMessagesModel"
            },
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetAgencyNurseAvailabilityListResponse": {
        "type": "object",
        "properties": {
          "availabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgencyNurseAvailabilityListItem"
            },
            "description": "Availabilities",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetAgencyNurseAvailabilityList"
      },
      "GetAgencyNurseAwardedContractByDateResponse": {
        "type": "object",
        "properties": {
          "hasContract": {
            "type": "boolean"
          },
          "contractAssignmentId": {
            "type": "integer",
            "format": "int32"
          },
          "awardedRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "programId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "payMultiplier": {
            "type": "number",
            "format": "double"
          },
          "programName": {
            "type": "string",
            "nullable": true
          },
          "bonusRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "agencyFacilityRateTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "agencyFacilityRateType": {
            "type": "string",
            "nullable": true
          },
          "facilityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "positionTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "positionTypeName": {
            "type": "string",
            "nullable": true
          },
          "contractPayRate": {
            "type": "number",
            "format": "double"
          },
          "careTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "careTypeName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of Hospital GetAgencyNurseAwardedContractByDate"
      },
      "GetAgencyNurseCredentialViewLogsModel": {
        "type": "object",
        "properties": {
          "viewLogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NurseCredentialViewLog"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetAgencyNurseCredentialViewLogs"
      },
      "GetAgencyNurseShiftCountsModel": {
        "type": "object",
        "properties": {
          "contractAwarded": {
            "type": "integer",
            "description": "The number of contracts awarded to professional",
            "format": "int32"
          },
          "shiftSubmitted": {
            "type": "integer",
            "description": "The number of shifts nurse submitted/approved",
            "format": "int32"
          },
          "shiftRejected": {
            "type": "integer",
            "description": "The number of shifts that facility rejected to bill",
            "format": "int32"
          },
          "shiftApproved": {
            "type": "integer",
            "description": "The number of shifts that facility approved to bill",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetAgencyNurseShiftCounts"
      },
      "GetAgencyNurseShiftHoursModel": {
        "type": "object",
        "properties": {
          "workHours": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HoursByDate"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetAgencyNurseShiftHours"
      },
      "GetAgencyNurseShiftHoursParam": {
        "required": [
          "endDateTime",
          "startDateTime"
        ],
        "type": "object",
        "properties": {
          "startDateTime": {
            "type": "string",
            "format": "date"
          },
          "endDateTime": {
            "type": "string",
            "format": "date"
          }
        },
        "additionalProperties": false,
        "description": "Request for getting agency nurse shift hours"
      },
      "GetAgencyNurseSystemCredentialsResponse": {
        "type": "object",
        "properties": {
          "systemCredentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgencyNurseSystemCredentialListItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAgencyProfessionalListforMessagesModel": {
        "type": "object",
        "properties": {
          "nurseID": {
            "type": "integer",
            "format": "int32"
          },
          "userID": {
            "type": "integer",
            "format": "int32"
          },
          "agencyId": {
            "type": "integer",
            "format": "int32"
          },
          "agencyName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "positionTypeID": {
            "type": "integer",
            "format": "int32"
          },
          "positionTypeName": {
            "type": "string",
            "nullable": true
          },
          "userSendEmail": {
            "type": "boolean"
          },
          "receiveTextMessage": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetAgencyProfessionalListforMessagesResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAgencyProfessionalListforMessagesModel"
            },
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetAgencyProfessionalPersonalProfileResponse": {
        "type": "object",
        "properties": {
          "nurseId": {
            "type": "integer",
            "description": "Nurse id.",
            "format": "int32"
          },
          "agencyId": {
            "type": "integer",
            "description": "Agency id.",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "description": "First Name.",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "description": "Middle Name.",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Last Name.",
            "nullable": true
          },
          "nickName": {
            "type": "string",
            "description": "Nick Name.",
            "nullable": true
          },
          "nurseSSN": {
            "type": "string",
            "description": "For AppVersion has the setting PARTIAL_NURSE_SSN(158), the label is `SSN:`\r\n\r\nor AppVersion has the setting NURSE_SSN(68), the lable is `Social Security #:`\r\n\r\nor system has the setting NURSE_SSN_PLACEHOLDER(214), the lable is `Social Security #:`",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "description": "`Date of Birth:` For AppVersion has the setting PARTIAL_NURSE_SSN(158), or AppVersion has the setting NURSE_SSN(68), or system has the setting NURSE_SSN_PLACEHOLDER(214).",
            "format": "date-time"
          },
          "username": {
            "type": "string",
            "description": "`Username:` For MSP, or the system is VMS_BROOKDALE(383).",
            "nullable": true
          },
          "userPhone": {
            "type": "string",
            "description": "`Phone:` For AppVersion has the setting AGENYC_NURSE_REQUIRE_PHONE(164), and it's not null and not empty.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "`Status:` For System - VMS_WMCH(379) only.",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "`Address:` For AMN(36) only.",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "description": "`Address 2:` For AMN(36) only. Visible if it's not null and not empty.",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City. For AMN(36) only.",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "State. For AMN(36) only.",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "Country. For AMN(36) only.",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "ZipCode. For AMN(36) only.",
            "nullable": true
          },
          "mobilePhone": {
            "type": "string",
            "description": "`Mobile Phone:` For AppVersion has the setting AGENYC_NURSE_REQUIRE_MOBILE_PHONE(296).",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "`Email:` For AppVersion has the setting AGENYC_NURSE_REQUIRE_EMAIL(165).",
            "nullable": true
          },
          "secondaryEmail": {
            "type": "string",
            "description": "`Secondary Email:` For AppVersion has the setting AGENYC_NURSE_REQUIRE_EMAIL(165) and system has the setting AGENCY_NURSE_SECONDARY_EMAIL(324).",
            "nullable": true
          },
          "targetRecruitID": {
            "type": "string",
            "description": "`Target Recruit ID:` For NU_WEST(22) only.",
            "nullable": true
          },
          "recruiter": {
            "type": "string",
            "description": "`Recruiter:` For NU_WEST(22) only.",
            "nullable": true
          },
          "positionTypeName": {
            "type": "string",
            "description": "Position Type",
            "nullable": true
          },
          "careTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "`Care Types:` AppVersion is not CAREER_STAFF(9).",
            "nullable": true
          },
          "showTimeReportingPIN": {
            "type": "boolean",
            "description": "Indicates if the admin can view the agency professional's Time Reporting PIN."
          },
          "timeReportingPIN": {
            "type": "string",
            "description": "Time Reporting PIN.",
            "nullable": true
          },
          "showUserIntegrationKey": {
            "type": "boolean",
            "description": "Indicates if the admin can view the agency professional's User Integration Key."
          },
          "allowUserIntegrationKeyEditing": {
            "type": "boolean",
            "description": "Indicates if the admin can edit the agency professional's User Integration Key."
          },
          "userIntegrationKey": {
            "type": "string",
            "description": "For system - Duke(DUKE_ID=46), the lable is `DUID:`\r\n\r\nFor other systems, the label is `User Integration Key:`",
            "nullable": true
          },
          "showAccountID": {
            "type": "boolean",
            "description": "Indicates if the admin can view the agency professional's Account ID."
          },
          "accountID": {
            "type": "string",
            "description": "Account ID.",
            "nullable": true
          },
          "languagesSpoken": {
            "type": "string",
            "description": "`Languages Spoken:` Visible if it's not null and not empty.",
            "nullable": true
          },
          "nurseBadgeId": {
            "type": "string",
            "description": "For system - Duke(DUKE_ID=46), the lable is `Duke NetID:` and it's editable.\r\n\r\nFor system - VMS_WMCH(379), the lable is `Badge ID:` and it's editable.\r\n\r\nFor other systems, readonly, visible if it's not null and not empty.",
            "nullable": true
          },
          "yearsOfExperience": {
            "type": "integer",
            "description": "`Completed Years of Experience:` For system - Duke(DUKE_ID=46) only. It's editable.",
            "format": "int32",
            "nullable": true
          },
          "nurseADPID": {
            "type": "string",
            "description": "`Business Unit:` For MSP and AppVersion has the setting PAYROLL_ID(83).\r\n\r\n            It's editable if the user is not a member of the role `HOSP_UNIT`",
            "nullable": true
          },
          "nurseADPEmail": {
            "type": "string",
            "description": "`Business Email:` For MSP and AppVersion has the setting PAYROLL_ID(83).\r\n\r\n            It's editable if the user is not a member of the role `HOSP_UNIT`",
            "nullable": true
          },
          "nurseHireDate": {
            "type": "string",
            "description": "`Hire Date:` For system has the setting NURSE_HIRE_DATE_BY_CONTRACT(163).\r\n\r\n            It's editable if the user is not a member of the role `HOSP_UNIT`",
            "format": "date-time",
            "nullable": true
          },
          "nurseComplianceClearedDate": {
            "type": "string",
            "description": "`Compliance Cleared Date:` For system has the settting NURSE_COMPLIANCE_DATE(171).",
            "format": "date-time",
            "nullable": true
          },
          "nurseLicenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NurseLicenseItem"
            },
            "description": "`License #:` Visible if AppVersion is MSP, or the professional has licenses.",
            "nullable": true
          },
          "costCenterCode": {
            "type": "string",
            "description": "`Cost Center:` Visible if it's not null and not empty.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Get Professional Personal Profile"
      },
      "GetAgencyProfileResponse": {
        "type": "object",
        "properties": {
          "agencyID": {
            "type": "integer",
            "format": "int32"
          },
          "agencyName": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "mainContact": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "afterHoursPhone": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "billingAddress": {
            "type": "string",
            "nullable": true
          },
          "billingAddress2": {
            "type": "string",
            "nullable": true
          },
          "billingCity": {
            "type": "string",
            "nullable": true
          },
          "billingState": {
            "type": "string",
            "nullable": true
          },
          "billingZip": {
            "type": "string",
            "nullable": true
          },
          "billingPhone": {
            "type": "string",
            "nullable": true
          },
          "billingFax": {
            "type": "string",
            "nullable": true
          },
          "agencyStatus": {
            "type": "string",
            "nullable": true
          },
          "vendorCode": {
            "type": "string",
            "nullable": true
          },
          "abbreviation": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAgencyShiftRatesModel": {
        "type": "object",
        "properties": {
          "hasOverlappingShift": {
            "type": "boolean",
            "description": "It is true when selected nurse is already scheduled for a Shift that overlaps with this Shift.  Please choose another professional."
          },
          "expiredCredentials": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of expired credential name",
            "nullable": true
          },
          "agencyFacilityRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgencyFacilityRateItem"
            },
            "description": "Rate dropdown to select/view",
            "nullable": true
          },
          "useCustomRate": {
            "type": "boolean",
            "description": "Registry only, shift.UseCustomRate"
          },
          "shiftMaximumBid": {
            "type": "number",
            "description": "Registry only, shift.ShiftMaximumBid",
            "format": "double",
            "nullable": true
          },
          "positionTypeId": {
            "type": "integer",
            "description": "Registry only, PositionType of shift",
            "format": "int32",
            "nullable": true
          },
          "rate": {
            "type": "number",
            "description": "Registry only, show a textbox to user instead of a rate dropdown when system has NO_RATE_DRODDOWN(175) or USE_RATE_TABLE_ALLOW_EDIT(182),\r\nor PositionType of the shift is PositionTypeID_Other(configured somethere), or shift.UseCustomRate is true.\r\n\r\n\r\nPopulate the textbox with Rate when Rate has a value.\r\nDisable the textbox when shift.UseCustomRate is true and shift.ShiftMaximumBid has a value.",
            "format": "double",
            "nullable": true
          },
          "maxRate": {
            "type": "number",
            "description": "Registry only, do not allow rate greater than MaxRate when MaxRate has a value",
            "format": "double",
            "nullable": true
          },
          "viewAdjustedRate": {
            "type": "boolean",
            "description": "Registry only, when ViewAdjustRate is true show RateTypePayRate instead of RateTypeRate"
          },
          "shiftPayMultiplier": {
            "type": "number",
            "description": "Registry only, need to show it when it is not 1.0 and app version does not have ALLOW_REGISTRY_AGENCY_EDIT(101)",
            "format": "double",
            "nullable": true
          },
          "shiftBonusRate": {
            "type": "number",
            "description": "Registry only, need to show it when it is not 0.00 and app version does not have ALLOW_REGISTRY_AGENCY_EDIT(101)",
            "format": "double",
            "nullable": true
          },
          "rateNotSetup": {
            "type": "boolean",
            "description": "Registry only, indicates if there is a rate setup for the Program this shift belongs to.\r\n\r\nWhen RateNotSetup is true and app version does not have ALLOW_REGISTRY_AGENCY_EDIT(101) ask user to notifiy Application Support to have them added."
          },
          "preloadWeekdayPayRate": {
            "type": "number",
            "description": "Registry only and AppVersionID = DEDICATED_NURSES, dbo.ShiftSystemPreLoadPayRate.Weekday when there is a record in dbo.ShiftSystemPreLoadPayRate for the shift",
            "format": "double",
            "nullable": true
          },
          "preloadWeekendPayRate": {
            "type": "number",
            "description": "Registry only and AppVersionID = DEDICATED_NURSES, dbo.ShiftSystemPreLoadPayRate.Weekend when there is a record in dbo.ShiftSystemPreLoadPayRate for the shift",
            "format": "double",
            "nullable": true
          },
          "shiftPayRate": {
            "type": "number",
            "description": "Registry only, show it when app version or system has CUSTOM_PAY_RATE(271) and there is no dbo.ShiftSystemPreLoadPayRate",
            "format": "double",
            "nullable": true
          },
          "weeklyThreshold": {
            "type": "number",
            "description": "Registry only, show overtime indicator based on WeeklyThreshold and WeeklyTotalHours for Open/Pending shifts when system has OVERTIME_INDICATOR(328)",
            "format": "double",
            "nullable": true
          },
          "weeklyTotalHours": {
            "type": "number",
            "description": "Registry only, show overtime indicator based on WeeklyThreshold and WeeklyTotalHours for Open/Pending shifts when system has OVERTIME_INDICATOR(328)",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetAgencyShiftRates"
      },
      "GetAgencyShiftRatesParam": {
        "required": [
          "chosenNurseId",
          "shiftId"
        ],
        "type": "object",
        "properties": {
          "shiftId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "chosenNurseId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request for GetAgencyShiftRates"
      },
      "GetAgencyShiftsByCriteriaRequest": {
        "required": [
          "endDate",
          "facilityId",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "facilityId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "nurseId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAgencyShiftsByCriteriaResponse": {
        "type": "object",
        "properties": {
          "shifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgencyShiftListItem"
            },
            "nullable": true
          },
          "totalHours": {
            "type": "number",
            "format": "double"
          },
          "totalAmountBilled": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "GetAgencyTimeEntryListResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetTimeEntryModel"
            },
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetAllowAccessPositionTypesResponse": {
        "type": "object",
        "properties": {
          "positionTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllowAccessPositionTypeItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAppVersionCustomConfigModel": {
        "type": "object",
        "properties": {
          "setting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomSetting"
              }
            ],
            "description": "MasterCustomSetting",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response for GetAppVersionCustomConfig"
      },
      "GetAppVersionCustomConfigsModel": {
        "type": "object",
        "properties": {
          "customConfigs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomSetting"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response for GetAppVersionCustomConfigs"
      },
      "GetAppVersionsBySettingIdResponse": {
        "type": "object",
        "properties": {
          "appVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppVersionWithSettingItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response for GetAppVersionBySettingId"
      },
      "GetAppVersionsModel": {
        "type": "object",
        "properties": {
          "appVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppVersionItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetAppVersions"
      },
      "GetArchivedAgencyNurseSystemCredentialsResponse": {
        "type": "object",
        "properties": {
          "archivedCredentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArchivedAgencyNurseSystemCredentialListItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetArchivedAgencyNurseSystemCredentials"
      },
      "GetArchivedNurseCredentialsModel": {
        "type": "object",
        "properties": {
          "archivedNurseCredentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArchivedNurseCredentialItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetNurseCredentials"
      },
      "GetAvailabilityDetailResponse": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "integer",
            "description": "EventId",
            "format": "int32"
          },
          "repeatId": {
            "type": "integer",
            "description": "We can show a link to get all the repeats by passing in RepeatId when it is not null",
            "format": "int32",
            "nullable": true
          },
          "startDateTime": {
            "type": "string",
            "description": "StartDateTime",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "description": "EndDateTime",
            "format": "date-time"
          },
          "professionalId": {
            "type": "integer",
            "description": "UserId of Professional",
            "format": "int32"
          },
          "nurseId": {
            "type": "integer",
            "description": "NurseId of Professional",
            "format": "int32"
          },
          "professionalFirstName": {
            "type": "string",
            "description": "FirstName of Professional",
            "nullable": true
          },
          "professionalLastName": {
            "type": "string",
            "description": "LastName of Professional",
            "nullable": true
          },
          "positionType": {
            "type": "string",
            "description": "PositionType of Professional",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetAvailabilityDetail"
      },
      "GetAvailabilityListByRepeatIdResponse": {
        "type": "object",
        "properties": {
          "availabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AvailabilityListItem"
            },
            "description": "Availabilities",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetAvailabilityListByRepeatId"
      },
      "GetAvailabilityListResponse": {
        "type": "object",
        "properties": {
          "availabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AvailabilityListItem"
            },
            "description": "Availabilities",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetAvailabilityList"
      },
      "GetAwardOfferContractsRequest": {
        "required": [
          "paging"
        ],
        "type": "object",
        "properties": {
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationInfo"
              }
            ],
            "description": "The pagination info that constains page index and page size."
          },
          "sorting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDescription"
              }
            ],
            "description": "The sort description that contains the sort column and sort order.",
            "nullable": true
          },
          "regionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "facilityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "programId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "positionTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "offerGroup": {
            "type": "integer",
            "description": "0 - All award offers, 1 - New offers excluded extension offers, 2 - Extension offers.",
            "format": "int32"
          },
          "jobCategories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "For TNAA",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "FirstName of professional who gets contract award offer, when putting same value for both FirstName and LastName, for example 'Abc', it returns records where UserFirstName or UserLastName contains 'Abc'",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "LastName of professional who gets contract award offer, when putting same value for both FirstName and LastName, for example 'Abc', it returns records where UserFirstName or UserLastName contains 'Abc'",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Supported sort field names: \"Position Type Name\", \"Program Name\", \"Facility Name\", \"Unit Name\", \"Submissions\", \"First Name\", \"Last Name\", \"Contract Start Date\", \"Contract End Date\", \"Contract ID\""
      },
      "GetAwardOfferContractsResponse": {
        "type": "object",
        "properties": {
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AwardOfferContract"
            },
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetAwardedOrdersResponse": {
        "type": "object",
        "properties": {
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgencyAwardedOrderListItem"
            },
            "description": "Agency Awarded Orders for current page.",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetAwardedOrders"
      },
      "GetBatchContractListResponse": {
        "type": "object",
        "properties": {
          "batchID": {
            "type": "integer",
            "format": "int32"
          },
          "batchName": {
            "type": "string",
            "nullable": true
          },
          "positionTypeID": {
            "type": "integer",
            "format": "int32"
          },
          "noOfContracts": {
            "type": "integer",
            "format": "int32"
          },
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BatchContractDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetBillableRatesModel": {
        "type": "object",
        "properties": {
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "rateTypeName": {
            "type": "string",
            "nullable": true
          },
          "rate": {
            "type": "string",
            "nullable": true
          },
          "payRate": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetBillableRatesResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetBillableRatesModel"
            },
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetBillingGroupsSummaryItemResponse": {
        "type": "object",
        "properties": {
          "billingGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "billingGroupName": {
            "type": "string",
            "nullable": true
          },
          "facilityOrContractNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "billingGroupAdmins": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "billingGroupApprovers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "billingGroupActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "The billing group summary item response."
      },
      "GetByUrlModel": {
        "type": "object",
        "properties": {
          "appVersion": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppVersionItem"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetAppVersionByUrl"
      },
      "GetCommentModel": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommentModel"
            },
            "description": "Gets or sets the collection of comments in the model.\r\nEach comment is represented as an instance of B4Health.Dto.Response.CommentModel.",
            "nullable": true
          },
          "totalItems": {
            "type": "integer",
            "description": "Gets the total number of comments present in the model.\r\nThis value is derived from the count of items in the B4Health.Dto.Response.GetCommentModel.Items collection.",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a model for handling comment data, including a collection of comments\r\nand the total number of comments."
      },
      "GetContactDetailModel": {
        "type": "object",
        "properties": {
          "agencyContactId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressModel"
              }
            ],
            "description": "No Country for Agency Contact",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "phoneExt": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "receiveCredentialMessages": {
            "type": "boolean"
          },
          "receiveAllShiftRelatedMessages": {
            "type": "boolean"
          },
          "billingContact": {
            "type": "boolean"
          },
          "isAdmin": {
            "type": "boolean"
          },
          "rateSurveyKeyContact": {
            "type": "boolean"
          },
          "auditComplianceOfficer": {
            "type": "boolean"
          },
          "usageReportCoordinator": {
            "type": "boolean"
          },
          "agencyLicenseCoordinator": {
            "type": "boolean"
          },
          "agencyInsuranceCoordinator": {
            "type": "boolean"
          },
          "registryLiaisonKeyContact": {
            "type": "boolean"
          },
          "authorizedSigner": {
            "type": "boolean"
          },
          "contractsAdministrator": {
            "type": "boolean"
          },
          "clinicalRepresentative": {
            "type": "boolean"
          },
          "receiveTextCancellations": {
            "type": "boolean"
          },
          "mobilePhone": {
            "type": "string",
            "nullable": true
          },
          "programs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SelectableItems"
              }
            ],
            "description": "Select program when Selected is true.\r\nIf a pullover control is used to show programs, \r\nthose programs with Selected is true should show in the right box,\r\nthose programs with Selected is false should show in the left box.",
            "nullable": true
          },
          "systemFacilities": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemFacilityTreeModel"
              }
            ],
            "description": "Select node(system or facility) when Selected is true.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "programCategoryKey": {
            "type": "string",
            "nullable": true
          },
          "sendEmail": {
            "type": "boolean"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "userID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetContactDetail"
      },
      "GetContractBatchListResponse": {
        "type": "object",
        "properties": {
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractBatchModel"
            },
            "description": "Awarded Contracts for current page.",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetContractListModel": {
        "type": "object",
        "properties": {
          "contractList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetContractList"
      },
      "GetContractRequiredCredentialsResponse": {
        "type": "object",
        "properties": {
          "requiredCredentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractRequiredCredential"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetContractShiftsModel": {
        "type": "object",
        "properties": {
          "showTimeCard": {
            "type": "boolean"
          },
          "shiftList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractShift"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetContractShifts"
      },
      "GetContractSubmissionsResponse": {
        "type": "object",
        "properties": {
          "hasAgencyAccess": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User can access the agency."
          },
          "showRate": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User is able to view the column 'Offer Rate' or 'Charge / Pay Rate'.\r\n\r\nInvisible if system has NO_RATE_MESSAGE(16)."
          },
          "submissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractSubmission"
            },
            "description": "Contract Submissions",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetContractSummaryResponse": {
        "type": "object",
        "properties": {
          "scheduled": {
            "type": "integer",
            "format": "int32"
          },
          "open": {
            "type": "integer",
            "format": "int32"
          },
          "openWithoutBids": {
            "type": "integer",
            "format": "int32"
          },
          "openWithBids": {
            "type": "integer",
            "format": "int32"
          },
          "openOnHold": {
            "type": "integer",
            "format": "int32"
          },
          "offers": {
            "type": "integer",
            "format": "int32"
          },
          "newHireOffers": {
            "type": "integer",
            "format": "int32"
          },
          "extensionOffers": {
            "type": "integer",
            "format": "int32"
          },
          "awarded": {
            "type": "integer",
            "format": "int32"
          },
          "awardedCompleted": {
            "type": "integer",
            "format": "int32"
          },
          "awardedOnAssignment": {
            "type": "integer",
            "format": "int32"
          },
          "awardedNotStarted": {
            "type": "integer",
            "format": "int32"
          },
          "awardedNotStarted_NewHire": {
            "type": "integer",
            "format": "int32"
          },
          "awardedNotStarted_Extension": {
            "type": "integer",
            "format": "int32"
          },
          "notAwarded": {
            "type": "integer",
            "format": "int32"
          },
          "notAwardedCancelled": {
            "type": "integer",
            "format": "int32"
          },
          "notAwardedOfferDeclined": {
            "type": "integer",
            "format": "int32"
          },
          "notAwardedOfferExpired": {
            "type": "integer",
            "format": "int32"
          },
          "notAwardedAwardCancelled": {
            "type": "integer",
            "format": "int32"
          },
          "notAwardedClosedForSubmission": {
            "type": "integer",
            "format": "int32"
          },
          "requisitions": {
            "type": "integer",
            "format": "int32"
          },
          "pendingSurvey": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetContractsBySystemParam": {
        "required": [
          "paging",
          "systemId"
        ],
        "type": "object",
        "properties": {
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationInfo"
              }
            ],
            "description": "The pagination info that constains page index and page size."
          },
          "sorting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDescription"
              }
            ],
            "description": "The sort description that contains the sort column and sort order.",
            "nullable": true
          },
          "systemId": {
            "type": "integer",
            "format": "int32"
          },
          "facilityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "programId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "includeAvailableContractCount": {
            "type": "boolean"
          },
          "jobCategoryList": {
            "type": "string",
            "nullable": true
          },
          "contractAssignmentTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "positionTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Supported sort field names: PositionType, Facility, Unit, MyBid, BidCount, StartDateTime, ShiftStatus, ContractID, EndBidDateTime."
      },
      "GetCostCentersByFacilityIdResponse": {
        "type": "object",
        "properties": {
          "costCenters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CostCenterListItem"
            },
            "description": "CostCenters",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetCostCentersByFacilityId"
      },
      "GetCustomConfigAlignmentResponse": {
        "type": "object",
        "properties": {
          "configs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MasterCustomConfigAlignmentItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response for getting Custom Configs Alignment"
      },
      "GetDocumentCategoryResponse": {
        "type": "object",
        "properties": {
          "documentCategoryID": {
            "type": "integer",
            "description": "Document Category ID",
            "format": "int32"
          },
          "documentCategoryName": {
            "type": "string",
            "description": "Document Category Name",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetDocumentCategoryModel"
      },
      "GetEmploymentHistoryResponse": {
        "type": "object",
        "properties": {
          "employments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmploymentHistoryItem"
            },
            "description": "A list of employment count group by month",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetEmploymentHistory"
      },
      "GetEvaluationTrackingCommentsResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EvaluationTrackingComment"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetFAQAttachmentFileRequest": {
        "type": "object",
        "properties": {
          "faqId": {
            "type": "integer",
            "description": "Gets or sets the FAQ Id.",
            "format": "int32"
          },
          "faqAttachmentFileName": {
            "type": "string",
            "description": "Gets or sets the FAQ attachment file name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetFAQByIdResponse": {
        "type": "object",
        "properties": {
          "faq": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FAQItemDetailedResponse"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetFAQsResponse": {
        "type": "object",
        "properties": {
          "faQs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultOfFAQItemResponse"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetFacilityAgencyDocumentsResponse": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FacilityAgencyDocumentItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetFacilityDetailsResponse": {
        "type": "object",
        "properties": {
          "facilityId": {
            "type": "integer",
            "description": "FaciltyId",
            "format": "int32"
          },
          "regionId": {
            "type": "integer",
            "description": "RegionId",
            "format": "int32"
          },
          "regionName": {
            "type": "string",
            "description": "Region Name",
            "nullable": true
          },
          "timezone": {
            "type": "integer",
            "description": "Timezone",
            "format": "int32"
          },
          "facilityName": {
            "type": "string",
            "description": "Facility Name",
            "nullable": true
          },
          "facilityAddress": {
            "type": "string",
            "description": "Facility Address",
            "nullable": true
          },
          "facilityAddress2": {
            "type": "string",
            "description": "Facility Address2",
            "nullable": true
          },
          "facilityCity": {
            "type": "string",
            "description": "Facility City",
            "nullable": true
          },
          "facilityState": {
            "type": "string",
            "description": "Facility State",
            "nullable": true
          },
          "facilityCountry": {
            "type": "string",
            "description": "Facility Country",
            "nullable": true
          },
          "facilityZipCode": {
            "type": "string",
            "description": "Facility ZipCode",
            "nullable": true
          },
          "facilityPhone": {
            "type": "string",
            "description": "Facility Phone",
            "nullable": true
          },
          "facilityPhoneExt": {
            "type": "string",
            "description": "Facility PhoneExt",
            "nullable": true
          },
          "facilityFax": {
            "type": "string",
            "description": "Facility Fax",
            "nullable": true
          },
          "facilityEmail": {
            "type": "string",
            "description": "Facility Email",
            "nullable": true
          },
          "billingRemitMessage": {
            "type": "string",
            "description": "Billing Remit Message",
            "nullable": true
          },
          "billingAddress": {
            "type": "string",
            "description": "Billing Address",
            "nullable": true
          },
          "poNumber": {
            "type": "string",
            "description": "PO Number",
            "nullable": true
          },
          "facilityIntegrationKey": {
            "type": "string",
            "description": "Facility Integration Key",
            "nullable": true
          },
          "timeAttendanceIntegrationKey": {
            "type": "string",
            "description": "Time and Attendance Integration Key",
            "nullable": true
          },
          "facilityActive": {
            "type": "boolean",
            "description": "Active"
          },
          "facilityDefaultShiftBreakTime": {
            "type": "integer",
            "description": "Facility Default Shift Break Time",
            "format": "int32"
          },
          "lastTimeCardRetrievalDateTime": {
            "type": "string",
            "description": "Last Time Card Retrieval Date Time",
            "format": "date-time",
            "nullable": true
          },
          "facilityAbbrv": {
            "type": "string",
            "description": "Facility Abbreviation",
            "nullable": true
          },
          "unitManagerApprovalDayOfWeek": {
            "type": "integer",
            "description": "Unit Manager Approval Day of Week",
            "format": "int32",
            "nullable": true
          },
          "unitManagerApprovalTimeOfDay": {
            "type": "number",
            "description": "Unit Manager Approval Time of Day",
            "format": "float",
            "nullable": true
          },
          "facilityUseBonus": {
            "type": "boolean",
            "description": "Facility UseBonus"
          },
          "facilityOvertimeRate": {
            "type": "number",
            "description": "Facility Overtime Rate",
            "format": "double"
          },
          "facilityHolidayRate": {
            "type": "number",
            "description": "Facility Holiday Rate",
            "format": "double"
          },
          "facilityCallbackRate": {
            "type": "number",
            "description": "Facility Callback Rate",
            "format": "double"
          },
          "facilityOvertimeBonus": {
            "type": "number",
            "description": "Facility Overtime Bonus",
            "format": "double",
            "nullable": true
          },
          "facilityHolidayBonus": {
            "type": "number",
            "description": "Facility Holiday Bonus",
            "format": "double",
            "nullable": true
          },
          "facilityCallbackBonus": {
            "type": "number",
            "description": "Facility Callback Bonus",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetFacilityDetails"
      },
      "GetFacilityDocumentResponse": {
        "type": "object",
        "properties": {
          "facilityDocumentID": {
            "type": "integer",
            "description": "FacilityDocumentID",
            "format": "int32"
          },
          "facilityDocumentName": {
            "type": "string",
            "description": "FacilityDocumentName",
            "nullable": true
          },
          "documentCategoryName": {
            "type": "string",
            "description": "DocumentCategoryName",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "documentStatus": {
            "type": "integer",
            "description": "Document Status",
            "format": "int32"
          },
          "facilityDocumentStartDate": {
            "type": "string",
            "description": "FacilityDocumentStartDate",
            "format": "date-time",
            "nullable": true
          },
          "facilityDocumentEndDate": {
            "type": "string",
            "description": "FacilityDocumentEndDate",
            "format": "date-time",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "description": "Facility name",
            "nullable": true
          },
          "systemName": {
            "type": "string",
            "description": "System Name",
            "nullable": true
          },
          "lastUpdatedDate": {
            "type": "string",
            "description": "Last Update Date",
            "format": "date-time",
            "nullable": true
          },
          "facilityID": {
            "type": "integer",
            "description": "Facility ID",
            "format": "int32",
            "nullable": true
          },
          "documentCategoryID": {
            "type": "integer",
            "description": "Document Category ID",
            "format": "int32",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "description": "File Path",
            "nullable": true
          },
          "includeOnContracts": {
            "type": "boolean",
            "description": "Include on Contracts",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Facility Document Item Model"
      },
      "GetFacilityDocumentsResponse": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetFacilityDocumentResponse"
            },
            "description": "Agency Registry Documents for current page.",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Facility Document Item Response List"
      },
      "GetFacilityListItem": {
        "type": "object",
        "properties": {
          "facilityID": {
            "type": "integer",
            "description": "Facility ID",
            "format": "int32"
          },
          "facilityName": {
            "type": "string",
            "description": "Facility Name",
            "nullable": true
          },
          "region": {
            "type": "string",
            "description": "Facility Region",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Facility Address",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "description": "Facility Address2",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "Facility City",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "Facility State",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "Facility ZipCode",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Phone",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "Active"
          }
        },
        "additionalProperties": false
      },
      "GetFacilityListResponse": {
        "type": "object",
        "properties": {
          "facilityList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetFacilityListItem"
            },
            "description": "Facilities for current page.",
            "nullable": true
          },
          "activeCount": {
            "type": "integer",
            "description": "Count of active records.",
            "format": "int32"
          },
          "inactiveCount": {
            "type": "integer",
            "description": "Count of inactive records.",
            "format": "int32"
          },
          "allCount": {
            "type": "integer",
            "description": "Count of all records.",
            "format": "int32"
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetFacilityList"
      },
      "GetFacilityRateTypeResponse": {
        "type": "object",
        "properties": {
          "facilityRateTypeId": {
            "type": "integer",
            "description": "FacilityRateTypeId",
            "format": "int32"
          },
          "facilityId": {
            "type": "integer",
            "description": "FacilityId",
            "format": "int32"
          },
          "facilityName": {
            "type": "string",
            "description": "FacilityName",
            "nullable": true
          },
          "positionTypeId": {
            "type": "integer",
            "description": "PositionTypeId",
            "format": "int32",
            "nullable": true
          },
          "positionTypeName": {
            "type": "string",
            "description": "Position Type Name",
            "nullable": true
          },
          "rateTypeName": {
            "type": "string",
            "description": "RateTypeName",
            "nullable": true
          },
          "rateTypeDesc": {
            "type": "string",
            "description": "RateTypeName",
            "nullable": true
          },
          "rateTypeRate": {
            "type": "number",
            "description": "RateTypeRate",
            "format": "double"
          },
          "rateTypePayRate": {
            "type": "number",
            "description": "RateTypePayRate",
            "format": "double"
          },
          "rateTypeActive": {
            "type": "boolean",
            "description": "RateTypeActive"
          },
          "rateGroupID": {
            "type": "integer",
            "description": "RateGroupID",
            "format": "int32"
          },
          "rateGroupName": {
            "type": "string",
            "description": "RateGroupName",
            "nullable": true
          },
          "isWeekend": {
            "type": "boolean",
            "description": "IsWeekend"
          },
          "isHoliday": {
            "type": "boolean",
            "description": "IsHoliday"
          },
          "isOnCall": {
            "type": "boolean",
            "description": "IsOnCall"
          },
          "isCharge": {
            "type": "boolean",
            "description": "IsCharge"
          },
          "facilityShiftTimeId": {
            "type": "integer",
            "description": "FacilityShiftTimeId",
            "format": "int32",
            "nullable": true
          },
          "facilityShiftTimeName": {
            "type": "string",
            "description": "FacilityShiftTimeName",
            "nullable": true
          },
          "isReimbursement": {
            "type": "boolean",
            "description": "IsReimbursement"
          },
          "internalRatePeriodId": {
            "type": "integer",
            "description": "InternalRatePeriodId",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetFacilityRateType"
      },
      "GetHospitalAdminListModel": {
        "type": "object",
        "properties": {
          "adminId": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "programCategoryName": {
            "type": "string",
            "nullable": true
          },
          "userLastSignin": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "isSuperUser": {
            "type": "boolean"
          },
          "isBillingContract": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetHospitalAdminProfileResponse": {
        "type": "object",
        "properties": {
          "adminId": {
            "type": "integer",
            "description": "AdminId",
            "format": "int32"
          },
          "facilities": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SelectableItems"
              }
            ],
            "description": "Facilities",
            "nullable": true
          },
          "jobTitle": {
            "type": "string",
            "description": "JobTitle, invisible for JHU",
            "nullable": true
          },
          "jobFunctions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SelectableItems"
              }
            ],
            "description": "JobFunction, visible for JHU only",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "First Name",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Last Name",
            "nullable": true
          },
          "username": {
            "type": "string",
            "description": "Username",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "description": "Birth Date, invisible when updating an admin or system has setting HOSPADMIN_EDIT_USERNAME(15)",
            "format": "date-time"
          },
          "phone": {
            "type": "string",
            "description": "Phone",
            "nullable": true
          },
          "phoneExt": {
            "type": "string",
            "description": "PhoneExt",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "description": "Fax",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email",
            "nullable": true
          },
          "additionalMessageReceivers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SelectableItems"
              }
            ],
            "description": "Additional Message Receivers",
            "nullable": true
          },
          "roles": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SelectableItems"
              }
            ],
            "description": "invisible if admin.AdminIsSuperUser is true or SystemEnablePermissionFramework is false",
            "nullable": true
          },
          "permissions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SelectableItems"
              }
            ],
            "description": "Permissions - Modify Shifts/Contract Assignments, visible only for registry version and admin.AdminIsSuperUser is false",
            "nullable": true
          },
          "programCategories": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SelectableItems"
              }
            ],
            "description": "ProgramCategories, visible only for registry version",
            "nullable": true
          },
          "sendMessagesToEmail": {
            "type": "boolean",
            "description": "Send Messages to Email"
          },
          "isBillingContact": {
            "type": "boolean",
            "description": "Is Billing Contact"
          },
          "receiveInvoiceInEmail": {
            "type": "boolean",
            "description": "Receive Invoice in Email"
          },
          "agencyNurseCredentialValidation": {
            "type": "boolean",
            "description": "Agency Nurse Credential Validation, visible only for JHU, or system/app version has APPVERSION_VALIDATE_CREDENTIALS(126)"
          },
          "receiveAgencyExpiringCredentialNotifications": {
            "type": "boolean",
            "description": "Receive Agency Expiring Credential Notifications, visible only when system/app version has AGENCY_NURSE_CREDENTIAL(272)"
          },
          "receiveSystemExpiringCredentialNotifications": {
            "type": "boolean",
            "description": "Receive System Expiring Credential Notifications, visible only when system/app version has AGENCY_NURSE_SYSTEM_CREDENTIAL(136)"
          },
          "receiveNewContractNotifications": {
            "type": "boolean",
            "description": "Receive New Contract Notifications, visible only when system has HOSPADMIN_NEW_CONTRACT_NOTIFICATION(206)"
          },
          "receiveAwardOfferNotifications": {
            "type": "boolean",
            "description": "Receive Award Offer Notifications, visible only when system has HOSPADMIN_AWARD_OFFER_CONTRACT_NOTIFICATION(207)"
          },
          "receiveExpiringContractsNotifications": {
            "type": "boolean",
            "description": "Receive Expiring Contracts Notifications, visible only for GHR(17)"
          },
          "receiveSubmissionNotification": {
            "type": "boolean",
            "description": "Receive Submission Notification, visible only when system has HOSPADMIN_CONTRACT_SUBMISSION_NOTIFICATION(302)"
          },
          "receiveContractUpdateNotifications": {
            "type": "boolean",
            "description": "Receive Contract Update Notifications, visible only when system has CONTRACT_UPDATE_NOTIFICATE(323)"
          },
          "receivePerformanceEvaluationCompleteNotification": {
            "type": "boolean",
            "description": "Receive Performance Evaluation Complete Notification, visible only for GHR(17) and Impersonation Session"
          },
          "receiveShiftUrgentNeedNotification": {
            "type": "boolean",
            "description": "Receive Shift Urgent Need Notification, visible only for AMN(36)"
          },
          "allowApproveTimeCard": {
            "type": "boolean",
            "description": "Allow Approve Time Card, visible only for ICON(34)"
          },
          "requsitionApprover": {
            "type": "boolean",
            "description": "Requsition Approver, visible only when system has CUSTOM_REQUISITION_APPROVAL_FLOW(293)"
          },
          "isSuperUser": {
            "type": "boolean",
            "description": "Is Super User"
          },
          "receiveTimeCardApproval": {
            "type": "boolean",
            "description": "Receive Time Card Approval, visible only when system has ADMIN_RECEIVE_TIME_CARD(183)"
          },
          "oaUserRole": {
            "type": "boolean",
            "description": "OA User Role, visible only when system has REPORTS_OA(34)"
          },
          "isAccountsPayable": {
            "type": "boolean",
            "description": "Is Accounts Payable, visible only when system has INVOICE_PROCESS_FLAG(142)"
          },
          "active": {
            "type": "boolean",
            "description": "Active"
          },
          "userID": {
            "type": "integer",
            "description": "User ID",
            "format": "int32",
            "nullable": true
          },
          "adminReceiveAwardNotification": {
            "type": "boolean",
            "description": "Indicates whether the administrator receives notifications related to awards."
          },
          "credentialContact": {
            "type": "boolean",
            "description": "Indicates whether the user is designated as a credential contact."
          }
        },
        "additionalProperties": false,
        "description": "Response of GetHospitalAdminProfile"
      },
      "GetHospitalAwardedContractsRequest": {
        "required": [
          "paging"
        ],
        "type": "object",
        "properties": {
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationInfo"
              }
            ],
            "description": "The pagination info that constains page index and page size."
          },
          "sorting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDescription"
              }
            ],
            "description": "The sort description that contains the sort column and sort order.",
            "nullable": true
          },
          "orderStatus": {
            "maximum": 4,
            "minimum": 1,
            "allOf": [
              {
                "$ref": "#/components/schemas/Constants_AwardedContractStatus"
              }
            ],
            "description": "OrderStatus, All: null, Closed Contracts Only: 1, Future Contracts Only - New Hire: 2, Future Contracts Only - Extension: 3, On Assignment Shifts Only: 4",
            "nullable": true
          },
          "regionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "facilityId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unitId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "programId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "positionTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "jobCategoryList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "extension": {
            "type": "boolean",
            "description": "Return all records when Extension is null, when Extension is true return records where ParentContractAssignmentId is not null only, when Extension is false return records where ParentContractAssignmentId is null only",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "FirstName of professional who awarded contract, when putting same value for both FirstName and LastName, for example 'Abc', it returns records where UserFirstName or UserLastName contains 'Abc'",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "LastName of professional who awarded contract, when putting same value for both FirstName and LastName, for example 'Abc', it returns records where UserFirstName or UserLastName contains 'Abc'",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request of GetHospitalAwardedContracts for hospital"
      },
      "GetHospitalAwardedContractsResponse": {
        "type": "object",
        "properties": {
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HospitalAwardedContractItem"
            },
            "description": "Awarded Contracts for current page.",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetHospitalAwardedContracts"
      },
      "GetHospitalAwardedShiftsRequest": {
        "required": [
          "paging"
        ],
        "type": "object",
        "properties": {
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationInfo"
              }
            ],
            "description": "The pagination info that constains page index and page size."
          },
          "sorting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDescription"
              }
            ],
            "description": "The sort description that contains the sort column and sort order.",
            "nullable": true
          },
          "orderStatus": {
            "maximum": 3,
            "minimum": 1,
            "allOf": [
              {
                "$ref": "#/components/schemas/Constants_AwardedShiftStatus"
              }
            ],
            "description": "OrderStatus, All: null, Closed Shift Only: 1, Future Shifts Only: 2, On Assignment Shifts Only: 3",
            "nullable": true
          },
          "regionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "facilityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "programId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "positionTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "FirstName of professional who awarded shift, when putting same value for both FirstName and LastName, for example 'Abc', it returns records where UserFirstName or UserLastName contains 'Abc'",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "LastName of professional who awarded shift, when putting same value for both FirstName and LastName, for example 'Abc', it returns records where UserFirstName or UserLastName contains 'Abc'",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request of GetHospitalAwardedShifts"
      },
      "GetHospitalAwardedShiftsResponse": {
        "type": "object",
        "properties": {
          "shifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AwardedShiftItem"
            },
            "description": "Shift list on current page",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetHospitalAwardedShifts"
      },
      "GetHospitalBatchedShiftsResponse": {
        "type": "object",
        "properties": {
          "shifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BatchedShiftItem"
            },
            "description": "Shift list",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetBatchedShifts"
      },
      "GetHospitalInvoicePeriodResponse": {
        "type": "object",
        "properties": {
          "invoicePeriods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetInvoicePeriodItem"
            },
            "nullable": true,
            "readOnly": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetHospitalInvoiceTotalResponse": {
        "type": "object",
        "properties": {
          "grandTotal": {
            "type": "number",
            "description": "Total Amount of Invoiced Shifts",
            "format": "float"
          },
          "totalHours": {
            "type": "number",
            "description": "Total Hours of Invoiced Shifts",
            "format": "float"
          },
          "percentageChange": {
            "type": "number",
            "description": "Percentage Change compared to last period, for invoiced shifts only. \r\nWhen request.DateType is 1(last month), it is compared to total of month before last month,\r\nwhen request.DateType is 3(last 3 months), it is compared to total of the 3 months before last 3 months.",
            "format": "float",
            "nullable": true
          },
          "pendingTotal": {
            "type": "number",
            "description": "Total Amount of uninvoiced Shifts",
            "format": "float"
          },
          "pendingHours": {
            "type": "number",
            "description": "Pending Hours of uninvoiced Shifts",
            "format": "float"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetInvoiceTotal for Hospital users"
      },
      "GetHospitalInvoicesItem": {
        "type": "object",
        "properties": {
          "finalBillingStatementId": {
            "type": "integer",
            "format": "int32"
          },
          "systemId": {
            "type": "integer",
            "format": "int32"
          },
          "facilityId": {
            "type": "integer",
            "format": "int32"
          },
          "finalBillingStatementStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "finalBillingStatementEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "finalBillingStatementInvoiceNo": {
            "type": "string",
            "nullable": true
          },
          "finalBillingStatementFileName": {
            "type": "string",
            "nullable": true
          },
          "finalBillingStatementArchived": {
            "type": "boolean"
          },
          "finalBillingStatementDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "agencyId": {
            "type": "integer",
            "format": "int32"
          },
          "adminName": {
            "type": "string",
            "nullable": true
          },
          "adminEmail": {
            "type": "string",
            "nullable": true
          },
          "finalBillingStatementPONumber": {
            "type": "string",
            "nullable": true
          },
          "grandTotal": {
            "type": "number",
            "format": "double"
          },
          "totalHours": {
            "type": "number",
            "format": "double"
          },
          "runByAgencyContactId": {
            "type": "integer",
            "format": "int32"
          },
          "agencyContactName": {
            "type": "string",
            "nullable": true
          },
          "agencyContactEmail": {
            "type": "string",
            "nullable": true
          },
          "agencyName": {
            "type": "string",
            "nullable": true
          },
          "agencyUserEmail": {
            "type": "string",
            "nullable": true
          },
          "finalBillingStatementApproved": {
            "type": "boolean"
          },
          "approvedByAdminId": {
            "type": "integer",
            "format": "int32"
          },
          "approvedName": {
            "type": "string",
            "nullable": true
          },
          "dateTimeApprovedOn": {
            "type": "string",
            "format": "date-time"
          },
          "finalBillingStatementDocumentId": {
            "type": "integer",
            "format": "int32"
          },
          "finalBillingStatementDocumentName": {
            "type": "string",
            "nullable": true
          },
          "finalBillingStatementRejected": {
            "type": "boolean"
          },
          "showArchivesBttn": {
            "type": "boolean"
          },
          "showApproveBttn": {
            "type": "boolean"
          },
          "showRejectBttn": {
            "type": "boolean"
          },
          "showViewedLogBttn": {
            "type": "boolean"
          },
          "showViewMessagesBttn": {
            "type": "boolean"
          },
          "showEmailBttn": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetHospitalNotAwardedContractsRequest": {
        "required": [
          "paging"
        ],
        "type": "object",
        "properties": {
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationInfo"
              }
            ],
            "description": "The pagination info that constains page index and page size."
          },
          "sorting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDescription"
              }
            ],
            "description": "The sort description that contains the sort column and sort order.",
            "nullable": true
          },
          "orderStatus": {
            "maximum": 5,
            "minimum": 1,
            "allOf": [
              {
                "$ref": "#/components/schemas/Constants_NotAwardedOrderStatus"
              }
            ],
            "description": "OrderStatus, All: null, Cancelled: 1, OfferDeclined: 2, OfferExpired: 3, AwardCancelled: 4, ClosedForSubmissions: 5",
            "nullable": true
          },
          "contractBatchId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "regionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "facilityId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unitId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "programId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "positionTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "extension": {
            "maximum": 2,
            "minimum": 0,
            "type": "integer",
            "description": "0 - All, 1 - Excluded extension, 2 - Extension only.",
            "format": "int32"
          },
          "jobCategories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "For TNAA",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Supported sort field names: \"Position Type Name\", \"Program Name\", \"Facility Name\", \"Unit Name\", \"Submissions\", \"Contract Start Date\", \"Contract End Date\", \"Contract ID\""
      },
      "GetHospitalNotAwardedContractsResponse": {
        "type": "object",
        "properties": {
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HospitalNotAwardedContract"
            },
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetHospitalNotAwardedShiftsRequest": {
        "required": [
          "paging"
        ],
        "type": "object",
        "properties": {
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationInfo"
              }
            ],
            "description": "The pagination info that constains page index and page size."
          },
          "sorting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDescription"
              }
            ],
            "description": "The sort description that contains the sort column and sort order.",
            "nullable": true
          },
          "orderStatus": {
            "maximum": 5,
            "minimum": 1,
            "allOf": [
              {
                "$ref": "#/components/schemas/Constants_NotAwardedOrderStatus"
              }
            ],
            "description": "OrderStatus, All: null, Cancelled: 1, OfferDeclined: 2, OfferExpired: 3, AwardCancelled: 4, ClosedForSubmissions: 5",
            "nullable": true
          },
          "regionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "facilityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "programId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "positionTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request of GetHospitalNotAwardedShifts"
      },
      "GetHospitalNotAwardedShiftsResponse": {
        "type": "object",
        "properties": {
          "shifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotAwardedShiftItem"
            },
            "description": "Shift list on current page",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetHospitalNotAwardedShifts"
      },
      "GetHospitalNurseCredentialsResponse": {
        "type": "object",
        "properties": {
          "showVerified": {
            "type": "boolean"
          },
          "showAcquireDate": {
            "type": "boolean"
          },
          "showActions": {
            "type": "boolean"
          },
          "nurseCredentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HospitalAdminNurseCredentialListItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetHospitalNurseRequiredCredentialsResponse": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "First name of selected nurse",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Last name of selected nurse",
            "nullable": true
          },
          "showVerified": {
            "type": "boolean"
          },
          "showAcquireDate": {
            "type": "boolean"
          },
          "credentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HospitalNurseRequiredCredential"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetHospitalNurseRequiredCredentials"
      },
      "GetHospitalOfferedShiftsRequest": {
        "required": [
          "paging"
        ],
        "type": "object",
        "properties": {
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationInfo"
              }
            ],
            "description": "The pagination info that constains page index and page size."
          },
          "sorting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDescription"
              }
            ],
            "description": "The sort description that contains the sort column and sort order.",
            "nullable": true
          },
          "regionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "facilityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "programId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "positionTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "FirstName of professional who gets shift award offer, when putting same value for both FirstName and LastName, for example 'Abc', it returns records where UserFirstName or UserLastName contains 'Abc'",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "LastName of professional who gets shift award offer, when putting same value for both FirstName and LastName, for example 'Abc', it returns records where UserFirstName or UserLastName contains 'Abc'",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request of GetHospitalOfferedShifts"
      },
      "GetHospitalOfferedShiftsResponse": {
        "type": "object",
        "properties": {
          "shifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AwardOfferShiftItem"
            },
            "description": "Shift list on current page",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetHospitaOfferedShifts"
      },
      "GetHospitalOpenContractsRequest": {
        "required": [
          "paging"
        ],
        "type": "object",
        "properties": {
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationInfo"
              }
            ],
            "description": "The pagination info that constains page index and page size."
          },
          "sorting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDescription"
              }
            ],
            "description": "The sort description that contains the sort column and sort order.",
            "nullable": true
          },
          "orderStatus": {
            "maximum": 3,
            "minimum": 1,
            "allOf": [
              {
                "$ref": "#/components/schemas/Constants_OpenOrderStatus"
              }
            ],
            "description": "OrderStatus, All: null, with submissions only: 1, without submissions only: 2, on assignment Only: 3",
            "nullable": true
          },
          "regionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "facilityId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unitId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "programId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "positionTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "jobCategoryList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "extension": {
            "type": "boolean",
            "description": "Return all records when Extension is null, when Extension is true return records where ParentContractAssignmentId is not null only, when Extension is false return records where ParentContractAssignmentId is null only",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request of GetOpenContracts for hospital"
      },
      "GetHospitalOpenContractsResponse": {
        "type": "object",
        "properties": {
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HospitalOpenContractItem"
            },
            "description": "Open Contracts for current page.",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetHospitalOpenContracts"
      },
      "GetHospitalOpenContractsWithBidsRequest": {
        "required": [
          "paging"
        ],
        "type": "object",
        "properties": {
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationInfo"
              }
            ],
            "description": "The pagination info that constains page index and page size."
          },
          "sorting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDescription"
              }
            ],
            "description": "The sort description that contains the sort column and sort order.",
            "nullable": true
          },
          "regionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "facilityId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unitId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "programId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "positionTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "jobCategoryList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "extension": {
            "type": "boolean",
            "description": "Return all records when Extension is null, when Extension is true return records where ParentContractAssignmentId is not null only, when Extension is false return records where ParentContractAssignmentId is null only",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request of GetHospitalOpenContractsWithBids for hospital"
      },
      "GetHospitalOpenContractsWithBidsResponse": {
        "type": "object",
        "properties": {
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HospitalOpenContractWithBidsItem"
            },
            "description": "Open Contracts for current page.",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetHospitalOpenContractsWithBids"
      },
      "GetHospitalOpenShiftsRequest": {
        "required": [
          "paging"
        ],
        "type": "object",
        "properties": {
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationInfo"
              }
            ],
            "description": "The pagination info that constains page index and page size."
          },
          "sorting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDescription"
              }
            ],
            "description": "The sort description that contains the sort column and sort order.",
            "nullable": true
          },
          "orderStatus": {
            "maximum": 3,
            "minimum": 1,
            "allOf": [
              {
                "$ref": "#/components/schemas/Constants_OpenOrderStatus"
              }
            ],
            "description": "OrderStatus, All: null, with submissions only: 1, without submissions only: 2, on assignment Only: 3",
            "nullable": true
          },
          "regionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "facilityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "programId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "positionTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request of GetOpenShifts"
      },
      "GetHospitalOpenShiftsResponse": {
        "type": "object",
        "properties": {
          "shifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenShiftItem"
            },
            "description": "Shift list on current page",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetOpenShifts"
      },
      "GetHospitalOpenShiftsWithBidsRequest": {
        "required": [
          "paging"
        ],
        "type": "object",
        "properties": {
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationInfo"
              }
            ],
            "description": "The pagination info that constains page index and page size."
          },
          "sorting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDescription"
              }
            ],
            "description": "The sort description that contains the sort column and sort order.",
            "nullable": true
          },
          "regionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "facilityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "programId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "positionTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request of GetHospitalOpenShiftsWithBids"
      },
      "GetHospitalOpenShiftsWithBidsResponse": {
        "type": "object",
        "properties": {
          "shifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenShiftWithBidsItem"
            },
            "description": "Shift list on current page",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetHospitalOpenShiftsWithBids"
      },
      "GetHospitalOtherOpenShiftsRequest": {
        "required": [
          "bidId",
          "paging"
        ],
        "type": "object",
        "properties": {
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationInfo"
              }
            ],
            "description": "The pagination info that constains page index and page size."
          },
          "sorting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDescription"
              }
            ],
            "description": "The sort description that contains the sort column and sort order.",
            "nullable": true
          },
          "bidId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "unitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "positionTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request of GetHospitalOtherOpenShifts"
      },
      "GetHospitalOtherOpenShiftsResponse": {
        "type": "object",
        "properties": {
          "shifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OtherOpenShiftItem"
            },
            "description": "Shift list on current page",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetHospitalOtherOpenShifts"
      },
      "GetHospitalProfessionalOrdersResponse": {
        "type": "object",
        "properties": {
          "shifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HospitalProfessionalShiftOrder"
            },
            "description": "List of professional shifts",
            "nullable": true
          },
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HospitalProfessionalContractOrder"
            },
            "description": "List of professional Contracts",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetHospitalProfessionalOrders"
      },
      "GetHospitalScheduledShiftsRequest": {
        "required": [
          "paging"
        ],
        "type": "object",
        "properties": {
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationInfo"
              }
            ],
            "description": "The pagination info that constains page index and page size."
          },
          "sorting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDescription"
              }
            ],
            "description": "The sort description that contains the sort column and sort order.",
            "nullable": true
          },
          "regionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "facilityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "programId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "positionTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request of GetScheduledShifts"
      },
      "GetHospitalScheduledShiftsResponse": {
        "type": "object",
        "properties": {
          "shifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduledShiftItem"
            },
            "description": "Shift list on current page",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetScheduledShifts"
      },
      "GetHospitalShiftDetailsResponse": {
        "type": "object",
        "properties": {
          "shiftId": {
            "type": "integer",
            "format": "int32"
          },
          "shiftStatusId": {
            "type": "integer",
            "description": "Shift Status: 1 - Open, 2 - Pending, 3 - Awarded, 4 - Cancelled, 5 - Scheduled",
            "format": "int32"
          },
          "shiftStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftDateCreatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "shiftStartBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftEndBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "needStatus": {
            "type": "string",
            "nullable": true
          },
          "hasTimeCard": {
            "type": "boolean"
          },
          "shiftClockedIn": {
            "type": "boolean"
          },
          "shiftClockedOut": {
            "type": "boolean"
          },
          "originalShiftStartDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "originalShiftEndDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "shiftReconcileNegativeHours": {
            "type": "boolean"
          },
          "numberOfHours": {
            "type": "number",
            "format": "double"
          },
          "shiftIsHoliday": {
            "type": "boolean"
          },
          "wageRate": {
            "type": "string",
            "nullable": true
          },
          "shiftIncentive": {
            "type": "boolean"
          },
          "positionId": {
            "type": "integer",
            "format": "int32"
          },
          "positionName": {
            "type": "string",
            "nullable": true
          },
          "positionTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "positionTypeName": {
            "type": "string",
            "nullable": true
          },
          "careTypeName": {
            "type": "string",
            "nullable": true
          },
          "secondaryPositionName": {
            "type": "string",
            "nullable": true
          },
          "secondaryPositionTypeName": {
            "type": "string",
            "nullable": true
          },
          "secondaryCareTypeName": {
            "type": "string",
            "nullable": true
          },
          "shiftIntegrationKey": {
            "type": "string",
            "nullable": true
          },
          "regionName": {
            "type": "string",
            "nullable": true
          },
          "programId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "programName": {
            "type": "string",
            "nullable": true
          },
          "systemId": {
            "type": "integer",
            "format": "int32"
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "facility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ShiftDetailsBase_FacilityModel"
              }
            ],
            "nullable": true
          },
          "unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ShiftDetailsBase_UnitModel"
              }
            ],
            "nullable": true
          },
          "patientFirstName": {
            "type": "string",
            "nullable": true
          },
          "patientLastName": {
            "type": "string",
            "nullable": true
          },
          "homeCarePatient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ShiftDetailsBase_HomeCarePatientModel"
              }
            ],
            "nullable": true
          },
          "rejectedComment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ShiftDetailsBase_RejectedCommentModel"
              }
            ],
            "nullable": true
          },
          "shiftContactName": {
            "type": "string",
            "nullable": true
          },
          "shiftContactPhone": {
            "type": "string",
            "nullable": true
          },
          "shiftComments": {
            "type": "string",
            "nullable": true
          },
          "cancelledReason": {
            "type": "string",
            "nullable": true
          },
          "cancelledBy": {
            "type": "string",
            "nullable": true
          },
          "dateCancelled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "allowReconcileShift": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User is able to reconcile the shift."
          },
          "allowEditShift": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User is able to edit the shift."
          },
          "allowUpdateNeedStatus": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User is able to update the Need Status."
          },
          "allowReMessageAward": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User is able to Re-Message Award"
          },
          "additionalBillRates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AdditionalRateModel"
              }
            ],
            "description": "Additional Bill Rates. For AppVersion or system has the setting ADDITION_RATE(335).",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetHospitalTimeEntryListResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetTimeEntryModel"
            },
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetIncidentListRequest": {
        "required": [
          "paging"
        ],
        "type": "object",
        "properties": {
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationInfo"
              }
            ],
            "description": "The pagination info that constains page index and page size."
          },
          "sorting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDescription"
              }
            ],
            "description": "The sort description that contains the sort column and sort order.",
            "nullable": true
          },
          "systemId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "For agency only",
            "format": "int32",
            "nullable": true
          },
          "facilityId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "agencyId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "For registry and hospital",
            "format": "int32",
            "nullable": true
          },
          "incidentTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Supported sort field names: \"Incident ID\", \"Date of Incident\", \"Date Submitted\", \"Facility\", \"Agency\", \"Professional\""
      },
      "GetIncidentListResponse": {
        "type": "object",
        "properties": {
          "incidents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentListItem"
            },
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetInternalProfessionalDetailsResponse": {
        "type": "object",
        "properties": {
          "nurseId": {
            "type": "integer",
            "description": "Nurse id.",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "description": "First Name.",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "description": "Middle Name.",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Last Name.",
            "nullable": true
          },
          "nickName": {
            "type": "string",
            "description": "Nick Name.",
            "nullable": true
          },
          "nurseSSN": {
            "type": "string",
            "description": "`Social Security #:` Visible if AppVersion has the setting NURSE_SSN(68).",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "`Status:` Professional Status(Nurse.NurseSystemStatus).\r\n`A` - Approved\r\n`P` - Requested/Pending\r\n`I` - Inactive\r\n`D` - Denied",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "`Address:` For system doesn't have the setting NURSE_ADDRESS_NOT_VISIBLE(4).",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "description": "`Address 2:` For system doesn't have the setting NURSE_ADDRESS_NOT_VISIBLE(4).",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City. For system doesn't have the setting NURSE_ADDRESS_NOT_VISIBLE(4).",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "State. For system doesn't have the setting NURSE_ADDRESS_NOT_VISIBLE(4).",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "Country. For system doesn't have the setting NURSE_ADDRESS_NOT_VISIBLE(4).",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "ZipCode. For system doesn't have the setting NURSE_ADDRESS_NOT_VISIBLE(4).",
            "nullable": true
          },
          "userPhone": {
            "type": "string",
            "description": "`Phone:` Visible if it's not null and not empty.",
            "nullable": true
          },
          "mobilePhone": {
            "type": "string",
            "description": "`Mobile Phone:` Visible if it's not null and not empty.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "`Email:` Visible if it's not null and not empty.",
            "nullable": true
          },
          "positionTypeId": {
            "type": "integer",
            "description": "It's used when updating Professional Profile.",
            "format": "int32",
            "nullable": true
          },
          "positionTypeName": {
            "type": "string",
            "description": "`Position Type:`",
            "nullable": true
          },
          "careTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectableItem"
            },
            "description": "`Care Types:`",
            "nullable": true
          },
          "stateLicenses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "`State Licenses:`",
            "nullable": true
          },
          "showTimeReportingPIN": {
            "type": "boolean",
            "description": "Indicates if the admin can view the professional's Time Reporting PIN."
          },
          "timeReportingPIN": {
            "type": "string",
            "description": "`Time Reporting PIN:` Time Reporting PIN.",
            "nullable": true
          },
          "accountID": {
            "type": "string",
            "description": "`Account ID:`",
            "nullable": true
          },
          "languagesSpoken": {
            "type": "string",
            "description": "`Languages Spoken:` Visible if it's not null and not empty.",
            "nullable": true
          },
          "nurseBadgeId": {
            "type": "string",
            "description": "`Badge ID:` Visible if it's not null and not empty.",
            "nullable": true
          },
          "nurseBadgeId2": {
            "type": "string",
            "description": "`Badge ID #2:`\r\n\r\n\r\n            It's visible and editable if AppVersion has the setting `NURSE_BADGE_2(102)`.",
            "nullable": true
          },
          "systemName": {
            "type": "string",
            "description": "`Home System:`",
            "nullable": true
          },
          "facilityId": {
            "type": "integer",
            "description": "It's used when updating Professional Profile.",
            "format": "int32",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "description": "`Home Facility:` Visible if it's not null and not empty.",
            "nullable": true
          },
          "unitId": {
            "type": "integer",
            "description": "It's used when updating Professional Profile.",
            "format": "int32",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "description": "`Home Unit:` Visible if it's not null and not empty.",
            "nullable": true
          },
          "jobTitleId": {
            "type": "integer",
            "description": "`Job Code:`\r\n\r\n\r\n            It's visible if System doesn't have the setting `EMPLOYEE_STATUS_INTEGRATION(69)`.\r\n\r\n            It's editable if System doesn't have these settings `USER_ACCOUNT_INTEGRATION(8)`, `EMPLOYEE_STATUS_INTEGRATION(69)` and `HOSPADMIN_LOCK_BASE_PAY_RATE(11)`.",
            "format": "int32",
            "nullable": true
          },
          "grade": {
            "type": "integer",
            "description": "`Grade:`\r\n\r\n\r\n            It's visible if System doesn't have the setting `HOSPADMIN_LOCK_BASE_PAY_RATE(11)`.\r\n\r\n            It's editable if System doesn't have these settings `HOSPADMIN_LOCK_BASE_PAY_RATE(11)` and `USER_ACCOUNT_INTEGRATION(8)`.",
            "format": "int32",
            "nullable": true
          },
          "basePayRate": {
            "type": "number",
            "description": "`Base Pay Rate:`\r\n\r\n\r\n            It's visible if System doesn't have the setting `HOSPADMIN_LOCK_BASE_PAY_RATE(11)`.\r\n\r\n            It's editable if System doesn't have these settings `HOSPADMIN_LOCK_BASE_PAY_RATE(11)` and `USER_ACCOUNT_INTEGRATION(8)`.",
            "format": "double",
            "nullable": true
          },
          "unionId": {
            "type": "integer",
            "description": "`Union:`\r\n\r\n\r\n            It's visible if System doesn't have the setting `HOSPADMIN_LOCK_BASE_PAY_RATE(11)`.\r\n\r\n            It's editable if System doesn't have these settings `HOSPADMIN_LOCK_BASE_PAY_RATE(11)` and `USER_ACCOUNT_INTEGRATION(8)`.",
            "format": "int32",
            "nullable": true
          },
          "nurseADPID": {
            "type": "string",
            "description": "`ADP ID:`\r\n\r\n\r\n            It's visible and editable if AppVersion has the setting `PAYROLL_ID(83)`.",
            "nullable": true
          },
          "employeeStatusId": {
            "type": "integer",
            "description": "`Emp. Status:`\r\n\r\n\r\n            It's visible if System doesn't have the setting `HOSPADMIN_LOCK_BASE_PAY_RATE(11)` and AppVersion doesn't have the setting `PAYROLL_ID(83)`.\r\n\r\n            It's editable if System doesn't have these settings `HOSPADMIN_LOCK_BASE_PAY_RATE(11)` and `USER_ACCOUNT_INTEGRATION(8)`, and AppVersion doesn't have the setting `PAYROLL_ID(83)`.",
            "format": "int32",
            "nullable": true
          },
          "employeeNumber": {
            "type": "string",
            "description": "`Employee #:`\r\n\r\n\r\n            It's visible if System doesn't have the setting `HOSPADMIN_LOCK_BASE_PAY_RATE(11)`.\r\n\r\n            It's editable if System doesn't have these settings `HOSPADMIN_LOCK_BASE_PAY_RATE(11)` and `USER_ACCOUNT_INTEGRATION(8)`.",
            "nullable": true
          },
          "fte": {
            "type": "number",
            "description": "`FTE:`\r\n\r\n\r\n            It's visible if System doesn't have the setting `HOSPADMIN_LOCK_BASE_PAY_RATE(11)`.\r\n\r\n            It's editable if System doesn't have these settings `HOSPADMIN_LOCK_BASE_PAY_RATE(11)` and `USER_ACCOUNT_INTEGRATION(8)`.",
            "format": "double",
            "nullable": true
          },
          "nurseHireDate": {
            "type": "string",
            "description": "`Hire Date:`\r\n\r\n\r\n            It's visible if System doesn't have the setting `HOSPADMIN_LOCK_BASE_PAY_RATE(11)`, or System has the setting `NURSE_HIRE_DATE(85)`.\r\n\r\n            It's editable if one of below is satisfied:\r\n\r\n            1. System doesn't have these settings `HOSPADMIN_LOCK_BASE_PAY_RATE(11)`, `USER_ACCOUNT_INTEGRATION(8)` and `EMPLOYEE_STATUS_INTEGRATION(69)`.\r\n\r\n            2. System has the setting `NURSE_HIRE_DATE(85)`, but doesn't have these settings `USER_ACCOUNT_INTEGRATION(8)` and `EMPLOYEE_STATUS_INTEGRATION(69)`.",
            "format": "date-time",
            "nullable": true
          },
          "terminationDate": {
            "type": "string",
            "description": "`Termination Date:`\r\n\r\n\r\n            It's visible if System doesn't have the setting `HOSPADMIN_LOCK_BASE_PAY_RATE(11)`, or System has the setting `NURSE_HIRE_DATE(85)`.\r\n\r\n            It's editable if one of below is satisfied:\r\n\r\n            1. System doesn't have these settings `HOSPADMIN_LOCK_BASE_PAY_RATE(11)` and `USER_ACCOUNT_INTEGRATION(8)`.\r\n\r\n            2. System has the setting `NURSE_HIRE_DATE(85)`, but doesn't have the setting `USER_ACCOUNT_INTEGRATION(8)`.",
            "format": "date-time",
            "nullable": true
          },
          "educationId": {
            "type": "integer",
            "description": "`Education:` For AppVersion has the setting NURSE_EDUCATION(74).",
            "format": "int32",
            "nullable": true
          },
          "nurseTimeAttendanceStatus": {
            "type": "integer",
            "description": "It's visible and editable if System has the setting `EMPLOYEE_STATUS_INTEGRATION(69)`.\r\n\r\nFor JHU, the label is `JHED Status:`\r\n\r\nFor other systems, the label is `T&A Status:`",
            "format": "int32",
            "nullable": true
          },
          "receiveTextMessages": {
            "type": "boolean",
            "description": "`Receive Text Messages:` For Edit Personal Profile."
          },
          "sendMessagesToEmail": {
            "type": "boolean",
            "description": "`Send Messages to Email:` For Edit Personal Profile. It's not visible if the System has the setting `NURSE_LOCK_SEND_AS_EMAIL(108)`.\r\n\r\n            It's not editable if the System has the setting `NURSE_LOCK_SEND_AS_EMAIL(108)` or `SEND_TO_EMAIL_REQUIRED(52)`."
          },
          "birthDate": {
            "type": "string",
            "description": "`Birth Date:` For Edit Personal Profile. It's not visible if the System has one of these settings: `NO_USERDOB(3)`, `SEND_TO_EMAIL_REQUIRED(52)`.\r\n",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetInternalProfessionalOrdersRequest": {
        "required": [
          "nurseId",
          "orderStatus",
          "orderType"
        ],
        "type": "object",
        "properties": {
          "nurseId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "NurseId of internal professional",
            "format": "int32"
          },
          "orderType": {
            "maximum": 2,
            "minimum": -1,
            "type": "integer",
            "description": "Order Type: All: -1, Shift: 1, Contract: 2",
            "format": "int32"
          },
          "orderStatus": {
            "maxItems": 3,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "All: -1, Awarded: 1, Requesting: 2, Not Awarded: 3"
          }
        },
        "additionalProperties": false,
        "description": "Request for GetInternalProfessionalOrders"
      },
      "GetInvoiceListResponse": {
        "type": "object",
        "properties": {
          "finalBillingStatements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetHospitalInvoicesItem"
            },
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetInvoicePeriodItem": {
        "type": "object",
        "properties": {
          "invoicePeriodID": {
            "type": "integer",
            "format": "int32"
          },
          "systemId": {
            "type": "integer",
            "format": "int32"
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "facilityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "billingGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "billingGroupName": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "invoiceSubmitted": {
            "type": "boolean"
          },
          "showDeleteButton": {
            "type": "boolean"
          },
          "showReOpenButton": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetInvoiceTotalResponse": {
        "type": "object",
        "properties": {
          "grandTotal": {
            "type": "number",
            "description": "Total Amount of Invoiced Shifts",
            "format": "float"
          },
          "totalHours": {
            "type": "number",
            "description": "Total Hours of Invoiced Shifts",
            "format": "float"
          },
          "percentageChange": {
            "type": "number",
            "description": "Percentage Change compared to last period, for invoiced shifts only. \r\nWhen request.DateType is 1(last month), it is compared to total of month before last month,\r\nwhen request.DateType is 3(last 3 months), it is compared to total of the 3 months before last 3 months.",
            "format": "float",
            "nullable": true
          },
          "pendingTotal": {
            "type": "number",
            "description": "Total Amount of uninvoiced Shifts",
            "format": "float"
          },
          "pendingHours": {
            "type": "number",
            "description": "Pending Hours of uninvoiced Shifts",
            "format": "float"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetInvoiceTotal"
      },
      "GetJobCategoryResponse": {
        "type": "object",
        "properties": {
          "positionTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "careTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "systemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "appVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "jobCategoryName": {
            "type": "string",
            "nullable": true
          },
          "empPosition": {
            "type": "string",
            "nullable": true
          },
          "empJobCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetJobCodesResponse": {
        "type": "object",
        "properties": {
          "jobCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobCodeItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetListOfRegistryDocumentsResponse": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegistryDocumentListItem"
            },
            "description": "Registry Documents for current page.",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Registry Document List"
      },
      "GetMasterCustomSettingsModel": {
        "type": "object",
        "properties": {
          "masterCustomSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomSetting"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response for GetMasterCustomSettings"
      },
      "GetMessageListModel": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageItem"
            },
            "description": "Messages for the current page",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of get paged message list, including inbox and sentbox"
      },
      "GetNurseCredentialModel": {
        "type": "object",
        "properties": {
          "nurseCredentialId": {
            "type": "integer",
            "description": "Nurse Credential Id",
            "format": "int32"
          },
          "nurseId": {
            "type": "integer",
            "description": "Nurse Id",
            "format": "int32"
          },
          "nurseName": {
            "type": "string",
            "description": "Nurse Name",
            "nullable": true
          },
          "credentialId": {
            "type": "integer",
            "description": "Credential Id",
            "format": "int32"
          },
          "credentialName": {
            "type": "string",
            "description": "Credential Name",
            "nullable": true
          },
          "expireDate": {
            "type": "string",
            "description": "Expire Date",
            "format": "date-time",
            "nullable": true
          },
          "acquireDate": {
            "type": "string",
            "description": "Acquire Date",
            "format": "date-time",
            "nullable": true
          },
          "dateSubmitted": {
            "type": "string",
            "description": "Date Submitted",
            "format": "date-time",
            "nullable": true
          },
          "licenseState": {
            "type": "string",
            "description": "License State",
            "nullable": true
          },
          "licenseType": {
            "type": "integer",
            "description": "License Type",
            "format": "int32",
            "nullable": true
          },
          "documentContent": {
            "type": "string",
            "description": "Document Content",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetNurseCredentials"
      },
      "GetNurseCredentialsModel": {
        "type": "object",
        "properties": {
          "nurseCredentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NurseCredentialItem"
            },
            "description": "List of Nurse Credential",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetNurseCredentials"
      },
      "GetNurseOvertimeShiftsModel": {
        "type": "object",
        "properties": {
          "payPeriodStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "payPeriodEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "weeklyThreshold": {
            "type": "number",
            "format": "float"
          },
          "totalShiftHours": {
            "type": "number",
            "format": "float"
          },
          "comingShiftHours": {
            "type": "number",
            "format": "float"
          },
          "shifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PayPeriodShift"
            },
            "description": "Shifts awarded to selected professional in the same pay period",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetNurseOvertimeShifts"
      },
      "GetNurseRequiredCredentialsModel": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "First name of selected nurse",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Last name of selected nurse",
            "nullable": true
          },
          "credentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NurseRequiredCredential"
            },
            "description": "Rate dropdown to select/view",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetNurseRequiredCredentials"
      },
      "GetNurseSkillsMetModel": {
        "type": "object",
        "properties": {
          "skills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NurseSkillsMet"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetNurseSkillsMet"
      },
      "GetNurseSummaryResponse": {
        "type": "object",
        "properties": {
          "pending": {
            "type": "integer",
            "format": "int32"
          },
          "approved": {
            "type": "integer",
            "format": "int32"
          },
          "inactive": {
            "type": "integer",
            "format": "int32"
          },
          "denied": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetNursesModel": {
        "type": "object",
        "properties": {
          "userID": {
            "type": "integer",
            "format": "int32"
          },
          "nurseID": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "phoneNo": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "positionTypeID": {
            "type": "integer",
            "format": "int32"
          },
          "positionTypeName": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "lastSignIn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "jobCode": {
            "type": "string",
            "nullable": true
          },
          "expiredCredential": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetNursesResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetNursesModel"
            },
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetPagedAgencyContractProfessionalsModel": {
        "type": "object",
        "properties": {
          "professionals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectAgencyNurseItem"
            },
            "description": "Professionals to select to request a contract",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetPagedAgencyContractProfessionals"
      },
      "GetPagedAgencyContractProfessionalsParam": {
        "required": [
          "contractId",
          "initial",
          "paging"
        ],
        "type": "object",
        "properties": {
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationInfo"
              }
            ],
            "description": "The pagination info that constains page index and page size."
          },
          "sorting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDescription"
              }
            ],
            "description": "The sort description that contains the sort column and sort order.",
            "nullable": true
          },
          "contractId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "initial": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "First letter of professional's last name, pass in 'All' if you want to bypass the last name check.\r\nIf not specified, 'All' will be applied."
          },
          "professionalName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Delimited by ',', ' ' at the beginning and end will be trimmed.\r\nAfter trimmed the part before the first ',' will be taken as last name, the part after ',' will be taken as first name.\r\nThe input will be taken as last name if no ',' contained.\r\nWhen searching by ProfessionalName, make sure Initial is 'All' or it matches the first letter professional's last name.\r\nIt does not work with combination like Initial is 'B' while ProfessionalName is 'Smith, John', 'B' and 'S' don't match, \r\ninstead we should pass in 'S' or 'All' as Initial.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request of GetPagedAgencyContractProfessionals"
      },
      "GetPagedAgencyShiftProfessionalsModel": {
        "type": "object",
        "properties": {
          "professionals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectAgencyNurseItem"
            },
            "description": "Professionals to select to request a shift",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetPagedAgencyShiftProfessionalsParam": {
        "required": [
          "initial",
          "paging",
          "shiftId"
        ],
        "type": "object",
        "properties": {
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationInfo"
              }
            ],
            "description": "The pagination info that constains page index and page size."
          },
          "sorting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDescription"
              }
            ],
            "description": "The sort description that contains the sort column and sort order.",
            "nullable": true
          },
          "shiftId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "initial": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "First letter of professional's last name, pass in 'All' if you want to bypass the last name check.\r\nIf not specified, 'All' will be applied."
          },
          "professionalName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Delimited by ',', ' ' at the beginning and end will be trimmed.\r\nAfter trimmed the part before the first ',' will be taken as last name, the part after ',' will be taken as first name.\r\nThe input will be taken as last name if no ',' contained.\r\nWhen searching by ProfessionalName, make sure Initial is 'All' or it matches the first letter professional's last name.\r\nIt does not work with combination like Initial is 'B' while ProfessionalName is 'Smith, John', 'B' and 'S' don't match, \r\ninstead we should pass in 'S' or 'All' as Initial.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request of GetPagedAgencyShiftProfessionals"
      },
      "GetPagedInboxListParam": {
        "required": [
          "filterShiftContractMessages",
          "paging"
        ],
        "type": "object",
        "properties": {
          "filterShiftContractMessages": {
            "type": "boolean",
            "description": "Filter shift/contract messages"
          },
          "shiftID": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Shift ID",
            "format": "int32",
            "nullable": true
          },
          "contractAssignmentID": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Contract Assignment ID",
            "format": "int32",
            "nullable": true
          },
          "invoiceID": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Invoice ID",
            "format": "int32",
            "nullable": true
          },
          "messageTypeID": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "ContractAssignmentID",
            "format": "int32",
            "nullable": true
          },
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PagingParam"
              }
            ],
            "description": "Paging Parameters"
          }
        },
        "additionalProperties": false,
        "description": "Request for getting message inbox list"
      },
      "GetPagedSentListParam": {
        "required": [
          "paging"
        ],
        "type": "object",
        "properties": {
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PagingParam"
              }
            ],
            "description": "Paging Parameters"
          }
        },
        "additionalProperties": false,
        "description": "Request for getting message sent list"
      },
      "GetPersonalInformationResponse": {
        "type": "object",
        "properties": {
          "nurseId": {
            "type": "integer",
            "description": "Nurse id.",
            "format": "int32"
          },
          "agencyId": {
            "type": "integer",
            "description": "Agency id.",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "Title.",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "FirstName.",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "description": "MiddleName.",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "LastName.",
            "nullable": true
          },
          "nickName": {
            "type": "string",
            "description": "NickName.",
            "nullable": true
          },
          "nurseSSN": {
            "type": "string",
            "description": "NurseSSN.",
            "nullable": true
          },
          "username": {
            "type": "string",
            "description": "UserName.",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Address.",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "description": "Address2.",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City.",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "State.",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "Country.",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "ZipCode.",
            "nullable": true
          },
          "homePhone": {
            "type": "string",
            "description": "HomePhone.",
            "nullable": true
          },
          "mobilePhone": {
            "type": "string",
            "description": "MobilePhone.",
            "nullable": true
          },
          "receiveTextMessages": {
            "type": "boolean",
            "description": "ReceiveTextMessages."
          },
          "email": {
            "type": "string",
            "description": "Email.",
            "nullable": true
          },
          "sendMessages": {
            "type": "boolean",
            "description": "SendMessages."
          },
          "secondaryEmail": {
            "type": "string",
            "description": "SecondaryEmail.",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "description": "BirthDate.",
            "format": "date-time"
          },
          "targetRecruitID": {
            "type": "string",
            "description": "TargetRecruitID.",
            "nullable": true
          },
          "recruiter": {
            "type": "string",
            "description": "Recruiter.",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "description": "Updated By.",
            "nullable": true
          },
          "updatedDate": {
            "type": "string",
            "description": "Updated Date.",
            "format": "date-time",
            "nullable": true
          },
          "agencyContactName": {
            "type": "string",
            "description": "Agency Contact Name.",
            "nullable": true
          },
          "agencyContactID": {
            "type": "integer",
            "description": "Agency Contact ID.",
            "format": "int32",
            "nullable": true
          },
          "loggedInBefore": {
            "type": "boolean",
            "description": "Indicates if nurse has ever logged in B4H system before"
          },
          "userID": {
            "type": "integer",
            "description": "UserID",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Get Personal Information Response"
      },
      "GetPositionDetailsResponse": {
        "type": "object",
        "properties": {
          "positionID": {
            "type": "integer",
            "description": "Position ID",
            "format": "int32"
          },
          "positionName": {
            "type": "string",
            "description": "Position Name",
            "nullable": true
          },
          "positionTypeID": {
            "type": "integer",
            "description": "Position Type ID",
            "format": "int32"
          },
          "positionTypeName": {
            "type": "string",
            "description": "Position Type Name",
            "nullable": true
          },
          "careTypeID": {
            "type": "integer",
            "description": "Care Type ID",
            "format": "int32",
            "nullable": true
          },
          "careTypeName": {
            "type": "string",
            "description": "Care Type Name",
            "nullable": true
          },
          "positionActive": {
            "type": "boolean",
            "description": "Position Status"
          },
          "positionSkills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionSkillModel"
            },
            "description": "Position Skills List",
            "nullable": true
          },
          "availableSkills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SkillModel"
            },
            "description": "Available Skills List",
            "nullable": true
          },
          "skillGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SkillGroupModel"
            },
            "nullable": true
          },
          "positionCode": {
            "type": "string",
            "description": "Position Code",
            "nullable": true
          },
          "activeStafferProfilePosition": {
            "type": "string",
            "description": "Active Staffer Profile Position",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetPositionDetails"
      },
      "GetPositionListItem": {
        "type": "object",
        "properties": {
          "positionID": {
            "type": "integer",
            "description": "Position ID",
            "format": "int32"
          },
          "positionName": {
            "type": "string",
            "description": "Position Name",
            "nullable": true
          },
          "positionTypeName": {
            "type": "string",
            "description": "Position Type Name",
            "nullable": true
          },
          "careType": {
            "type": "string",
            "description": "Care Type",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "Active"
          }
        },
        "additionalProperties": false
      },
      "GetPositionListResponse": {
        "type": "object",
        "properties": {
          "positionList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetPositionListItem"
            },
            "description": "Positions for current page.",
            "nullable": true
          },
          "activeCount": {
            "type": "integer",
            "description": "Count of active records.",
            "format": "int32"
          },
          "inactiveCount": {
            "type": "integer",
            "description": "Count of inactive records.",
            "format": "int32"
          },
          "allCount": {
            "type": "integer",
            "description": "Count of all records.",
            "format": "int32"
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetPositionList"
      },
      "GetPositionSkillsByGroupIdResponse": {
        "type": "object",
        "properties": {
          "skillID": {
            "type": "integer",
            "description": "Skill ID",
            "format": "int32"
          },
          "skillName": {
            "type": "string",
            "description": "Skill Name",
            "nullable": true
          },
          "skillLevel": {
            "type": "integer",
            "description": "SkillLevel, 0 - No Experience, 1 - Less Than 2 Yrs., 2 - More Than 2 Yrs.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetPositionSkillsByGroupId"
      },
      "GetPotentialMatchingNurseListModel": {
        "type": "object",
        "properties": {
          "professionals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MatchingProfessional"
            },
            "description": "Matching Professionals",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetPotentialMatchingNurseList"
      },
      "GetPotentialMatchingNurseListParam": {
        "required": [
          "lastName",
          "paging"
        ],
        "type": "object",
        "properties": {
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationInfo"
              }
            ],
            "description": "The pagination info that constains page index and page size."
          },
          "sorting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDescription"
              }
            ],
            "description": "The sort description that contains the sort column and sort order.",
            "nullable": true
          },
          "firstName": {
            "maxLength": 50,
            "type": "string",
            "description": "Nurse First Name",
            "nullable": true
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Nurse Last Name"
          }
        },
        "additionalProperties": false,
        "description": "Supported sort field names: NurseName, DateOfBirth, Email, MobilePhone"
      },
      "GetProfessionalForwardLogsResponse": {
        "type": "object",
        "properties": {
          "forwardLogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProfessionalForwardLogItemResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetProfessionalInformationResponse": {
        "type": "object",
        "properties": {
          "nurseId": {
            "type": "integer",
            "description": "Nurse id.",
            "format": "int32"
          },
          "positionTypeId": {
            "type": "integer",
            "description": "Position type id.",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status is required when user registry version is true otherwise optional.",
            "format": "int32"
          },
          "careTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "List of Care type ids.",
            "nullable": true
          },
          "nurseLincenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NurseLicense"
            },
            "description": "List of Nurse Licenses.",
            "nullable": true
          },
          "nurseNpiNumber": {
            "type": "string",
            "description": "Nurse National Provider Identifier (NPI) Number.",
            "nullable": true
          },
          "languagesSpoken": {
            "type": "string",
            "description": "Languages spoken.",
            "nullable": true
          },
          "yearsOfExperience": {
            "type": "integer",
            "description": "Years of experience.",
            "format": "int32",
            "nullable": true
          },
          "educationId": {
            "type": "integer",
            "description": "Education Id. Value will be save to the DB if app version has NURSE_EDUCATION(74)",
            "format": "int32",
            "nullable": true
          },
          "educationName": {
            "type": "string",
            "description": "Education Name, show it only when it is not empty",
            "nullable": true
          },
          "allowAgencyNuresBid": {
            "type": "boolean",
            "description": "AllowAgencyNuresBid, based on this flag we can show or hide checkboxes 'Allow to Search/Submit on Shifts?' and 'Allow to Search/Submit on Contracts?'"
          },
          "allowBidOnShift": {
            "type": "boolean",
            "description": "Allow bid on shift. Value will be save to the DB if app version has ALLOW_AGENCY_NURSE_BID(254).",
            "nullable": true
          },
          "allowBidOnContract": {
            "type": "boolean",
            "description": "Allow bid on contract. Value will be save to the DB if app version is ALLOW_AGENCY_NURSE_BID(254).",
            "nullable": true
          },
          "programType": {
            "type": "integer",
            "description": "Program Type. 0 for PerDiem. 1 for Travel.",
            "format": "int32",
            "nullable": true
          },
          "terminationDate": {
            "type": "string",
            "description": "Add Termination Date when AgencyID = 3939  and AgencyNurseStatus = 9",
            "format": "date-time",
            "nullable": true
          },
          "professionalId": {
            "type": "string",
            "description": "Professional ID, for non-registry only, and show it only when it is not empty",
            "nullable": true
          },
          "timeReportingPIN": {
            "type": "string",
            "description": "Time Reporting PIN, show it only when it is not empty",
            "nullable": true
          },
          "nurseBadgeId2": {
            "type": "string",
            "description": "Badge ID #2, show it only when it is not empty",
            "nullable": true
          },
          "costCenter": {
            "type": "string",
            "description": "Visible and required only for VMS_UMMS_STAFFING(3939)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Return for Get Professional Information"
      },
      "GetProfessionalListResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetProfessionalModel"
            },
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetProfessionalListforMessagesModel": {
        "type": "object",
        "properties": {
          "nurseID": {
            "type": "integer",
            "format": "int32"
          },
          "userID": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "positionTypeID": {
            "type": "integer",
            "format": "int32"
          },
          "positionTypeName": {
            "type": "string",
            "nullable": true
          },
          "userSendEmail": {
            "type": "boolean"
          },
          "receiveTextMessage": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetProfessionalListforMessagesResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetProfessionalListforMessagesModel"
            },
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetProfessionalModel": {
        "type": "object",
        "properties": {
          "nurseID": {
            "type": "integer",
            "description": "Nurse ID",
            "format": "int32"
          },
          "userFirstName": {
            "type": "string",
            "description": "First Name",
            "nullable": true
          },
          "userLastName": {
            "type": "string",
            "description": "Last Name",
            "nullable": true
          },
          "positionTypeName": {
            "type": "string",
            "description": "Position Type",
            "nullable": true
          },
          "careTypes": {
            "type": "string",
            "description": "Care Types",
            "nullable": true
          },
          "agencyNurseStatus": {
            "type": "integer",
            "description": "Status Value",
            "format": "int32"
          },
          "agencyNurseStatusDisplay": {
            "type": "string",
            "description": "Status for Display",
            "nullable": true
          },
          "agencyNurseMobilePhone": {
            "type": "string",
            "description": "Mobile No",
            "nullable": true
          },
          "agencyNurseEmail": {
            "type": "string",
            "description": "Primary Email",
            "nullable": true
          },
          "taIntegrationKey": {
            "type": "string",
            "description": "UMMS Employee ID",
            "nullable": true
          },
          "agencyNurseSecondaryEmail": {
            "type": "string",
            "description": "Secondary Email",
            "nullable": true
          },
          "costCenter": {
            "type": "string",
            "description": "Cost Center",
            "nullable": true
          },
          "approvedFacilities": {
            "type": "string",
            "description": "Approved Facilities",
            "nullable": true
          },
          "deniedFacilities": {
            "type": "string",
            "description": "Denied Facilities",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetProfessionalOrdersModel": {
        "type": "object",
        "properties": {
          "shifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProfessionalShiftOrder"
            },
            "description": "List of professional shifts",
            "nullable": true
          },
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProfessionalContractOrder"
            },
            "description": "List of professional Contracts",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetProfessionalOrders"
      },
      "GetProfessionalOrdersParam": {
        "required": [
          "nurseId",
          "orderStatus",
          "orderType"
        ],
        "type": "object",
        "properties": {
          "nurseId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "NurseId of professional",
            "format": "int32"
          },
          "orderType": {
            "maximum": 2,
            "minimum": -1,
            "type": "integer",
            "description": "Order Type: All: -1, Shift: 1, Contract: 2",
            "format": "int32"
          },
          "orderStatus": {
            "maxItems": 3,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "All: -1, Awarded: 1, Requesting: 2, Not Awarded: 3"
          }
        },
        "additionalProperties": false,
        "description": "Request for GetProfessionalOrders"
      },
      "GetProfessionalRequestLogModel": {
        "type": "object",
        "properties": {
          "logs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestLog"
            },
            "description": "Request Log",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetProfessionalRequestLog"
      },
      "GetProgramSettingsByAgencyResponse": {
        "type": "object",
        "properties": {
          "programSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProgramSettingsByAgencyItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response for web API GetProgramSettingsByAgency"
      },
      "GetProgramTypesResponse": {
        "type": "object",
        "properties": {
          "programTypes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SelectableItems"
              }
            ],
            "description": "The class the contains the list of B4Health.Dto.Response.SelectableItem.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetProgramsByRegistryIDItemResponse": {
        "type": "object",
        "properties": {
          "programID": {
            "type": "integer",
            "format": "int32"
          },
          "programName": {
            "type": "string",
            "nullable": true
          },
          "programStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "programEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "programTypeID": {
            "type": "integer",
            "format": "int32"
          },
          "programTypeName": {
            "type": "string",
            "nullable": true
          },
          "programCategoryID": {
            "type": "integer",
            "format": "int32"
          },
          "programCategoryName": {
            "type": "string",
            "nullable": true
          },
          "stateID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "isCAP": {
            "type": "boolean"
          },
          "isInternational": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetProgramsByRegistryIDResponse": {
        "type": "object",
        "properties": {
          "programs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetProgramsByRegistryIDItemResponse"
            },
            "description": "Agency Documents for current page.",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetProgramsWithAlignedAgencyCountItem": {
        "type": "object",
        "properties": {
          "programID": {
            "type": "integer",
            "format": "int32"
          },
          "programName": {
            "type": "string",
            "nullable": true
          },
          "alignedProgramAgencyCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalAgencies": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetPublicCommentsResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublicCommentListItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetPublicToAgencyCommentsResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublicToAgencyComment"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetRegistryAgencyCommentListParam": {
        "required": [
          "paging"
        ],
        "type": "object",
        "properties": {
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PagingParam"
              }
            ],
            "description": "Paging Parameters"
          }
        },
        "additionalProperties": false
      },
      "GetRegistryAgencyCommentsRequest": {
        "required": [
          "paging"
        ],
        "type": "object",
        "properties": {
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationInfo"
              }
            ],
            "description": "The pagination info that constains page index and page size."
          },
          "sorting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDescription"
              }
            ],
            "description": "The sort description that contains the sort column and sort order.",
            "nullable": true
          },
          "publicOnly": {
            "type": "boolean",
            "description": "Pass false when it is registry admin or corporate admin logs in as the user, otherwise pass true"
          }
        },
        "additionalProperties": false,
        "description": "Request for GetRegistryAgencyComments"
      },
      "GetRegistryAgencyCommentsResponse": {
        "type": "object",
        "properties": {
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegistryAgencyCommentItem"
            },
            "description": "Registry agency comments for current page.",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetRegistryAgencyComments"
      },
      "GetRegistryAgencyListItem": {
        "type": "object",
        "properties": {
          "agencyId": {
            "type": "integer",
            "description": "Agency ID",
            "format": "int32"
          },
          "agencyName": {
            "type": "string",
            "description": "Agency Name",
            "nullable": true
          },
          "agencyTaxId": {
            "type": "string",
            "description": "Agency Tax Id",
            "nullable": true
          },
          "agencyActive": {
            "type": "boolean",
            "description": "Agency Active"
          },
          "isMasterAgency": {
            "type": "boolean",
            "description": "Agency Is Master Agency"
          },
          "isSubMasterAgency": {
            "type": "boolean",
            "description": "Agency Is SubMaster Agency"
          },
          "nurseAddress": {
            "type": "string",
            "description": "Nurse Address",
            "nullable": true
          },
          "nurseAddress2": {
            "type": "string",
            "description": "Nurse Address2",
            "nullable": true
          },
          "nurseCity": {
            "type": "string",
            "description": "Nurse City",
            "nullable": true
          },
          "nurseState": {
            "type": "string",
            "description": "Nurse State",
            "nullable": true
          },
          "nurseZipCode": {
            "type": "string",
            "description": "Nurse ZipCode",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "description": "User Id",
            "format": "int32"
          },
          "username": {
            "type": "string",
            "description": "Username",
            "nullable": true
          },
          "userPhone": {
            "type": "string",
            "description": "User Phone",
            "nullable": true
          },
          "userEmail": {
            "type": "string",
            "description": "User Email",
            "nullable": true
          },
          "userFirstName": {
            "type": "string",
            "description": "User First Name",
            "nullable": true
          },
          "userLastName": {
            "type": "string",
            "description": "User Last Name",
            "nullable": true
          },
          "userActive": {
            "type": "boolean",
            "description": "User Active"
          },
          "userLastSignin": {
            "type": "string",
            "description": "UserLastSignin",
            "format": "date-time",
            "nullable": true
          },
          "agencyIntegrationKey": {
            "type": "string",
            "description": "Integration key",
            "nullable": true
          },
          "showEditUserNameBttn": {
            "type": "boolean",
            "description": "A flag to determine if Edit Username link will be shown on UI"
          }
        },
        "additionalProperties": false,
        "description": "List item of registry agency list"
      },
      "GetRegistryAgencyListResponse": {
        "type": "object",
        "properties": {
          "agencyList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetRegistryAgencyListItem"
            },
            "description": "Agencies for current page.",
            "nullable": true
          },
          "activeCount": {
            "type": "integer",
            "description": "Count of active records.",
            "format": "int32"
          },
          "inactiveCount": {
            "type": "integer",
            "description": "Count of inactive records.",
            "format": "int32"
          },
          "allCount": {
            "type": "integer",
            "description": "Count of all records.",
            "format": "int32"
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetRegistryAgencyList"
      },
      "GetRegistryCommentsResponse": {
        "type": "object",
        "properties": {
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegistryCommentListItem"
            },
            "description": "Registry comments.",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetRegistryDocumentDetailsResponse": {
        "type": "object",
        "properties": {
          "registryDocumentId": {
            "type": "integer",
            "format": "int32"
          },
          "documentName": {
            "type": "string",
            "nullable": true
          },
          "documentCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "attachmentFileName": {
            "type": "string",
            "nullable": true
          },
          "attachmentContentType": {
            "type": "string",
            "nullable": true
          },
          "documentDescription": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "1 - Active, 0 - No Active",
            "format": "int32"
          },
          "displayFileForPrograms": {
            "type": "integer",
            "description": "`Display File for (Programs):` 0 - All Programs, 1 - Selected Programs",
            "format": "int32"
          },
          "displayFileFor": {
            "type": "integer",
            "description": "`Display File For`\r\n\r\n\r\n            Available options:\r\n\r\n            0 - All(Facilities and Agencies) \r\n\r\n            1 - Facilities \r\n\r\n            2 - Agencies \r\n\r\n            3 - Only for Registry\r\n\r\n            4 - Region, visible only if AppVersion has the setting REGISTRY_DOCUMENT_ALLOW_REGION(356)",
            "format": "int32"
          },
          "programs": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "regions": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Registry Document Details"
      },
      "GetRegistryFacilityCommentResponse": {
        "type": "object",
        "properties": {
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegistryFacilityCommentModel"
            },
            "description": "Registry facility comments.",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetRegistryHospitalAdminUsersResponse": {
        "type": "object",
        "properties": {
          "detailsStats": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RegistryHospitalAdminUserStatsResponse"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetRegistryNurseCredentialsResponse": {
        "type": "object",
        "properties": {
          "showVerified": {
            "type": "boolean"
          },
          "showAcquireDate": {
            "type": "boolean"
          },
          "showActions": {
            "type": "boolean"
          },
          "nurseCredentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HospitalAdminNurseCredentialListItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetRegistryNursesResponse": {
        "type": "object",
        "properties": {
          "registryNurses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchAgencyNurseModel"
            },
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetRegistryProfessionalPersonalProfileResponse": {
        "type": "object",
        "properties": {
          "nurseId": {
            "type": "integer",
            "description": "Nurse id.",
            "format": "int32"
          },
          "agencyId": {
            "type": "integer",
            "description": "Agency id.",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "description": "First Name.",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "description": "Middle Name.",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Last Name.",
            "nullable": true
          },
          "nickName": {
            "type": "string",
            "description": "Nick Name.",
            "nullable": true
          },
          "nurseSSN": {
            "type": "string",
            "description": "For AppVersion has the setting PARTIAL_NURSE_SSN(158), the label is `SSN:`\r\n\r\nor AppVersion has the setting NURSE_SSN(68), the lable is `Social Security #:`\r\n\r\nor system has the setting NURSE_SSN_PLACEHOLDER(214), the lable is `Social Security #:`",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "description": "`Date of Birth:` For AppVersion has the setting PARTIAL_NURSE_SSN(158), or AppVersion has the setting NURSE_SSN(68), or system has the setting NURSE_SSN_PLACEHOLDER(214).",
            "format": "date-time"
          },
          "username": {
            "type": "string",
            "description": "`Username:` For MSP, or the system is VMS_BROOKDALE(383).",
            "nullable": true
          },
          "userPhone": {
            "type": "string",
            "description": "`Phone:` For AppVersion has the setting AGENYC_NURSE_REQUIRE_PHONE(164), and it's not null and not empty.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "`Status:` For System - VMS_WMCH(379) only.",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "`Address:` For AMN(36) only.",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "description": "`Address 2:` For AMN(36) only. Visible if it's not null and not empty.",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City. For AMN(36) only.",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "State. For AMN(36) only.",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "Country. For AMN(36) only.",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "ZipCode. For AMN(36) only.",
            "nullable": true
          },
          "mobilePhone": {
            "type": "string",
            "description": "`Mobile Phone:` For AppVersion has the setting AGENYC_NURSE_REQUIRE_MOBILE_PHONE(296).",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "`Email:` For AppVersion has the setting AGENYC_NURSE_REQUIRE_EMAIL(165).",
            "nullable": true
          },
          "secondaryEmail": {
            "type": "string",
            "description": "`Secondary Email:` For AppVersion has the setting AGENYC_NURSE_REQUIRE_EMAIL(165) and system has the setting AGENCY_NURSE_SECONDARY_EMAIL(324).",
            "nullable": true
          },
          "targetRecruitID": {
            "type": "string",
            "description": "`Target Recruit ID:` For NU_WEST(22) only.",
            "nullable": true
          },
          "recruiter": {
            "type": "string",
            "description": "`Recruiter:` For NU_WEST(22) only.",
            "nullable": true
          },
          "positionTypeName": {
            "type": "string",
            "description": "Position Type",
            "nullable": true
          },
          "careTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "`Care Types:` AppVersion is not CAREER_STAFF(9).",
            "nullable": true
          },
          "showTimeReportingPIN": {
            "type": "boolean",
            "description": "Indicates if the admin can view the agency professional's Time Reporting PIN."
          },
          "timeReportingPIN": {
            "type": "string",
            "description": "Time Reporting PIN.",
            "nullable": true
          },
          "showUserIntegrationKey": {
            "type": "boolean",
            "description": "Indicates if the admin can view the agency professional's User Integration Key."
          },
          "allowUserIntegrationKeyEditing": {
            "type": "boolean",
            "description": "Indicates if the admin can edit the agency professional's User Integration Key."
          },
          "userIntegrationKey": {
            "type": "string",
            "description": "For system - Duke(DUKE_ID=46), the lable is `DUID:`\r\n\r\nFor other systems, the label is `User Integration Key:`",
            "nullable": true
          },
          "showAccountID": {
            "type": "boolean",
            "description": "Indicates if the admin can view the agency professional's Account ID."
          },
          "accountID": {
            "type": "string",
            "description": "Account ID.",
            "nullable": true
          },
          "languagesSpoken": {
            "type": "string",
            "description": "`Languages Spoken:` Visible if it's not null and not empty.",
            "nullable": true
          },
          "nurseBadgeId": {
            "type": "string",
            "description": "For system - Duke(DUKE_ID=46), the lable is `Duke NetID:` and it's editable.\r\n\r\nFor system - VMS_WMCH(379), the lable is `Badge ID:` and it's editable.\r\n\r\nFor other systems, readonly, visible if it's not null and not empty.",
            "nullable": true
          },
          "yearsOfExperience": {
            "type": "integer",
            "description": "`Completed Years of Experience:` For system - Duke(DUKE_ID=46) only. It's editable.",
            "format": "int32",
            "nullable": true
          },
          "nurseADPID": {
            "type": "string",
            "description": "`Business Unit:` For MSP and AppVersion has the setting PAYROLL_ID(83).\r\n\r\n            It's editable if the user is not a member of the role `HOSP_UNIT`",
            "nullable": true
          },
          "nurseADPEmail": {
            "type": "string",
            "description": "`Business Email:` For MSP and AppVersion has the setting PAYROLL_ID(83).\r\n\r\n            It's editable if the user is not a member of the role `HOSP_UNIT`",
            "nullable": true
          },
          "nurseHireDate": {
            "type": "string",
            "description": "`Hire Date:` For system has the setting NURSE_HIRE_DATE_BY_CONTRACT(163).\r\n\r\n            It's editable if the user is not a member of the role `HOSP_UNIT`",
            "format": "date-time",
            "nullable": true
          },
          "nurseComplianceClearedDate": {
            "type": "string",
            "description": "`Compliance Cleared Date:` For system has the settting NURSE_COMPLIANCE_DATE(171).",
            "format": "date-time",
            "nullable": true
          },
          "nurseLicenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NurseLicenseItem"
            },
            "description": "`License #:` Visible if AppVersion is MSP, or the professional has licenses.",
            "nullable": true
          },
          "costCenterCode": {
            "type": "string",
            "description": "`Cost Center:` Visible if it's not null and not empty.",
            "nullable": true
          },
          "userPhoneNotifyActive": {
            "type": "boolean",
            "description": "The user phone notify active status."
          }
        },
        "additionalProperties": false
      },
      "GetRegistryProgramsResponse": {
        "type": "object",
        "properties": {
          "programs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActiveSelectableItems"
              }
            ],
            "description": "The class the contains the list of B4Health.Dto.Response.ActiveSelectableItem.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetRegistrySummaryStatisticsResponse": {
        "type": "object",
        "properties": {
          "registrySummaryStatistics": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RegistrySummaryStatisticsResponse"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetRegistryUserResponse": {
        "type": "object",
        "properties": {
          "registryUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RegistryUserItemDetailedReponse"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetRegistryUsersResponse": {
        "type": "object",
        "properties": {
          "registryUsers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultOfRegistryUserItemResponse"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetRequestTimeOffsResponse": {
        "type": "object",
        "properties": {
          "timeOffs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestTimeOff"
            },
            "description": "Nurse request time offs",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetRequestTimeOffs"
      },
      "GetRequiredCredentialsResponse": {
        "type": "object",
        "properties": {
          "requiredCredentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequiredCredentialsItemResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetRequisitionDetailResponse": {
        "type": "object",
        "properties": {
          "requisitionID": {
            "type": "integer",
            "description": "Requisition ID",
            "format": "int32"
          },
          "systemID": {
            "type": "integer",
            "description": "System ID",
            "format": "int32"
          },
          "facilityID": {
            "type": "integer",
            "description": "Facility ID",
            "format": "int32"
          },
          "unitID": {
            "type": "integer",
            "description": "Unit ID",
            "format": "int32"
          },
          "positionTypeID": {
            "type": "integer",
            "description": "Position Type ID",
            "format": "int32"
          },
          "createdByAdminID": {
            "type": "integer",
            "description": "Created By Admin ID",
            "format": "int32"
          },
          "datedCreatedOn": {
            "type": "string",
            "description": "Created Date",
            "format": "date-time"
          },
          "requestedByAdminID": {
            "type": "integer",
            "description": "Requested By Admin ID",
            "format": "int32"
          },
          "requestedByEmail": {
            "type": "string",
            "description": "Requested By Admin Email",
            "nullable": true
          },
          "requestedByPhone": {
            "type": "string",
            "description": "Requested By Admin Phone",
            "nullable": true
          },
          "profilesByEmail": {
            "type": "string",
            "description": "Profiles By Email",
            "nullable": true
          },
          "profilesByPhone": {
            "type": "string",
            "description": "Profiles By Phone",
            "nullable": true
          },
          "contractStartDateTime": {
            "type": "string",
            "description": "Contract Start Date Time",
            "format": "date-time"
          },
          "contractEndDateTime": {
            "type": "string",
            "description": "Contract End Date Time",
            "format": "date-time"
          },
          "shiftTimeTypeID": {
            "type": "integer",
            "description": "Shift Time Type ID",
            "format": "int32"
          },
          "oncall": {
            "type": "boolean",
            "description": "On Call"
          },
          "weekends": {
            "type": "boolean",
            "description": "Weekends"
          },
          "requisitionStatusID": {
            "type": "integer",
            "description": "Requisition Status ID",
            "format": "int32"
          },
          "careTypeID": {
            "type": "integer",
            "description": "Care Type ID",
            "format": "int32",
            "nullable": true
          },
          "requisitionBonus": {
            "type": "number",
            "description": "Requisition Bonus",
            "format": "double"
          },
          "rotating": {
            "type": "boolean",
            "description": "Rotating"
          },
          "rewable": {
            "type": "boolean",
            "description": "Rewable"
          },
          "numberOfWeeks": {
            "type": "integer",
            "description": "Number of Weeks",
            "format": "int32",
            "nullable": true
          },
          "parentContractAssignmentID": {
            "type": "integer",
            "description": "Parent Contract Assignment ID, visible only when it has a value, should be hidden when it is 0 or null.",
            "format": "int32",
            "nullable": true
          },
          "accountManagerAdminID": {
            "type": "integer",
            "description": "Account Manager Admin ID, visible only when system has CONTRACT_ACCOUNT_MANAGER(159) and current user has HOSP_UNIT role",
            "format": "int32",
            "nullable": true
          },
          "requisitionReasonID": {
            "type": "integer",
            "description": "Requisition Reason ID, visible for app version is GHR(17) and system has ENABLE_REQUISITION(157)",
            "format": "int32",
            "nullable": true
          },
          "hiringManager": {
            "type": "string",
            "description": "Hiring Manager, only visible when system has HIRING_MANAGER_AND_TIMESHEET_APPROVER(280) configuration\r\nFor system GHR this is always visible",
            "nullable": true
          },
          "timeSheetApprover": {
            "type": "string",
            "description": "Time Sheet Approver, only visible when system has HIRING_MANAGER_AND_TIMESHEET_APPROVER(280) configuration\r\nFor system GHR this is always visible",
            "nullable": true
          },
          "programID": {
            "type": "integer",
            "description": "Program ID",
            "format": "int32",
            "nullable": true
          },
          "requisitionHasFileVersion": {
            "type": "boolean",
            "description": "Requistision Has File Version"
          },
          "receivedApprover": {
            "type": "string",
            "description": "Received Approver, only visible for AppVersion GHR(17)",
            "nullable": true
          },
          "hoursPerWeek": {
            "type": "number",
            "description": "Hours Per Week, visible if AppVersion has REQUIRED_NUMBER_HRS_PER_WEEK(128) configuration\r\nFor AppVersion CPR(2) this is always enabled",
            "format": "double",
            "nullable": true
          },
          "requisitionNo": {
            "type": "string",
            "description": "Requisition No, only visible or required if system has LAWSON_REQUISITION_NO(291) configuration and system is GHR_EHN(394)",
            "nullable": true
          },
          "poc": {
            "type": "integer",
            "description": "Point of Contact ID, visible and required only when app version or system has DROPDOWN_CARE_TYPE_BY_POSITION_BASED_ON_UNIT(145) and at the same time there are active POC records configured for current system",
            "format": "int32",
            "nullable": true
          },
          "tempToHire": {
            "type": "boolean",
            "description": "Temp To Hire, only visible for App Version GHR(17)"
          },
          "requisitionStatus": {
            "type": "string",
            "description": "Requisition Status",
            "nullable": true
          },
          "createdByAdminName": {
            "type": "string",
            "description": "Created By Admin Name",
            "nullable": true
          },
          "positionTypeName": {
            "type": "string",
            "description": "Position Type Name",
            "nullable": true
          },
          "careTypeName": {
            "type": "string",
            "description": "Care Type Name",
            "nullable": true
          },
          "programName": {
            "type": "string",
            "description": "Program Name",
            "nullable": true
          },
          "systemName": {
            "type": "string",
            "description": "System Name",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "description": "Facility Name",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "description": "Unit Name",
            "nullable": true
          },
          "requestedByAdminName": {
            "type": "string",
            "description": "Requested By Admin Name",
            "nullable": true
          },
          "accountManagerAdminName": {
            "type": "string",
            "description": "Account Manager Admin Name",
            "nullable": true
          },
          "pocName": {
            "type": "string",
            "description": "Point of Contact Name, visible and required only when app version or system has DROPDOWN_CARE_TYPE_BY_POSITION_BASED_ON_UNIT(145) and at the same time there are active POC records configured for current system",
            "nullable": true
          },
          "shiftTimeTypeName": {
            "type": "string",
            "description": "Shift Time Type Description",
            "nullable": true
          },
          "agencyID": {
            "type": "integer",
            "description": "Agency ID",
            "format": "int32"
          },
          "agencyName": {
            "type": "string",
            "description": "Agency Name",
            "nullable": true
          },
          "nurseID": {
            "type": "integer",
            "description": "Nurse ID",
            "format": "int32"
          },
          "nurseName": {
            "type": "string",
            "description": "Nurse Name",
            "nullable": true
          },
          "requisitionReason": {
            "type": "string",
            "description": "Requisition Reason, visible for app version is GHR(17) and system has ENABLE_REQUISITION(157)",
            "nullable": true
          },
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractAssignmentModel"
            },
            "description": "List of Contract Assignments",
            "nullable": true
          },
          "floatingRequirements": {
            "type": "string",
            "description": "Floating Requirements, visible only for TN_ACROSS_AMERICA(7)",
            "nullable": true
          },
          "approvals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequisitionApprovalModel"
            },
            "description": "List of Approvals",
            "nullable": true
          },
          "privateComments": {
            "type": "string",
            "description": "Private Comments",
            "nullable": true
          },
          "alternating": {
            "type": "string",
            "description": "(Public) Comments",
            "nullable": true
          },
          "pcn": {
            "type": "string",
            "description": "PCN, visible only for TNAA_MULTICARE(187)",
            "nullable": true
          },
          "jobCode": {
            "type": "string",
            "description": "JobCode, visible only for TNAA_MULTICARE(187)",
            "nullable": true
          },
          "useCustomRate": {
            "type": "boolean",
            "description": "Use Custom Rate, applicable only for appversion TN_ACROSS_AMERICA(187), impersonated user, role is for HOSP_UNIT"
          },
          "customRate": {
            "type": "number",
            "description": "Custom Rate, applicable only for appversion TN_ACROSS_AMERICA(187), impersonated user, role is for HOSP_UNIT, and will only have a value when UseCustomRate is true",
            "format": "double",
            "nullable": true
          },
          "systemPreLoadRateID": {
            "type": "integer",
            "description": "System Pre Load Rate ID, applicable only for appversion TN_ACROSS_AMERICA(187), impersonated user, role is for HOSP_UNIT, when user selected system pre load date dropdown option, and when System do not have DESIRED_RATE_OPTION(220) configuration",
            "format": "int32",
            "nullable": true
          },
          "systemPreLoadRateDescription": {
            "type": "string",
            "description": "System Pre Load Rate Description, applicable only for appversion TN_ACROSS_AMERICA(187), impersonated user, role is for HOSP_UNIT, when user selected system pre load date dropdown option, and when System do not have DESIRED_RATE_OPTION(220) configuration",
            "nullable": true
          },
          "registryPreLoadRateID": {
            "type": "integer",
            "description": "Registry Pre Load Rate ID, applicable only for appversion TN_ACROSS_AMERICA(187), impersonated user, role is for HOSP_UNIT, when user selected registry pre load date dropdown option, and when System has REGISTRY_PRE_LOAD_RATE(292) configuration\r\napplicable also for VMS_WMCH",
            "format": "int32",
            "nullable": true
          },
          "registryPreLoadRateDescription": {
            "type": "string",
            "description": "Registry Pre Load Rate Description, applicable only for appversion TN_ACROSS_AMERICA(187), impersonated user, role is for HOSP_UNIT, when user selected registry pre load date dropdown option, and when System has REGISTRY_PRE_LOAD_RATE(292) configuration\r\napplicable also for VMS_WMCH",
            "nullable": true
          },
          "showApprove": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User is able to approve the requisition."
          },
          "showFinalApprove": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User is able to final approve the requisition."
          },
          "showDecline": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User is able to decline the requisition."
          },
          "showSave": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User is able to save the requisition."
          },
          "showCloseRequisition": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User is able to close the requisition."
          },
          "showReMessgeApprover": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User is able to re-message the approver."
          }
        },
        "additionalProperties": false
      },
      "GetRequisitionListResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequisitionModel"
            },
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetRequisitionSettingResponse": {
        "type": "object",
        "properties": {
          "levels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequisitionSettingLevelItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetScheduledContractsRequest": {
        "required": [
          "paging"
        ],
        "type": "object",
        "properties": {
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationInfo"
              }
            ],
            "description": "The pagination info that constains page index and page size."
          },
          "sorting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDescription"
              }
            ],
            "description": "The sort description that contains the sort column and sort order.",
            "nullable": true
          },
          "regionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "facilityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "programId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "positionTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "jobCategories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "For TNAA",
            "nullable": true
          },
          "extension": {
            "type": "boolean",
            "description": "Return all records when Extension is null, when Extension is true return records where ParentContractAssignmentId is not null only, when Extension is false return records where ParentContractAssignmentId is null only",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Supported sort field names: \"Position Type Name\", \"Program Name\", \"Facility Name\", \"Unit Name\", \"Contract Start Date\", \"Contract End Date\", \"Contract ID\""
      },
      "GetScheduledContractsResponse": {
        "type": "object",
        "properties": {
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduledContract"
            },
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetShiftCommentsModel": {
        "type": "object",
        "properties": {
          "shiftCommentID": {
            "type": "integer",
            "format": "int32"
          },
          "shiftCommentDateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "shiftStatus": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "userFirstName": {
            "type": "string",
            "nullable": true
          },
          "userLastName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetShiftCommentsResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetShiftCommentsModel"
            },
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetShiftDetailsForHospitalToEditResponse": {
        "type": "object",
        "properties": {
          "shiftId": {
            "type": "integer",
            "description": "Shift ID#",
            "format": "int32"
          },
          "shiftStatusId": {
            "type": "integer",
            "description": "Shift Status: 1 - Open, 2 - Pending, 3 - Awarded, 4 - Cancelled, 5 - Scheduled",
            "format": "int32"
          },
          "programs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectableItem"
            },
            "description": "Program, key-value pairs, select the first program where selected is true. Visible and required for Registry version only",
            "nullable": true
          },
          "facilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectableItem"
            },
            "description": "Facility, id-name pairs, select the first facility where selected is true",
            "nullable": true
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectableItem"
            },
            "description": "Unit, id-name pairs, units of current facility(shift.Facility), select the first unit where selected is true",
            "nullable": true
          },
          "positions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectableItem"
            },
            "description": "Position, id-name pairs, positions of current unit(shift.Unit), select the first position where selected is true",
            "nullable": true
          },
          "secondaryPositions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectableItem"
            },
            "description": "Secondary Position, id-name pairs, positions of current unit(shift.Unit), select the first position where selected is true. \r\nVisible only when app version has SECONDARY_POSITION_TYPE(190)",
            "nullable": true
          },
          "timeTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectableItem"
            },
            "description": "Time Type, key-value pairs, select the first time type where selected is true. Visible and required only when app version or system has REQUIRE_ISCHEDULE(119)",
            "nullable": true
          },
          "useCustomRate": {
            "type": "boolean",
            "description": "Use Custom Rate, visible only when system has SHIFT_CUSTOM_RATE(301)"
          },
          "shiftMaximumBid": {
            "type": "number",
            "description": "Custom Rate, visible only when system has SHIFT_CUSTOM_RATE(301) and UseCustomRate is true",
            "format": "double",
            "nullable": true
          },
          "systemPreLoadRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectableItem"
            },
            "description": "Rates, key-value pairs, select the first rate where selected is true. Visible only when app version or system has REQUIRE_ISCHEDULE(119), and at the same time it is MSP app version other than TNAA(AppVersionId=7).\r\nIt is required when system does not have SHIFT_CUSTOM_RATE(301) or user choose to not use custom rate.",
            "nullable": true
          },
          "shiftPayRate": {
            "type": "number",
            "description": "Pay Rate textbox, visible only when app version or system has CUSTOM_PAY_RATE(271), when it is not null 'Use Custom Pay Rate' should default to Yes",
            "format": "double",
            "nullable": true
          },
          "systemPreLoadPayRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectableItem"
            },
            "description": "Pay Rate dropdown, key-value pairs, select the first pay rate where selected is true. Visible only when app version or system has CUSTOM_PAY_RATE(271), and at the same time it is DEDICATED_NURSES(AppVersionId=32).\r\nIt is required when user choose to not use custom pay rate.",
            "nullable": true
          },
          "shiftStartDateTime": {
            "type": "string",
            "description": "Shift Start Date",
            "format": "date-time"
          },
          "shiftEndDateTime": {
            "type": "string",
            "description": "Shift End Date",
            "format": "date-time"
          },
          "requestedDateTime": {
            "type": "string",
            "description": "Date Order Requested",
            "format": "date-time",
            "nullable": true
          },
          "offerDateTime": {
            "type": "string",
            "description": "Target Start Date, visible only for JHU(SystemID=112)",
            "format": "date-time",
            "nullable": true
          },
          "signupStartDateTime": {
            "type": "string",
            "description": "Signup Start Date Time",
            "format": "date-time"
          },
          "signupEndDateTime": {
            "type": "string",
            "description": "Signup End Date Time",
            "format": "date-time"
          },
          "urgentNeed": {
            "type": "boolean",
            "description": "Urgent Need, visible only for VMS_UMMS(SystemID=433) and AMN(AppVersionID=36)"
          },
          "bypassTiering": {
            "type": "boolean",
            "description": "Bypass Tiering, visible only when app version has ALLOW_TIERING(149) and at the same time there are tiers configured for current system"
          },
          "tiersSet": {
            "type": "boolean",
            "description": "Tiers Set, It is true when tiers are configured for current system"
          },
          "payMultiplier": {
            "type": "number",
            "description": "Pay Multiplier",
            "format": "double"
          },
          "rateDifferential": {
            "type": "number",
            "description": "Rate Differential",
            "format": "double"
          },
          "isHoliday": {
            "type": "boolean",
            "description": "Is Holiday, visible only for registry version"
          },
          "phase1RestrictionType": {
            "type": "integer",
            "description": "Phase 1 is visible when system does not have DISABLE_PHASE_1(62) or system has ENABLE_INTERNAL_NURSE(252).\r\nPhase 1 - Home System/Facility/Units, needs to be one of 0(NONE), 1(HOME_SYSTEM_ONLY), 2(HOME_FACILITY_ONLY), 3(HOME_UNIT_ONLY).",
            "format": "int32",
            "nullable": true
          },
          "phase1PositionType": {
            "type": "boolean",
            "description": "Phase 1 - Position Type,"
          },
          "phase1IncludeAgency": {
            "type": "boolean",
            "description": "Phase 1 - Include Agencies?"
          },
          "phase2SignupStartDate": {
            "type": "string",
            "description": "Phase 2 is visible when system does not have DISABLE_PHASE_2(63) or system has ENABLE_INTERNAL_NURSE(252).\r\nRequest Phase 2 Signup Start Date, must be between the Signup Start and End Date.",
            "format": "date-time",
            "nullable": true
          },
          "phase2PositionType": {
            "type": "boolean",
            "description": "Phase 2 - Position Type"
          },
          "phase2Bonus": {
            "type": "number",
            "description": "Phase 2 - Hourly Bonus",
            "format": "double",
            "nullable": true
          },
          "phase2IncludeAgency": {
            "type": "boolean",
            "description": "Phase 2 - Include Agencies?"
          },
          "phase3RestrictionType": {
            "type": "integer",
            "description": "Phase 3 is visible when system does not have DISABLE_PHASE_3(51) or system has ENABLE_INTERNAL_NURSE(252).\r\nPhase 3 - Home System/Facility/Units, needs to be one of 0(NONE), 1(HOME_SYSTEM_ONLY), 2(HOME_FACILITY_ONLY), 3(HOME_UNIT_ONLY).",
            "format": "int32",
            "nullable": true
          },
          "phase3Hours": {
            "type": "integer",
            "description": "Phase 3 - When? Hours before Shift Date",
            "format": "int32",
            "nullable": true
          },
          "phase3PositionType": {
            "type": "boolean",
            "description": "Phase 3 - Position Type"
          },
          "phase3IncludeAgency": {
            "type": "boolean",
            "description": "Phase 3 - Include Agencies?"
          },
          "performanceEvaluator": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdminDropDownOption"
            },
            "description": "Performance Evaluator, key-value pairs, select the first PerformanceEvaluator where selected is true. Visible and required only for JHU",
            "nullable": true
          },
          "unitDescription": {
            "type": "string",
            "description": "Unit Description, visible only for GHR(17)",
            "nullable": true
          },
          "offerIncentive": {
            "type": "boolean",
            "description": "Offer Incentive - visible only when system has HOSPADMIN_OFFER_INCENTIVE(26)"
          },
          "requireAwardConfirmation": {
            "type": "boolean",
            "description": "Require Award Confirmation - check and disable it by default when system has DEFAULT_REQUIRE_CONFIRMATION(30) or it is registry version"
          },
          "shiftContact": {
            "type": "string",
            "description": "Shift Contact",
            "nullable": true
          },
          "shiftPhone": {
            "type": "string",
            "description": "Shift Phone",
            "nullable": true
          },
          "shiftComments": {
            "type": "string",
            "description": "Shift Comments",
            "nullable": true
          },
          "privateShiftComments": {
            "type": "string",
            "description": "Private Shift Comments",
            "nullable": true
          },
          "patientFirstName": {
            "type": "string",
            "description": "Patient First Name - visible only when app version has INCLUDE_PATIENT(79)",
            "nullable": true
          },
          "patientLastName": {
            "type": "string",
            "description": "Patient Last Name - visible only when app version has INCLUDE_PATIENT(79)",
            "nullable": true
          },
          "shiftBatchId": {
            "type": "integer",
            "description": "Shift belongs to a batch when ShiftBatchId is not null, we will need to provide extra options to users when trying to update a shift belongs to a batch",
            "format": "int32",
            "nullable": true
          },
          "shiftClockedIn": {
            "type": "boolean",
            "description": "Cannot delete a shift when shift.ShiftClockedIn is true"
          },
          "allowEdit": {
            "type": "boolean",
            "description": "When AllowEdit is false we need to disable buttons including Save, Save as New, Delete"
          },
          "hasBids": {
            "type": "boolean",
            "description": "It is true when there are active bids on shift."
          }
        },
        "additionalProperties": false
      },
      "GetShiftDetailsForHospitalToReconcileResponse": {
        "type": "object",
        "properties": {
          "shiftId": {
            "type": "integer",
            "description": "Shift ID#",
            "format": "int32"
          },
          "contractId": {
            "type": "integer",
            "description": "Contract Assignment Id#, has a value if it is a contract shift",
            "format": "int32",
            "nullable": true
          },
          "agencyFacilityRateTypeId": {
            "type": "integer",
            "description": "RateTypeId of contract awarded bid, used to apply contract rate",
            "format": "int32",
            "nullable": true
          },
          "shiftStatusId": {
            "type": "integer",
            "description": "Shift Status: 1 - Open, 2 - Pending, 3 - Awarded, 4 - Cancelled, 5 - Scheduled",
            "format": "int32"
          },
          "programs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectableItem"
            },
            "description": "Program, key-value pairs, select the first program where selected is true. Visible and required for Registry version only",
            "nullable": true
          },
          "facilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectableItem"
            },
            "description": "Facility, id-name pairs, select the first facility where selected is true",
            "nullable": true
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectableItem"
            },
            "description": "Unit, id-name pairs, units of current facility(shift.Facility), select the first unit where selected is true",
            "nullable": true
          },
          "positions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectableItem"
            },
            "description": "Position, id-name pairs, positions of current unit(shift.Unit), select the first position where selected is true",
            "nullable": true
          },
          "timeTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectableItem"
            },
            "description": "Time Type, key-value pairs, select the first time type where selected is true. Visible and required only when it is AMN(36) and app version or system has REQUIRE_ISCHEDULE(119)",
            "nullable": true
          },
          "useCustomRate": {
            "type": "boolean",
            "description": "Use Custom Rate, visible only when system has SHIFT_CUSTOM_RATE(301)"
          },
          "shiftMaximumBid": {
            "type": "number",
            "description": "Custom Rate, visible only when system has SHIFT_CUSTOM_RATE(301) and UseCustomRate is true",
            "format": "double",
            "nullable": true
          },
          "systemPreLoadRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectableItem"
            },
            "description": "Time Type, key-value pairs, select the first time type where selected is true. Visible and required only when it is AMN(36) and app version or system has REQUIRE_ISCHEDULE(119)",
            "nullable": true
          },
          "shiftPayRate": {
            "type": "number",
            "description": "Pay Rate textbox, visible only when app version or system has CUSTOM_PAY_RATE(271), when it is not null 'Use Custom Pay Rate' should default to Yes",
            "format": "double",
            "nullable": true
          },
          "systemPreLoadPayRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectableItem"
            },
            "description": "Pay Rate dropdown, key-value pairs, select the first pay rate where selected is true. Visible only when app version or system has CUSTOM_PAY_RATE(271), and at the same time it is DEDICATED_NURSES(AppVersionId=32).\r\nIt is required when user choose to not use custom pay rate.",
            "nullable": true
          },
          "shiftClockedIn": {
            "type": "boolean",
            "description": "don't allow change of start time when shift.ShiftClockedIn is true"
          },
          "originalShiftStartDateTime": {
            "type": "string",
            "description": "Original Shift Start Date",
            "format": "date-time",
            "nullable": true
          },
          "originalShiftEndDateTime": {
            "type": "string",
            "description": "Original Shift End Date",
            "format": "date-time",
            "nullable": true
          },
          "shiftStartDateTime": {
            "type": "string",
            "description": "Shift Start Date",
            "format": "date-time"
          },
          "shiftEndDateTime": {
            "type": "string",
            "description": "Shift End Date",
            "format": "date-time"
          },
          "requestedDateTime": {
            "type": "string",
            "description": "Date Order Requested",
            "format": "date-time",
            "nullable": true
          },
          "offerDateTime": {
            "type": "string",
            "description": "Target Start Date, visible only for JHU(SystemID=112)",
            "format": "date-time",
            "nullable": true
          },
          "signupStartDateTime": {
            "type": "string",
            "description": "Signup Start Date Time",
            "format": "date-time"
          },
          "signupEndDateTime": {
            "type": "string",
            "description": "Signup End Date Time",
            "format": "date-time"
          },
          "urgentNeed": {
            "type": "boolean",
            "description": "Urgent Need, visible only for when system or app version has SHOW_SHIFT_URGENT_NEED(352)"
          },
          "bypassTiering": {
            "type": "boolean",
            "description": "Bypass Tiering, visible only when app version has ALLOW_TIERING(149) and at the same time there are tiers configured for current system"
          },
          "tiersSet": {
            "type": "boolean",
            "description": "Tiers Set, It is true when tiers are configured for current system"
          },
          "payMultiplier": {
            "type": "number",
            "description": "Pay Multiplier, invisible when system has CREATE_SHIFT_BIDDING_SCHEDULING_NOT_VISIBLE(6)",
            "format": "double"
          },
          "rateDifferential": {
            "type": "number",
            "description": "Rate Differential, invisible when system has CREATE_SHIFT_BIDDING_SCHEDULING_NOT_VISIBLE(6)",
            "format": "double"
          },
          "isHoliday": {
            "type": "boolean",
            "description": "Is Holiday, visible only for registry version, invisible when system has CREATE_SHIFT_BIDDING_SCHEDULING_NOT_VISIBLE(6)"
          },
          "phase2SignupStartDate": {
            "type": "string",
            "description": "Request Phase 2 Signup Start Date, must be between the Signup Start and End Date. \r\nInvisible when system has CREATE_SHIFT_BIDDING_SCHEDULING_NOT_VISIBLE(6) or when creating new shift.\r\nIf above conditions do not meet, Visible for Duke, JHU, or appversion/system has ENABLE_INTERNAL_NURSE(252) when editing existing shift.",
            "format": "date-time",
            "nullable": true
          },
          "phase2Bonus": {
            "type": "number",
            "description": "Phase 2 - Hourly Bonus,\r\nInvisible when system has CREATE_SHIFT_BIDDING_SCHEDULING_NOT_VISIBLE(6) or when creating new shift.\r\nIf above conditions do not meet, Visible for Duke, JHU, or appversion/system has ENABLE_INTERNAL_NURSE(252) when editing existing shift.",
            "format": "double",
            "nullable": true
          },
          "wageCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectableItem"
            },
            "description": "WageCodes, id-name pairs, wage codes of current system(shift.System), select the first wage code where selected is true",
            "nullable": true
          },
          "originalWageCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WageCodeItem"
              }
            ],
            "description": "OriginalWageCode, it is used to calculate pay multiplier or bonus when selected index of wage code dropdown changes and one of below conditions is met:\r\n1. For non-msp app version when system has CONSOLIDATED_INVOICING(110)\r\n2. App version has WAGE_CODE_PAY_MULTLIER_UPDATE(153)",
            "nullable": true
          },
          "billingDate": {
            "type": "string",
            "description": "Billing Date",
            "format": "date-time",
            "nullable": true
          },
          "negativeHours": {
            "type": "boolean",
            "description": "Negative Hours"
          },
          "reconciledShiftId": {
            "type": "integer",
            "description": "Reconciled Shift ID",
            "format": "int32",
            "nullable": true
          },
          "shiftBreakTime": {
            "type": "integer",
            "description": "Break Time, readonly when app version or system has CAPTURE_BREAK_EXACT_TIME(281)",
            "format": "int32"
          },
          "breakTimeStart": {
            "type": "string",
            "description": "Break Start Date, visible only when app version or system has CAPTURE_BREAK_EXACT_TIME(281)",
            "format": "date-time",
            "nullable": true
          },
          "breakTimeEnd": {
            "type": "string",
            "description": "Break End Date, visible only when app version or system has CAPTURE_BREAK_EXACT_TIME(281)",
            "format": "date-time",
            "nullable": true
          },
          "unfilledReasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectableItem"
            },
            "description": "Filled/Unfilled Reason, id-name pairs, select the first unfilled reason where selected is true",
            "nullable": true
          },
          "customShiftCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectableItem"
            },
            "description": "Pay Code, id-name pairs, select the first one where selected is true, visible only when system has CUSTOM_SHIFT_CATEGORY_WAGE_CODE(172)",
            "nullable": true
          },
          "allowedFileType": {
            "type": "string",
            "description": "File Type allowed for Time Card / Documentation, no restriction on this when it is null or empty",
            "nullable": true
          },
          "hasTimeCard": {
            "type": "boolean",
            "description": "Indicates if the shift has a time card."
          },
          "shiftIsExpense": {
            "type": "boolean",
            "description": "Shift Is Expense, when there is a time card to show, show 'Documentation' as text on view time card link when it is true, or show Time Card when it is false."
          },
          "approvedByUnitManager": {
            "type": "string",
            "description": "Full name of UnitManager Approved this shift",
            "nullable": true
          },
          "dateUnitManagerApproved": {
            "type": "string",
            "description": "Date UnitManager Approved this shift",
            "format": "date-time",
            "nullable": true
          },
          "invoiceComments": {
            "type": "string",
            "description": "Invoice Comments, visible only when app version has INVOICE_COMMENTS(204)",
            "nullable": true
          },
          "performanceEvaluator": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdminDropDownOption"
            },
            "description": "Performance Evaluator, key-value pairs, select the first PerformanceEvaluator where selected is true. Visible and required only for JHU",
            "nullable": true
          },
          "unitDescription": {
            "type": "string",
            "description": "Unit Description, visible only for GHR(17)",
            "nullable": true
          },
          "shiftComments": {
            "type": "string",
            "description": "Shift Comments",
            "nullable": true
          },
          "privateShiftComments": {
            "type": "string",
            "description": "Private Shift Comments",
            "nullable": true
          },
          "patientFirstName": {
            "type": "string",
            "description": "Patient First Name - visible only when app version has INCLUDE_PATIENT(79)",
            "nullable": true
          },
          "patientLastName": {
            "type": "string",
            "description": "Patient Last Name - visible only when app version has INCLUDE_PATIENT(79)",
            "nullable": true
          },
          "offerIncentive": {
            "type": "boolean",
            "description": "Offer Incentive - visible only when system has HOSPADMIN_OFFER_INCENTIVE(26)"
          },
          "requireAwardConfirmation": {
            "type": "boolean",
            "description": "Require Award Confirmation - check and disable it by default when system has DEFAULT_REQUIRE_CONFIRMATION(30) or it is registry version"
          },
          "shiftContact": {
            "type": "string",
            "description": "Shift Contact",
            "nullable": true
          },
          "shiftPhone": {
            "type": "string",
            "description": "Shift Phone",
            "nullable": true
          },
          "reconciled": {
            "type": "boolean",
            "description": "Reconciled"
          },
          "allowCreateNegativeShift": {
            "type": "boolean",
            "description": "Allow Create Negative Shift"
          },
          "allowCreateCopyOfShift": {
            "type": "boolean",
            "description": "Allow Create Copy of Shift"
          },
          "allowCreateNegativeAndCopyShift": {
            "type": "boolean",
            "description": "Allow Create Negative and Copy Shift"
          },
          "agencyNurseApproved": {
            "type": "boolean",
            "description": "Professional Approved, visible only when IsMsp of current app version is true"
          },
          "approvedToBill": {
            "type": "boolean",
            "description": "Approved to Bill, visible only when IsMsp of current app version is true or system has CONSOLIDATED_INVOICING(110), at the same time the shift is allowed to reconcile"
          },
          "createdBy": {
            "type": "string",
            "description": "Created By",
            "nullable": true
          },
          "awardedBy": {
            "type": "string",
            "description": "Awarded By, visible only when shift is awarded",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "description": "Updated By",
            "nullable": true
          },
          "rejectedBy": {
            "type": "string",
            "description": "Rejected By, visible only when ShiftRejectedToBill is true - show it when it is not empty",
            "nullable": true
          },
          "rejectedComments": {
            "type": "string",
            "description": "Rejected Comments, visible only for VMS(AppVersionId=31) when ShiftRejectedToBill is true - show it when it is not empty",
            "nullable": true
          },
          "allowCancelAwardedShift": {
            "type": "boolean",
            "description": "Cancel Shift Award"
          },
          "allowEdit": {
            "type": "boolean",
            "description": "When AllowEdit is false we need to disable buttons including Save, Cancel"
          },
          "hasBids": {
            "type": "boolean",
            "description": "It is true when there are active bids on shift."
          },
          "allowReMessageAward": {
            "type": "boolean",
            "description": "When AllowReMessageAward is true - only when shift is awarded and starts in the future, we need to show Re-Messsage Award button"
          },
          "allowSplitShift": {
            "type": "boolean",
            "description": "When AllowSplitShift is true we need to show Split Shift button"
          }
        },
        "additionalProperties": false
      },
      "GetShiftRequiredCredentialsResponse": {
        "type": "object",
        "properties": {
          "requiredCredentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShiftRequiredCredential"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetShiftSubmissionsResponse": {
        "type": "object",
        "properties": {
          "hasAgencyAccess": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User can access the agency."
          },
          "showRate": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User is able to view the column 'Offer Rate' or 'Charge / Pay Rate'.\r\n\r\nInvisible if system has NO_RATE_MESSAGE(16), or current logged-in Admin User is unit manager, \r\nor current logged-in Admin User doesn't have edit capability in their Facilities."
          },
          "showSkillsMet": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User is able to view the column '# Skills Met'."
          },
          "submissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShiftSubmission"
            },
            "description": "Shift Submissions",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetShiftSummaryResponse": {
        "type": "object",
        "properties": {
          "scheduled": {
            "type": "integer",
            "format": "int32"
          },
          "open": {
            "type": "integer",
            "format": "int32"
          },
          "openWithoutBids": {
            "type": "integer",
            "format": "int32"
          },
          "openWithBids": {
            "type": "integer",
            "format": "int32"
          },
          "openOnHold": {
            "type": "integer",
            "format": "int32"
          },
          "offers": {
            "type": "integer",
            "format": "int32"
          },
          "awarded": {
            "type": "integer",
            "format": "int32"
          },
          "awardedCompleted": {
            "type": "integer",
            "format": "int32"
          },
          "awardedOnAssignment": {
            "type": "integer",
            "format": "int32"
          },
          "awardedNotStarted": {
            "type": "integer",
            "format": "int32"
          },
          "notAwarded": {
            "type": "integer",
            "format": "int32"
          },
          "notAwardedCancelled": {
            "type": "integer",
            "format": "int32"
          },
          "notAwardedOfferDeclined": {
            "type": "integer",
            "format": "int32"
          },
          "notAwardedOfferExpired": {
            "type": "integer",
            "format": "int32"
          },
          "notAwardedAwardCancelled": {
            "type": "integer",
            "format": "int32"
          },
          "notAwardedClosedForSubmission": {
            "type": "integer",
            "format": "int32"
          },
          "pendingSurvey": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetShiftSummary"
      },
      "GetShiftsByCriteriaRequest": {
        "required": [
          "endDate",
          "facilityId",
          "paging",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationInfo"
              }
            ],
            "description": "The pagination info that constains page index and page size."
          },
          "sorting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDescription"
              }
            ],
            "description": "The sort description that contains the sort column and sort order.",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "facilityId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "unitId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "agencyId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "nurseId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "agencyOnly": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Supported sort field names: Position, Facility, Unit, BidCount, LastName, ShiftID, StartDate, ShiftStatus."
      },
      "GetShiftsByCriteriaResponse": {
        "type": "object",
        "properties": {
          "shifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HospitalShiftItem"
            },
            "description": "Shift list on current page",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetShiftsBySystemParam": {
        "required": [
          "paging",
          "systemId"
        ],
        "type": "object",
        "properties": {
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationInfo"
              }
            ],
            "description": "The pagination info that constains page index and page size."
          },
          "sorting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDescription"
              }
            ],
            "description": "The sort description that contains the sort column and sort order.",
            "nullable": true
          },
          "systemId": {
            "type": "integer",
            "format": "int32"
          },
          "facilityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "programId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "positionTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Supported sort field names: Position, Unit, MyBid, BidCount, StartDateTime, ShiftStatus, ShiftID, EndBidDateTime."
      },
      "GetSignatureModel": {
        "type": "object",
        "properties": {
          "appid": {
            "type": "string",
            "description": "AppId is part of the signature, please ask web API provider for it",
            "nullable": true
          },
          "signature": {
            "type": "string",
            "description": "Signature is what you need to put in each request for us to identify you are legal invoker",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "description": "Timestamp is part of the signature, please use current date time",
            "nullable": true
          },
          "nonce": {
            "type": "string",
            "description": "Nonce is part of the signature, please use a random string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of getting signature"
      },
      "GetSizesResponse": {
        "type": "object",
        "properties": {
          "keySizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CacheKeySizeItem"
            },
            "description": "List of cache key size",
            "nullable": true
          },
          "totalSize": {
            "type": "number",
            "description": "TotalSize in kilobyte",
            "format": "float"
          }
        },
        "additionalProperties": false,
        "description": "Response for GetSizes"
      },
      "GetSystemCustomConfigModel": {
        "type": "object",
        "properties": {
          "setting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomSetting"
              }
            ],
            "description": "MasterCustomSetting",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response for GetSystemCustomConfig"
      },
      "GetSystemCustomConfigsByAppVersionModel": {
        "type": "object",
        "properties": {
          "systemSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemSetting"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response for GetSystemCustomConfigsByAppVersion"
      },
      "GetSystemCustomConfigsModel": {
        "type": "object",
        "properties": {
          "customConfigs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomSetting"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response for GetSystemCustomConfigs"
      },
      "GetSystemDetailsResponse": {
        "type": "object",
        "properties": {
          "systemId": {
            "type": "integer",
            "description": "SystemId",
            "format": "int32"
          },
          "systemName": {
            "type": "string",
            "description": "SystemName",
            "nullable": true
          },
          "systemType": {
            "type": "string",
            "description": "SystemType, including HOSPITAL, NURSING, DENTAL",
            "nullable": true
          },
          "systemTypeName": {
            "type": "string",
            "description": "Hospital System(HOSPITAL), Nursing Health Care System(NURSING), Dental Support Organization(DENTAL)",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Address",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "description": "Address2",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "State",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "Country",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "ZipCode",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Phone",
            "nullable": true
          },
          "phoneExt": {
            "type": "string",
            "description": "PhoneExt",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "description": "Fax",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "FirstName of primary admin",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "LastName of primary admin",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email of primary admin",
            "nullable": true
          },
          "netTerms": {
            "type": "integer",
            "description": "Visible only for NU_WEST(22) and AMN(36)",
            "format": "int32"
          },
          "billingRemitMessage": {
            "type": "string",
            "description": "Visible only when system has HOSP_ADMIN_SYSTEMWIDE_VMS_BILLING(59), and system or app version has CONSOLIDATED_INVOICING(110)",
            "nullable": true
          },
          "poNumber": {
            "type": "string",
            "description": "PoNumber",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetSystemDetails"
      },
      "GetSystemDocsResponse": {
        "type": "object",
        "properties": {
          "documentList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemDocumentModel"
            },
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetSystemDocumentResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "documentName": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetSystemPrivateCommentsResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemPrivateComment"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetSystemSettingRequest": {
        "required": [
          "settingIds"
        ],
        "type": "object",
        "properties": {
          "settingIds": {
            "maxItems": 10,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "SettingId, case-sensitive, includes: SystemEnablePermissionFramework, TiersSet, AllowRequisitionEdit"
          }
        },
        "additionalProperties": false,
        "description": "Request for GetSystemSetting"
      },
      "GetSystemSettingResponse": {
        "type": "object",
        "properties": {
          "settings": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "description": "SystemId",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetSystemSetting"
      },
      "GetSystemTierDetailResponse": {
        "type": "object",
        "properties": {
          "tierInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GetSystemTierListItem"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetSystemTierListItem": {
        "type": "object",
        "properties": {
          "tierId": {
            "type": "integer",
            "format": "int32"
          },
          "tierNumber": {
            "type": "integer",
            "format": "int32"
          },
          "tierActive": {
            "type": "boolean"
          },
          "systemId": {
            "type": "integer",
            "format": "int32"
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "facilityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "programId": {
            "type": "integer",
            "format": "int32"
          },
          "programName": {
            "type": "string",
            "nullable": true
          },
          "numberOfDays": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfHours": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "tieringByContractStartDate": {
            "type": "boolean"
          },
          "tierAgencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetTierAgencyListItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetSystemTiersResponse": {
        "type": "object",
        "properties": {
          "systemTiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetSystemTierListItem"
            },
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetSystemsAlignedCustomConfigsResponse": {
        "type": "object",
        "properties": {
          "masterCustomConfigs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomSetting"
            },
            "nullable": true
          },
          "masterCustomConfigsTotal": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "systems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemAlignedCustomConfigs"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetSystemsBySettingIdResponse": {
        "type": "object",
        "properties": {
          "systems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemWithSettingItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response for GetSystemsBySettingId"
      },
      "GetSystemsByStatusResponse": {
        "type": "object",
        "properties": {
          "systems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgencyNurseSystemItem"
            },
            "description": "Systems for the current page",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetSystemsByStatus"
      },
      "GetSystemsWithAlignedProgramFacilityCountItem": {
        "type": "object",
        "properties": {
          "systemId": {
            "type": "integer",
            "format": "int32"
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "alignedProgramFacilityCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalFacilities": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetSystemsWithAlignedProgramFacilityCountResponse": {
        "type": "object",
        "properties": {
          "systems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetSystemsWithAlignedProgramFacilityCountItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetTierAgencyListItem": {
        "type": "object",
        "properties": {
          "tierAgencyId": {
            "type": "integer",
            "format": "int32"
          },
          "tierId": {
            "type": "integer",
            "format": "int32"
          },
          "agencyId": {
            "type": "integer",
            "format": "int32"
          },
          "agencyName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetTimeEntryListModel": {
        "type": "object",
        "properties": {
          "timeEntries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimeEntry"
            },
            "description": "Time Entries for the current page",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetTimeEntryList"
      },
      "GetTimeEntryListParam": {
        "required": [
          "paging"
        ],
        "type": "object",
        "properties": {
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PagingParam"
              }
            ],
            "description": "Paging Parameters"
          }
        },
        "additionalProperties": false,
        "description": "Request for getting agency nurse time entry"
      },
      "GetTimeEntryModel": {
        "type": "object",
        "properties": {
          "shiftId": {
            "type": "integer",
            "format": "int32"
          },
          "hasShiftAgency": {
            "type": "boolean"
          },
          "contractAssignmentID": {
            "type": "integer",
            "format": "int32"
          },
          "dailyRateFlag": {
            "type": "boolean"
          },
          "shiftTimeTypeStart": {
            "type": "string",
            "format": "date-time"
          },
          "systemID": {
            "type": "integer",
            "format": "int32"
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "facilityID": {
            "type": "integer",
            "format": "int32"
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitID": {
            "type": "integer",
            "format": "int32"
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "positionID": {
            "type": "integer",
            "format": "int32"
          },
          "positionName": {
            "type": "string",
            "nullable": true
          },
          "shiftStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftBreakTime": {
            "type": "integer",
            "format": "int32"
          },
          "daylightSavings": {
            "type": "integer",
            "format": "int32"
          },
          "wageCodeID": {
            "type": "integer",
            "format": "int32"
          },
          "wageCodeName": {
            "type": "string",
            "nullable": true
          },
          "shiftApprovedToBill": {
            "type": "boolean"
          },
          "shiftIsExpense": {
            "type": "boolean"
          },
          "timeCardCount": {
            "type": "integer",
            "format": "int32"
          },
          "accountID": {
            "type": "integer",
            "format": "int32"
          },
          "projectID": {
            "type": "integer",
            "format": "int32"
          },
          "taskID": {
            "type": "integer",
            "format": "int32"
          },
          "agencyName": {
            "type": "string",
            "nullable": true
          },
          "userFirstName": {
            "type": "string",
            "nullable": true
          },
          "userLastName": {
            "type": "string",
            "nullable": true
          },
          "contractAssignmentStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractAssignmentEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "awardedNurseID": {
            "type": "integer",
            "format": "int32"
          },
          "chosenNurseID": {
            "type": "integer",
            "format": "int32"
          },
          "contractAssignmentMinimumBid": {
            "type": "number",
            "format": "double"
          },
          "contractAssignmentCurrentBid": {
            "type": "number",
            "format": "double"
          },
          "contractAssignmentBidCurrentPayRate": {
            "type": "number",
            "format": "double"
          },
          "agencyFacilityRateTypeID": {
            "type": "integer",
            "format": "int32"
          },
          "contractFacilityID": {
            "type": "integer",
            "format": "int32"
          },
          "contractFacilityName": {
            "type": "string",
            "nullable": true
          },
          "contractUnitID": {
            "type": "integer",
            "format": "int32"
          },
          "contractUnitName": {
            "type": "string",
            "nullable": true
          },
          "contractCostCenterCode": {
            "type": "string",
            "nullable": true
          },
          "contractPositionID": {
            "type": "integer",
            "format": "int32"
          },
          "shiftRejectedToBill": {
            "type": "boolean"
          },
          "approve": {
            "type": "boolean"
          },
          "approveOnly": {
            "type": "boolean"
          },
          "allowReject": {
            "type": "boolean"
          },
          "shiftReconcileNegativeHours": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetTimeTypeDropdownResponse": {
        "type": "object",
        "properties": {
          "timeTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShiftTimeTypeDropdownOption"
            },
            "description": "Shift Time Types",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetTimeTypeDropdown"
      },
      "GetTopMessageListModel": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TopMessageItem"
            },
            "description": "Messages for the current page",
            "nullable": true
          },
          "inbox": {
            "type": "integer",
            "description": "Total number of Inbox",
            "format": "int32"
          },
          "new": {
            "type": "integer",
            "description": "Total number of unread records",
            "format": "int32"
          },
          "sent": {
            "type": "integer",
            "description": "Total number of sent records",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetTopMessageList"
      },
      "GetTopMessageListParam": {
        "required": [
          "topN",
          "unreadOnly"
        ],
        "type": "object",
        "properties": {
          "topN": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "unreadOnly": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Request for getting top n message list"
      },
      "GetUnapprovedShiftsResponse": {
        "type": "object",
        "properties": {
          "showShiftComments": {
            "type": "boolean",
            "description": "For NU_WEST"
          },
          "showEnterMethod": {
            "type": "boolean",
            "description": "For GHR"
          },
          "shifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnapprovedShift"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUnitDescriptionResponse": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetUnitDescription"
      },
      "GetUnitDetailsResponse": {
        "type": "object",
        "properties": {
          "unitId": {
            "type": "integer",
            "description": "UnitId",
            "format": "int32"
          },
          "unitName": {
            "type": "string",
            "description": "UnitName",
            "nullable": true
          },
          "careTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectableItem"
            },
            "description": "Unit Care Types",
            "nullable": true
          },
          "unitAbbrv": {
            "type": "string",
            "description": "Unit Abbreviation",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "costCenterCode": {
            "type": "string",
            "description": "Cost Center Code",
            "nullable": true
          },
          "integrationKey": {
            "type": "string",
            "description": "Integration Key",
            "nullable": true
          },
          "timeAttendanceIntegrationKey": {
            "type": "string",
            "description": "Time Attendance Integration Key",
            "nullable": true
          },
          "unitActive": {
            "type": "boolean",
            "description": "Active"
          },
          "consecutiveShiftDays": {
            "type": "integer",
            "description": "Consecutive Shift Days",
            "format": "int32",
            "nullable": true
          },
          "unitIsLawson": {
            "type": "boolean",
            "description": "Unit is Lawson"
          },
          "unitNonCOO": {
            "type": "boolean",
            "description": "Unit Non COO"
          },
          "unitTypeID": {
            "type": "integer",
            "description": "Unit Type ID",
            "format": "int32",
            "nullable": true
          },
          "unitTypeName": {
            "type": "string",
            "description": "Unit Type Name",
            "nullable": true
          },
          "departmentID": {
            "type": "integer",
            "description": "Unit Department ID",
            "format": "int32"
          },
          "departmentName": {
            "type": "string",
            "description": "Unit Department Name",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetUnitDetails"
      },
      "GetUnitListItem": {
        "type": "object",
        "properties": {
          "unitID": {
            "type": "integer",
            "description": "Unit ID",
            "format": "int32"
          },
          "unitName": {
            "type": "string",
            "description": "Unit Name",
            "nullable": true
          },
          "costCenterCode": {
            "type": "string",
            "description": "Cost Center Code",
            "nullable": true
          },
          "abbrev": {
            "type": "string",
            "description": "Abbrev",
            "nullable": true
          },
          "careType": {
            "type": "string",
            "description": "Care Type",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "Active"
          }
        },
        "additionalProperties": false
      },
      "GetUnitListResponse": {
        "type": "object",
        "properties": {
          "unitList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetUnitListItem"
            },
            "description": "Units for current page.",
            "nullable": true
          },
          "activeCount": {
            "type": "integer",
            "description": "Count of active records.",
            "format": "int32"
          },
          "inactiveCount": {
            "type": "integer",
            "description": "Count of inactive records.",
            "format": "int32"
          },
          "allCount": {
            "type": "integer",
            "description": "Count of all records.",
            "format": "int32"
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetUnitList"
      },
      "GetUnitManagerListModel": {
        "type": "object",
        "properties": {
          "adminId": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "phoneExt": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "receivePerformanceEvaluationNotification": {
            "type": "boolean"
          },
          "adminFacilityUnits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdminFacilityModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUnitManagerListResponse": {
        "type": "object",
        "properties": {
          "managerList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetUnitManagerListModel"
            },
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          },
          "totalActiveRecords": {
            "type": "integer",
            "format": "int32"
          },
          "totalInactiveRecords": {
            "type": "integer",
            "format": "int32"
          },
          "totalAll": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetUnitManagerProfileResponse": {
        "type": "object",
        "properties": {
          "adminId": {
            "type": "integer",
            "description": "AdminId",
            "format": "int32"
          },
          "jobTitle": {
            "type": "string",
            "description": "JobTitle",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "First Name",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Last Name",
            "nullable": true
          },
          "username": {
            "type": "string",
            "description": "Username",
            "nullable": true
          },
          "integrationId": {
            "type": "string",
            "description": "Integration ID, visible for system TNAA_MULTICARE(187) only",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Phone",
            "nullable": true
          },
          "phoneExt": {
            "type": "string",
            "description": "PhoneExt",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email",
            "nullable": true
          },
          "receiveTimeCardApproval": {
            "type": "boolean",
            "description": "Receive Time Card Approval"
          },
          "receiveExpiringContractsNotifications": {
            "type": "boolean",
            "description": "Receive Expiring Contracts Notifications, visible only for GHR(17)"
          },
          "receiveNewContractNotifications": {
            "type": "boolean",
            "description": "Receive New Contract Notifications, visible only when system has HOSPADMIN_NEW_CONTRACT_NOTIFICATION(206)"
          },
          "receiveAwardOfferNotifications": {
            "type": "boolean",
            "description": "Receive Award Offer Notifications, visible only when system has HOSPADMIN_AWARD_OFFER_CONTRACT_NOTIFICATION(207)"
          },
          "receiveSubmissionNotification": {
            "type": "boolean",
            "description": "Receive Submission Notification, visible only when system has HOSPADMIN_CONTRACT_SUBMISSION_NOTIFICATION(302)"
          },
          "allowRequisitionCreation": {
            "type": "boolean",
            "description": "Allow Requisition Creation, visible only when system has UNIT_MANAGER_LOG_IN(124) and ENABLE_REQUISITION(157)"
          },
          "receivePerformanceEvaluation": {
            "type": "boolean",
            "description": "Receive Performance Evaluation, visible only for JHU(3)"
          },
          "enableCredentialView": {
            "type": "boolean",
            "description": "Enable Credential View, visible only for GHR(17)"
          },
          "active": {
            "type": "boolean",
            "description": "Active"
          },
          "facilities": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SelectableItems"
              }
            ],
            "description": "Facilities",
            "nullable": true
          },
          "units": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SelectableItems"
              }
            ],
            "description": "Units, units of the first selected facility regardless they are chosen or not, as well as chosen units from other facilities",
            "nullable": true
          },
          "permissions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SelectableItems"
              }
            ],
            "description": "Permissions - Modify Shifts/Contract Assignments, visible only when system has UNIT_MANAGER_ALLOW_CREATE_SHIFT(342)",
            "nullable": true
          },
          "userID": {
            "type": "integer",
            "description": "UserID",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of GetUnitManagerProfile"
      },
      "GetUsernameModel": {
        "type": "object",
        "properties": {
          "userCount": {
            "type": "integer",
            "description": "When UserCount is greater than 0, let user know multiple accounts are found and please contact support",
            "format": "int32"
          },
          "userActive": {
            "type": "boolean",
            "description": "Only make sense when UserCount is 1, show Username to user if it is true, otherwise let user contact support"
          },
          "username": {
            "type": "string",
            "description": "Username is not empty only when UserCount = 1",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response for GetUsername"
      },
      "GetWageCodeDetailsResponse": {
        "type": "object",
        "properties": {
          "wageCodeID": {
            "type": "integer",
            "description": "WageCode ID",
            "format": "int32"
          },
          "systemID": {
            "type": "integer",
            "description": "SystemID",
            "format": "int32"
          },
          "wageCodeName": {
            "type": "string",
            "description": "WageCode Name",
            "nullable": true
          },
          "wageCodeActive": {
            "type": "boolean",
            "description": "Active"
          },
          "wageCodeDescription": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "wageCodeExemptVMSRate": {
            "type": "boolean",
            "description": "Exempt VMS Rate"
          },
          "wageCodeExemptB4HRate": {
            "type": "boolean",
            "description": "Exempt B4H Rate"
          },
          "wageCodeNegativeRate": {
            "type": "boolean",
            "description": "Negative Rate"
          },
          "wageCodeIntegrationKey": {
            "type": "string",
            "description": "Integration Key",
            "nullable": true
          },
          "wageCodeMultiplier": {
            "type": "number",
            "description": "Multiplier",
            "format": "float"
          },
          "wageCodeIsOT": {
            "type": "boolean",
            "description": "OT"
          },
          "wageCodeIsDoubleOT": {
            "type": "boolean",
            "description": "Double OT"
          },
          "timeAttendanceIntegrationKey": {
            "type": "string",
            "nullable": true
          },
          "wageCodeIsHoliday": {
            "type": "boolean",
            "description": "Holiday"
          },
          "wageCodeIsOnCall": {
            "type": "boolean",
            "description": "OnCall"
          },
          "wageCodeIsCharge": {
            "type": "boolean",
            "description": "Charge"
          },
          "wageCodeIsCallback": {
            "type": "boolean",
            "description": "Callback"
          },
          "wageCodeUseMultiplier": {
            "type": "boolean",
            "description": "Use Multiplier"
          },
          "wageCodeIsDefaultStandard": {
            "type": "boolean",
            "description": "Default Standard"
          },
          "wageCodeRestrictedView": {
            "type": "boolean",
            "description": "Restricted View"
          },
          "wageCodeSkipOverlapValidation": {
            "type": "boolean",
            "description": "Skip Overlap Validation"
          },
          "skipInOTProcessing": {
            "type": "boolean",
            "description": "Skip In OT Processing"
          },
          "isExpense": {
            "type": "boolean",
            "description": "Expense"
          },
          "wageCodeIsSick": {
            "type": "boolean",
            "description": "Sick"
          },
          "updatedByAdminID": {
            "type": "integer",
            "description": "UpdatedByAdminID",
            "format": "int32",
            "nullable": true
          },
          "updatedByRegistryUserID": {
            "type": "integer",
            "description": "UpdatedByRegistryUserID",
            "format": "int32",
            "nullable": true
          },
          "dateLastUpdated": {
            "type": "string",
            "description": "DateLastUpdated",
            "format": "date-time"
          },
          "isOneHourCallback": {
            "type": "boolean",
            "description": "1 Hour Callback"
          },
          "wageCodeIsOvertimeCharge": {
            "type": "boolean",
            "description": "WageCodeIsOvertimeCharge - Currently no UI for this"
          },
          "doNotAddDifferential": {
            "type": "boolean",
            "description": "DoNotAddDifferential - Currently no UI for this"
          },
          "addChargeOnRegular": {
            "type": "boolean",
            "description": "AddChargeOnRegular - Currently no UI for this"
          },
          "isDailyFlag": {
            "type": "boolean",
            "description": "IsDailyFlag - Currently no UI for this"
          },
          "wageCodeFlatRate": {
            "type": "number",
            "description": "FlatRate - visible for NU_WEST(22) only",
            "format": "double",
            "nullable": true
          },
          "wageCodeAddFlatRate": {
            "type": "number",
            "description": "WageCodeAddFlatRate - Currently no UI for this",
            "format": "double",
            "nullable": true
          },
          "hideHour": {
            "type": "boolean",
            "description": "Hide Hour"
          },
          "excludeFromInvoice": {
            "type": "boolean",
            "description": "Exclude From Invoice"
          },
          "excludeFromAgency": {
            "type": "boolean",
            "description": "ExcludeFromAgency - Currently no UI for this"
          },
          "wageCodeAddMultiplierBeforeBonus": {
            "type": "boolean",
            "description": "WageCodeAddMultiplierBeforeBonus - Currently no UI for this"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetWageCodeDetails"
      },
      "GetWageCodeListItem": {
        "type": "object",
        "properties": {
          "wageCodeID": {
            "type": "integer",
            "description": "WageCode ID",
            "format": "int32"
          },
          "systemID": {
            "type": "integer",
            "description": "SystemID",
            "format": "int32"
          },
          "wageCodeName": {
            "type": "string",
            "description": "WageCode Name",
            "nullable": true
          },
          "wageCodeActive": {
            "type": "boolean",
            "description": "Active"
          },
          "wageCodeDescription": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "wageCodeExemptVMSRate": {
            "type": "boolean",
            "description": "Exempt VMS Rate"
          },
          "wageCodeExemptB4HRate": {
            "type": "boolean",
            "description": "Exempt B4H Rate"
          },
          "wageCodeNegativeRate": {
            "type": "boolean",
            "description": "Negative Rate"
          },
          "wageCodeIntegrationKey": {
            "type": "string",
            "description": "Integration Key",
            "nullable": true
          },
          "wageCodeMultiplier": {
            "type": "number",
            "description": "Multiplier",
            "format": "float"
          },
          "wageCodeIsOT": {
            "type": "boolean",
            "description": "OT"
          },
          "wageCodeIsDoubleOT": {
            "type": "boolean",
            "description": "Double OT"
          },
          "timeAttendanceIntegrationKey": {
            "type": "string",
            "nullable": true
          },
          "wageCodeIsHoliday": {
            "type": "boolean",
            "description": "Holiday"
          },
          "wageCodeIsOnCall": {
            "type": "boolean",
            "description": "OnCall"
          },
          "wageCodeIsCharge": {
            "type": "boolean",
            "description": "Charge"
          },
          "wageCodeIsCallback": {
            "type": "boolean",
            "description": "Callback"
          },
          "wageCodeUseMultiplier": {
            "type": "boolean",
            "description": "Use Multiplier"
          },
          "wageCodeIsDefaultStandard": {
            "type": "boolean",
            "description": "Default Standard"
          },
          "wageCodeRestrictedView": {
            "type": "boolean",
            "description": "Restricted View"
          },
          "wageCodeSkipOverlapValidation": {
            "type": "boolean",
            "description": "Skip Overlap Validation"
          },
          "skipInOTProcessing": {
            "type": "boolean",
            "description": "Skip In OT Processing"
          },
          "isExpense": {
            "type": "boolean",
            "description": "Expense"
          },
          "wageCodeIsSick": {
            "type": "boolean",
            "description": "Sick"
          },
          "updatedByAdminID": {
            "type": "integer",
            "description": "UpdatedByAdminID",
            "format": "int32",
            "nullable": true
          },
          "updatedByRegistryUserID": {
            "type": "integer",
            "description": "UpdatedByRegistryUserID",
            "format": "int32",
            "nullable": true
          },
          "dateLastUpdated": {
            "type": "string",
            "description": "DateLastUpdated",
            "format": "date-time"
          },
          "isOneHourCallback": {
            "type": "boolean",
            "description": "1 Hour Callback"
          },
          "wageCodeIsOvertimeCharge": {
            "type": "boolean",
            "description": "WageCodeIsOvertimeCharge - Currently no UI for this"
          },
          "doNotAddDifferential": {
            "type": "boolean",
            "description": "DoNotAddDifferential - Currently no UI for this"
          },
          "addChargeOnRegular": {
            "type": "boolean",
            "description": "AddChargeOnRegular - Currently no UI for this"
          },
          "isDailyFlag": {
            "type": "boolean",
            "description": "IsDailyFlag - Currently no UI for this"
          },
          "wageCodeFlatRate": {
            "type": "number",
            "description": "FlatRate - visible for NU_WEST(22) only",
            "format": "double",
            "nullable": true
          },
          "wageCodeAddFlatRate": {
            "type": "number",
            "description": "WageCodeAddFlatRate - Currently no UI for this",
            "format": "double",
            "nullable": true
          },
          "hideHour": {
            "type": "boolean",
            "description": "Hide Hour"
          },
          "excludeFromInvoice": {
            "type": "boolean",
            "description": "Exclude From Invoice"
          },
          "excludeFromAgency": {
            "type": "boolean",
            "description": "ExcludeFromAgency - Currently no UI for this"
          },
          "wageCodeAddMultiplierBeforeBonus": {
            "type": "boolean",
            "description": "WageCodeAddMultiplierBeforeBonus - Currently no UI for this"
          }
        },
        "additionalProperties": false
      },
      "GetWageCodeListResponse": {
        "type": "object",
        "properties": {
          "wageCodeList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetWageCodeListItem"
            },
            "description": "WageCodes for current page.",
            "nullable": true
          },
          "activeCount": {
            "type": "integer",
            "description": "Count of active records.",
            "format": "int32"
          },
          "inactiveCount": {
            "type": "integer",
            "description": "Count of inactive records.",
            "format": "int32"
          },
          "allCount": {
            "type": "integer",
            "description": "Count of all records.",
            "format": "int32"
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of GetWageCodeList"
      },
      "GetWageCodesBySystemIdModel": {
        "type": "object",
        "properties": {
          "wageCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WageCodeItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response for web API GetWageCodesBySystemId"
      },
      "HospitalAdminNurseCredentialListItem": {
        "type": "object",
        "properties": {
          "nurseCredentialID": {
            "type": "integer",
            "format": "int32"
          },
          "credentialName": {
            "type": "string",
            "nullable": true
          },
          "nurseCredentialDocument": {
            "type": "string",
            "nullable": true
          },
          "credentialIsCore": {
            "type": "boolean"
          },
          "nurseCredentialFulfilled": {
            "type": "boolean"
          },
          "nurseCredentialExpireDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "nurseCredentialDateSubmitted": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "nurseCredentialDocumentUploaded": {
            "type": "boolean"
          },
          "nurseCredentialArchived": {
            "type": "boolean"
          },
          "nurseCredentialArchivedCount": {
            "type": "integer",
            "format": "int32"
          },
          "isValidated": {
            "type": "boolean"
          },
          "dateTimeUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastLogViewed": {
            "type": "boolean"
          },
          "nurseCredentialAcquireDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "waived": {
            "type": "boolean"
          },
          "showFulfilled": {
            "type": "boolean"
          },
          "allowViewCredential": {
            "type": "boolean",
            "description": "Indicates if the current logged-in user is allowed to view the credential document."
          },
          "allowViewArchive": {
            "type": "boolean",
            "description": "Indicates if the current logged-in user is allowed to view the archived credentials."
          },
          "allowValidateCredential": {
            "type": "boolean",
            "description": "Indicates if the current logged-in user is allowed to validate the credential."
          },
          "allowWaiveCredential": {
            "type": "boolean",
            "description": "Indicates if the current logged-in user is allowed to waive the credential."
          },
          "allowViewLog": {
            "type": "boolean",
            "description": "Indicates if the current logged-in user is allowed to view the credential log."
          },
          "allowLeaveComment": {
            "type": "boolean",
            "description": "For agency"
          },
          "allowEditExpirationDate": {
            "type": "boolean",
            "description": "Indicates if the current logged-in user is allowed to edit the Expiration Date."
          },
          "allowArchive": {
            "type": "boolean",
            "description": "Indicates if the current logged-in user is allowed to archive the credential."
          },
          "allowDelete": {
            "type": "boolean",
            "description": "Indicates if the current logged-in user is allowed to delete the credential."
          },
          "allowReject": {
            "type": "boolean",
            "description": "Indicates if the current logged-in user is allowed to reject the credential."
          }
        },
        "additionalProperties": false
      },
      "HospitalAwardContractRequest": {
        "required": [
          "bidId"
        ],
        "type": "object",
        "properties": {
          "bidId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "agencyFacilityRateTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Available if Reconcile Confirmation is required when awarding the request.",
            "format": "int32",
            "nullable": true
          },
          "customRate": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "number",
            "description": "Available if Reconcile Confirmation is required when awarding the request.",
            "format": "double",
            "nullable": true
          },
          "contractStartDateTime": {
            "type": "string",
            "description": "Available and required if Reconcile Confirmation is required when awarding the request.",
            "format": "date-time",
            "nullable": true
          },
          "contractEndDateTime": {
            "type": "string",
            "description": "Available if Reconcile Confirmation is required when awarding the request.",
            "format": "date-time",
            "nullable": true
          },
          "rateDifferential": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "number",
            "description": "Available if Reconcile Confirmation is required when awarding the request.",
            "format": "double",
            "nullable": true
          },
          "awardedContractComments": {
            "type": "string",
            "description": "Available if Reconcile Confirmation is required when awarding the request.",
            "nullable": true
          },
          "facilityRateTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Required if system has setting FACILITY_RATE_TYPE(67) and it's requested by Internal Professional.",
            "format": "int32",
            "nullable": true
          },
          "payRate": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "chargeRateMarkup": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "listOriginator": {
            "type": "string",
            "description": "VS - View Contract Details, RS - Reconciliation Contract, ARS - Agency Reconciliation Contract",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HospitalAwardShiftRequest": {
        "required": [
          "bidId"
        ],
        "type": "object",
        "properties": {
          "bidId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "facilityRateTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Required if system has setting FACILITY_RATE_TYPE(67) and it's requested by Internal Professional.",
            "format": "int32",
            "nullable": true
          },
          "payRate": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "chargeRateMarkup": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "chargeRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "awardedShiftReasonId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "",
            "format": "int32",
            "nullable": true
          },
          "awardedShiftComments": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HospitalAwardShiftResponse": {
        "type": "object",
        "properties": {
          "awarded": {
            "type": "boolean",
            "description": "Set to true if the shift request is successfully awarded."
          }
        },
        "additionalProperties": false
      },
      "HospitalAwardToOtherContractRequest": {
        "required": [
          "contractEndDateTime",
          "contractId",
          "contractStartDateTime",
          "originalBidId"
        ],
        "type": "object",
        "properties": {
          "contractId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "originalBidId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "agencyFacilityRateTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customRate": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "contractStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "rateDifferential": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "awardedContractComments": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HospitalAwardToOtherShiftRequest": {
        "required": [
          "originalBidId",
          "shiftEndDateTime",
          "shiftId",
          "shiftStartDateTime"
        ],
        "type": "object",
        "properties": {
          "shiftId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "originalBidId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "agencyFacilityRateTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shiftStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "rateDifferential": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "awardedShiftComments": {
            "type": "string",
            "nullable": true
          },
          "facilityRateTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Required if system has setting FACILITY_RATE_TYPE(67) and it's requested by Internal Professional.",
            "format": "int32",
            "nullable": true
          },
          "payRate": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "chargeRateMarkup": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HospitalAwardedContractItem": {
        "type": "object",
        "properties": {
          "contractAssignmentID": {
            "type": "integer",
            "format": "int32"
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "positionTypeName": {
            "type": "string",
            "nullable": true
          },
          "programName": {
            "type": "string",
            "nullable": true
          },
          "contractAssignmentBatchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shiftTime": {
            "type": "string",
            "nullable": true
          },
          "shiftStatusID": {
            "type": "integer",
            "format": "int32"
          },
          "contractAssignmentStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractAssignmentEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "bidCount": {
            "type": "integer",
            "format": "int32"
          },
          "dateCreatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hasPrivateComments": {
            "type": "boolean"
          },
          "userFirstName": {
            "type": "string",
            "nullable": true
          },
          "userLastName": {
            "type": "string",
            "nullable": true
          },
          "isAgency": {
            "type": "boolean"
          },
          "nurseID": {
            "type": "integer",
            "format": "int32"
          },
          "agencyID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "agencyName": {
            "type": "string",
            "nullable": true
          },
          "complianceStatus": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HospitalCancelShiftAwardRequest": {
        "required": [
          "shiftId"
        ],
        "type": "object",
        "properties": {
          "shiftId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request for HospitalCancelShiftAward"
      },
      "HospitalCancelShiftAwardResponse": {
        "type": "object",
        "properties": {
          "cancelled": {
            "type": "boolean",
            "description": "Set to true if shift award is successfully cancelled"
          }
        },
        "additionalProperties": false,
        "description": "Response of HospitalCancelShiftAward"
      },
      "HospitalCancelShiftRequest": {
        "required": [
          "shiftId",
          "unfilledShiftReasonId"
        ],
        "type": "object",
        "properties": {
          "shiftId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "unfilledShiftReasonId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request for HospitalCancelShift"
      },
      "HospitalCancelShiftResponse": {
        "type": "object",
        "properties": {
          "cancelled": {
            "type": "boolean",
            "description": "Set to true if shift is successfully cancelled"
          }
        },
        "additionalProperties": false,
        "description": "Response of HospitalCancelShift"
      },
      "HospitalCopyShift": {
        "required": [
          "numberOfShift",
          "shiftDate",
          "signupEndDate",
          "signupStartDate"
        ],
        "type": "object",
        "properties": {
          "numberOfShift": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "shiftDate": {
            "type": "string",
            "format": "date-time"
          },
          "signupStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "phase2SignupStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "signupEndDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "HospitalCopyShiftRequest": {
        "required": [
          "additionalDates",
          "newBatch",
          "shiftId"
        ],
        "type": "object",
        "properties": {
          "shiftId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "ShiftId to copy",
            "format": "int32"
          },
          "newBatch": {
            "type": "boolean",
            "description": "If original shift belongs to a batch, provide option to add shifts to original batch(pass false as NewBatch) or copy shifts to a new batch(pass true as NewBatch - default value)"
          },
          "additionalDates": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HospitalCopyShift"
            }
          }
        },
        "additionalProperties": false,
        "description": "Request for HospitalCopyShift"
      },
      "HospitalCopyShiftResponse": {
        "type": "object",
        "properties": {
          "copied": {
            "type": "boolean",
            "description": "Set to true if shift is successfully copied"
          }
        },
        "additionalProperties": false,
        "description": "Response of HospitalCopyShift"
      },
      "HospitalCreateCopyOfShiftRequest": {
        "required": [
          "shiftId"
        ],
        "type": "object",
        "properties": {
          "shiftId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "ShiftId to copy",
            "format": "int32"
          },
          "newBillingDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request for HospitalCreateCopyOfShift"
      },
      "HospitalCreateCopyOfShiftResponse": {
        "type": "object",
        "properties": {
          "newShiftId": {
            "type": "integer",
            "description": "New ShiftId",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of HospitalCreateCopyOfShiftResponse"
      },
      "HospitalCreateNegativeShiftRequest": {
        "required": [
          "shiftId"
        ],
        "type": "object",
        "properties": {
          "shiftId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "ShiftId to copy",
            "format": "int32"
          },
          "newBillingDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request for HospitalCreateNegativeShift"
      },
      "HospitalCreateNegativeShiftResponse": {
        "type": "object",
        "properties": {
          "newShiftId": {
            "type": "integer",
            "description": "New ShiftId",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of HospitalCreateNegativeShift"
      },
      "HospitalDeclineContractSubmissionRequest": {
        "required": [
          "bidId",
          "rejectedReasonId"
        ],
        "type": "object",
        "properties": {
          "bidId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "rejectedReasonId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "rejectedComments": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HospitalDeclineSubmissionRequest": {
        "required": [
          "bidId",
          "rejectedReasonId"
        ],
        "type": "object",
        "properties": {
          "bidId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "rejectedReasonId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "rejectedComments": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HospitalDeclineSubmissionResponse": {
        "type": "object",
        "properties": {
          "declined": {
            "type": "boolean",
            "description": "Set to true if the shift request is successfully declined."
          }
        },
        "additionalProperties": false
      },
      "HospitalDeleteShiftRequest": {
        "required": [
          "shiftId"
        ],
        "type": "object",
        "properties": {
          "shiftId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request for HospitalDeleteShift"
      },
      "HospitalDeleteShiftResponse": {
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean",
            "description": "Set to true if shift is successfully deleted"
          }
        },
        "additionalProperties": false,
        "description": "Response of HospitalDeleteShift"
      },
      "HospitalMessageShiftAwardRequest": {
        "required": [
          "shiftId"
        ],
        "type": "object",
        "properties": {
          "shiftId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request for HospitalMessageShiftAward"
      },
      "HospitalMessageShiftAwardResponse": {
        "type": "object",
        "properties": {
          "messageSent": {
            "type": "boolean",
            "description": "Set to true if shift award message is successfully sent"
          }
        },
        "additionalProperties": false,
        "description": "Response of HospitalMessageShiftAward"
      },
      "HospitalNotAwardedContract": {
        "type": "object",
        "properties": {
          "contractAssignmentId": {
            "type": "integer",
            "format": "int32"
          },
          "shiftStatusId": {
            "type": "integer",
            "description": "Contract Status: 1 - Open, 2 - Pending, 3 - Awarded, 4 - Cancelled, 5 - Scheduled",
            "format": "int32"
          },
          "contractAssignmentBatchId": {
            "type": "integer",
            "description": "Return the batch id if the contract is in a batch.",
            "format": "int32",
            "nullable": true
          },
          "contractAssignmentStartDateTime": {
            "type": "string",
            "description": "Contract Start Date",
            "format": "date-time"
          },
          "contractAssignmentEndDateTime": {
            "type": "string",
            "description": "Contract End Date",
            "format": "date-time"
          },
          "contractAssignmentStartBidDateTime": {
            "type": "string",
            "description": "Signup Start Date Time",
            "format": "date-time"
          },
          "contractAssignmentEndBidDateTime": {
            "type": "string",
            "description": "Signup End Date Time",
            "format": "date-time"
          },
          "dateCreatedOn": {
            "type": "string",
            "description": "Creation Date",
            "format": "date-time",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "positionTypeName": {
            "type": "string",
            "nullable": true
          },
          "programName": {
            "type": "string",
            "description": "Registry version only.",
            "nullable": true
          },
          "shiftTime": {
            "type": "string",
            "nullable": true
          },
          "bidCount": {
            "type": "integer",
            "format": "int32"
          },
          "hasPrivateComments": {
            "type": "boolean",
            "description": "Indicates if the contrac has private comments. If true, show a pupup for the private comments. For VMS only."
          }
        },
        "additionalProperties": false
      },
      "HospitalNurseRequiredCredential": {
        "type": "object",
        "properties": {
          "requiredCredentialName": {
            "type": "string",
            "nullable": true
          },
          "requiredCredentialId": {
            "type": "integer",
            "format": "int32"
          },
          "nurseCredentialId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "nurseCredentialName": {
            "type": "string",
            "nullable": true
          },
          "expireDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateTimeUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "nurseCredentialFulfilled": {
            "type": "boolean"
          },
          "requiredCredentialMet": {
            "type": "boolean"
          },
          "isValidated": {
            "type": "boolean"
          },
          "allowViewCredential": {
            "type": "boolean",
            "description": "Indicates if the current logged-in user is allowed to view the nurse credential document.\r\n\r\nWhen it is true make NurseCredentialName a link instead of a plain text so users can view/download the document."
          },
          "allowEditExpirationDate": {
            "type": "boolean",
            "description": "Indicates if the current logged-in user is allowed to edit the Expiration Date."
          },
          "allowValidateCredential": {
            "type": "boolean",
            "description": "Indicates if the current logged-in user is allowed to validate the credential."
          },
          "allowViewArchive": {
            "type": "boolean",
            "description": "Indicates if the current logged-in user is allowed to view the archived credentials."
          }
        },
        "additionalProperties": false
      },
      "HospitalOpenContractItem": {
        "type": "object",
        "properties": {
          "contractAssignmentID": {
            "type": "integer",
            "format": "int32"
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "positionTypeName": {
            "type": "string",
            "nullable": true
          },
          "programName": {
            "type": "string",
            "nullable": true
          },
          "contractAssignmentBatchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shiftTime": {
            "type": "string",
            "nullable": true
          },
          "shiftStatusID": {
            "type": "integer",
            "format": "int32"
          },
          "contractAssignmentStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractAssignmentEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractAssignmentStartBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractAssignmentEndBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "bidCount": {
            "type": "integer",
            "format": "int32"
          },
          "needActionSubmissionCount": {
            "type": "integer",
            "format": "int32"
          },
          "dateCreatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hasPrivateComments": {
            "type": "boolean"
          },
          "contractAssignmentDateLastViewedByAdmin": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "contractAssignmentDatePlaced": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HospitalOpenContractWithBidsItem": {
        "type": "object",
        "properties": {
          "contractAssignmentID": {
            "type": "integer",
            "format": "int32"
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "positionTypeName": {
            "type": "string",
            "nullable": true
          },
          "programName": {
            "type": "string",
            "nullable": true
          },
          "contractAssignmentBatchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shiftTime": {
            "type": "string",
            "nullable": true
          },
          "shiftStatusID": {
            "type": "integer",
            "format": "int32"
          },
          "contractAssignmentStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractAssignmentEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractAssignmentStartBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractAssignmentEndBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "bidCount": {
            "type": "integer",
            "format": "int32"
          },
          "dateCreatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hasPrivateComments": {
            "type": "boolean"
          },
          "dateLastViewedByAdmin": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "datePlaced": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HospitalProfessionalContractOrder": {
        "type": "object",
        "properties": {
          "contractId": {
            "type": "integer",
            "format": "int32"
          },
          "shiftStatusID": {
            "type": "integer",
            "format": "int32"
          },
          "contractStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractStartBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractEndBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "bidCount": {
            "type": "integer",
            "format": "int32"
          },
          "programName": {
            "type": "string",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "positionTypeName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HospitalProfessionalShiftOrder": {
        "type": "object",
        "properties": {
          "shiftId": {
            "type": "integer",
            "format": "int32"
          },
          "shiftStatusID": {
            "type": "integer",
            "format": "int32"
          },
          "shiftStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftStartBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftEndBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "workHours": {
            "type": "number",
            "format": "float"
          },
          "unfilledShiftReason": {
            "type": "string",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "positionName": {
            "type": "string",
            "nullable": true
          },
          "bidCount": {
            "type": "integer",
            "format": "int32"
          },
          "shiftReconciled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "HospitalReconcileShiftRequest": {
        "required": [
          "facilityId",
          "payMultiplier",
          "positionId",
          "shiftBreakTime",
          "shiftEndDateTime",
          "shiftStartDateTime",
          "signupEndDateTime",
          "signupStartDateTime",
          "unitId"
        ],
        "type": "object",
        "properties": {
          "shiftId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Required when editing shift",
            "format": "int32",
            "nullable": true
          },
          "contractId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Pass ContractId when apply contract rate, otherwise pass null",
            "format": "int32",
            "nullable": true
          },
          "facilityId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "unitId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "positionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "programId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Visible and required for Registry version only",
            "format": "int32",
            "nullable": true
          },
          "shiftTimeTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Time Type, visible and required only when app version or system has REQUIRE_ISCHEDULE(119), and it is AMN(AppVersionId=36)",
            "format": "int32",
            "nullable": true
          },
          "useCustomRate": {
            "type": "boolean",
            "description": "Use Custom Rate, visible only when system has SHIFT_CUSTOM_RATE(301)"
          },
          "shiftMaximumBid": {
            "type": "number",
            "description": "Custom Rate, visible only when system has SHIFT_CUSTOM_RATE(301) and required when UseCustomRate is true",
            "format": "double",
            "nullable": true
          },
          "systemPreLoadRateId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Rates, visible only when it is AMN(36) and app version or system has REQUIRE_ISCHEDULE(119).\r\nWhen user choose to use custom rate if system has SHIFT_CUSTOM_RATE(301), it should be null, it is required when system does not have SHIFT_CUSTOM_RATE(301) or user choose to not use custom rate.",
            "format": "int32",
            "nullable": true
          },
          "shiftPayRate": {
            "type": "number",
            "description": "Pay Rate textbox, visible only when app version or system has CUSTOM_PAY_RATE(271), required when 'Use Custom Pay Rate' is Yes",
            "format": "double",
            "nullable": true
          },
          "systemPreLoadPayRateId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Pay Rate dropdown, visible only when app version or system has CUSTOM_PAY_RATE(271), and at the same time it is DEDICATED_NURSES(AppVersionId=32).\r\nIt is required when user choose to not use custom pay rate.",
            "format": "int32",
            "nullable": true
          },
          "shiftStartDateTime": {
            "type": "string",
            "description": "Shift Start Date",
            "format": "date"
          },
          "shiftEndDateTime": {
            "type": "string",
            "description": "Shift End Date",
            "format": "date"
          },
          "requestedDateTime": {
            "type": "string",
            "description": "Date Order Requested",
            "format": "date",
            "nullable": true
          },
          "offerDateTime": {
            "type": "string",
            "description": "Target Start Date, visible only for JHU(SystemID=112)",
            "format": "date",
            "nullable": true
          },
          "signupStartDateTime": {
            "type": "string",
            "description": "Signup Start Date Time",
            "format": "date"
          },
          "signupEndDateTime": {
            "type": "string",
            "description": "Signup End Date Time",
            "format": "date"
          },
          "urgentNeed": {
            "type": "boolean",
            "description": "Urgent Need, visible only for when system or app version has SHOW_SHIFT_URGENT_NEED(352)"
          },
          "bypassTiering": {
            "type": "boolean",
            "description": "Bypass Tiering, visible only when app version has ALLOW_TIERING(149) and at the same time there are tiers configured for current system"
          },
          "payMultiplier": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "number",
            "description": "Pay Multiplier",
            "format": "double"
          },
          "rateDifferential": {
            "maximum": 99999,
            "minimum": -99999,
            "pattern": "^-?\\d{1,5}([\\.]\\d{0,2})?$",
            "type": "number",
            "description": "Rate Differential",
            "format": "double"
          },
          "isHoliday": {
            "type": "boolean",
            "description": "Is Holiday, visible only for registry version"
          },
          "phase2SignupStartDate": {
            "type": "string",
            "description": "Request Phase 2 Signup Start Date, must be between the Signup Start and End Date. \r\nInvisible when system has CREATE_SHIFT_BIDDING_SCHEDULING_NOT_VISIBLE(6) or when creating new shift.\r\nIf above conditions do not meet, Visible for Duke, JHU, or appversion/system has ENABLE_INTERNAL_NURSE(252) when editing existing shift.",
            "format": "date",
            "nullable": true
          },
          "phase2Bonus": {
            "type": "number",
            "description": "Phase 2 - Hourly Bonus,\r\nInvisible when system has CREATE_SHIFT_BIDDING_SCHEDULING_NOT_VISIBLE(6) or when creating new shift.\r\nIf above conditions do not meet, Visible for Duke, JHU, or appversion/system has ENABLE_INTERNAL_NURSE(252) when editing existing shift.",
            "format": "double",
            "nullable": true
          },
          "wageCodeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "WageCodeId, required when app version is MSP, or system has CONSOLIDATED_INVOICING(110), otherwise optional",
            "format": "int32",
            "nullable": true
          },
          "billingDate": {
            "type": "string",
            "description": "Billing Date",
            "format": "date",
            "nullable": true
          },
          "negativeHours": {
            "type": "boolean",
            "description": "Negative Hours"
          },
          "reconciledShiftId": {
            "type": "integer",
            "description": "Reconciled Shift ID",
            "format": "int32",
            "nullable": true
          },
          "shiftBreakTime": {
            "type": "integer",
            "description": "Break Time, readonly when app version or system has CAPTURE_BREAK_EXACT_TIME(281)",
            "format": "int32"
          },
          "breakTimeStart": {
            "type": "string",
            "description": "Break Start Date, visible only when app version or system has CAPTURE_BREAK_EXACT_TIME(281)",
            "format": "date",
            "nullable": true
          },
          "breakTimeEnd": {
            "type": "string",
            "description": "Break End Date, visible only when app version or system has CAPTURE_BREAK_EXACT_TIME(281)",
            "format": "date",
            "nullable": true
          },
          "shiftLocked": {
            "type": "boolean",
            "description": "Lock Edit"
          },
          "unfilledShiftReasonId": {
            "type": "integer",
            "description": "Filled/Unfilled Reason",
            "format": "int32",
            "nullable": true
          },
          "customShiftCategoryId": {
            "type": "integer",
            "description": "Pay Code, visible and required only when system has CUSTOM_SHIFT_CATEGORY_WAGE_CODE(172)",
            "format": "int32",
            "nullable": true
          },
          "invoiceComments": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Invoice Comments, visible only when app version has INVOICE_COMMENTS(204)",
            "nullable": true
          },
          "performanceEvaluatorId": {
            "type": "integer",
            "description": "Performance Evaluator, visible and required only for JHU",
            "format": "int32",
            "nullable": true
          },
          "shiftComments": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "Shift Comments",
            "nullable": true
          },
          "privateShiftComments": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Private Shift Comments",
            "nullable": true
          },
          "patientFirstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Patient First Name - visible only when app version has INCLUDE_PATIENT(79)",
            "nullable": true
          },
          "patientLastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Patient Last Name - visible only when app version has INCLUDE_PATIENT(79)",
            "nullable": true
          },
          "reconciled": {
            "type": "boolean",
            "description": "Reconciled"
          },
          "agencyNurseApproved": {
            "type": "boolean",
            "description": "Professional Approved, visible only when IsMsp of current app version is true"
          },
          "approvedToBill": {
            "type": "boolean",
            "description": "Approved to Bill, visible only when IsMsp of current app version is true or system has CONSOLIDATED_INVOICING(110), at the same time the shift is allowed to reconcile"
          },
          "staffProfessionalId": {
            "type": "integer",
            "description": "Staff Professional, visible only for Duke(46), JHU(112), and app version or system has ENABLE_INTERNAL_NURSE(252).\r\nWhen reconcile an existing shift, hide it when program is not PerDiem",
            "format": "int32",
            "nullable": true
          },
          "agencyId": {
            "type": "integer",
            "description": "Agency",
            "format": "int32",
            "nullable": true
          },
          "chosenNurseId": {
            "type": "integer",
            "description": "Agency Professional, required when AgencyId is not null, when ChosenNurseId is not null, Wage Rate(one of RateTypeId, Rate and Expense) must have a value",
            "format": "int32",
            "nullable": true
          },
          "rateTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Wage Rate, Pass RateTypeId only when user can see rate dropdown or rate grid from UI.",
            "format": "int32",
            "nullable": true
          },
          "rate": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "number",
            "description": "Wage Rate, Pass Rate only when user can see rate textbox from UI.",
            "format": "currency",
            "nullable": true
          },
          "expense": {
            "type": "number",
            "description": "Expense, Pass Expense only when user can see Expense textbox from UI.",
            "format": "currency",
            "nullable": true
          },
          "facilityRateTypeId": {
            "type": "integer",
            "description": "Id of selected FacilityRateType on Facility Rate Type popup when system has FACILITY_RATE_TYPE(67)",
            "format": "int32",
            "nullable": true
          },
          "facilityPayRate": {
            "type": "number",
            "description": "Pay Rate on Facility Rate Type popup when system has FACILITY_RATE_TYPE(67)",
            "format": "currency",
            "nullable": true
          },
          "facilityChargeRate": {
            "type": "number",
            "description": "Charge Rate on Facility Rate Type popup when system has FACILITY_RATE_TYPE(67)",
            "format": "currency",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request for HospitalReconcileShift"
      },
      "HospitalReconcileShiftResponse": {
        "type": "object",
        "properties": {
          "shiftID": {
            "type": "integer",
            "description": "ShiftID will be greater than zero if shift is created/updated successfully",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of HospitalReconcileShift"
      },
      "HospitalRejectTimeEntryRequest": {
        "required": [
          "comments",
          "shiftId"
        ],
        "type": "object",
        "properties": {
          "shiftId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "comments": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "Request for HospitalRejectTimeEntry"
      },
      "HospitalRejectTimeEntryResponse": {
        "type": "object",
        "properties": {
          "rejected": {
            "type": "boolean",
            "description": "Set to true if shift is successfully rejected"
          }
        },
        "additionalProperties": false,
        "description": "Response of HospitalRejectTimeEntry"
      },
      "HospitalSaveShiftRequest": {
        "required": [
          "facilityId",
          "payMultiplier",
          "positionId",
          "rateDifferential",
          "shiftEndDateTime",
          "shiftStartDateTime",
          "signupEndDateTime",
          "signupStartDateTime",
          "unitId"
        ],
        "type": "object",
        "properties": {
          "shiftId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Required when editing shift",
            "format": "int32",
            "nullable": true
          },
          "facilityId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "unitId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "programId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Visible and required for Registry version only",
            "format": "int32",
            "nullable": true
          },
          "positionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "secondaryPositionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Visible only when app version has SECONDARY_POSITION_TYPE(190)",
            "format": "int32",
            "nullable": true
          },
          "shiftTimeTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Time Type, visible and required only when app version or system has REQUIRE_ISCHEDULE(119)",
            "format": "int32",
            "nullable": true
          },
          "customRate": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "number",
            "description": "Custom Rate, visible only when system has SHIFT_CUSTOM_RATE(301), it is required when user choose to use custom rate, otherwise pass null",
            "format": "double",
            "nullable": true
          },
          "systemPreLoadRateId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Rates, visible only when app version or system has REQUIRE_ISCHEDULE(119), and at the same time it is MSP app version other than TNAA(AppVersionId=7).\r\nWhen user choose to use custom rate if system has SHIFT_CUSTOM_RATE(301), it should be null, it is required when system does not have SHIFT_CUSTOM_RATE(301) or user choose to not use custom rate.",
            "format": "int32",
            "nullable": true
          },
          "shiftPayRate": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "number",
            "description": "Pay Rate, visible only when app version or system has CUSTOM_PAY_RATE(271), it is required when user choose to use custom pay rate, otherwise pass null",
            "format": "double",
            "nullable": true
          },
          "systemPreLoadPayRateId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Pay Rate, visible only when app version or system has CUSTOM_PAY_RATE(271), and at the same time it is DEDICATED_NURSES(AppVersionId=32).\r\nWhen user choose to use custom pay rate, it should be null, it is required when user choose to not use custom pay rate.",
            "format": "int32",
            "nullable": true
          },
          "shiftStartDateTime": {
            "type": "string",
            "description": "Shift Start Date Time",
            "format": "date"
          },
          "shiftEndDateTime": {
            "type": "string",
            "description": "Shift End Date Time",
            "format": "date"
          },
          "numberOfShifts": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Number of Shifts to Post for this Date, visible only when creating new shift, will default to 1 if it is left null or empty",
            "format": "int32",
            "nullable": true
          },
          "requestedDateTime": {
            "type": "string",
            "description": "Date Order Requested",
            "format": "date",
            "nullable": true
          },
          "offerDateTime": {
            "type": "string",
            "description": "Target Start Date, visible only for JHU(SystemID=112)",
            "format": "date",
            "nullable": true
          },
          "signupStartDateTime": {
            "type": "string",
            "description": "Signup Start Date Time",
            "format": "date"
          },
          "signupEndDateTime": {
            "type": "string",
            "description": "Signup End Date Time",
            "format": "date"
          },
          "urgentNeed": {
            "type": "boolean",
            "description": "Urgent Need, visible only for VMS_UMMS(SystemID=433) and AMN(AppVersionID=36)"
          },
          "bypassTiering": {
            "type": "boolean",
            "description": "Bypass Tiering, visible only when app version has ALLOW_TIERING(149) and at the same time there are tiers configured for current system"
          },
          "payMultiplier": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "number",
            "description": "Pay Multiplier",
            "format": "double"
          },
          "rateDifferential": {
            "maximum": 99999,
            "minimum": -99999,
            "pattern": "^-?\\d{1,5}([\\.]\\d{0,2})?$",
            "type": "number",
            "description": "Rate Differential",
            "format": "double"
          },
          "isHoliday": {
            "type": "boolean",
            "description": "Is Holiday, visible only for registry version"
          },
          "phase1RestrictionType": {
            "maximum": 3,
            "minimum": 0,
            "type": "integer",
            "description": "Phase 1 is visible when system does not have DISABLE_PHASE_1(62) or system has ENABLE_INTERNAL_NURSE(252).\r\nPhase 1 - Home System/Facility/Units, needs to be one of 0(NONE), 1(HOME_SYSTEM_ONLY), 2(HOME_FACILITY_ONLY), 3(HOME_UNIT_ONLY).",
            "format": "int32",
            "nullable": true
          },
          "phase1PositionType": {
            "type": "boolean",
            "description": "Phase 1 - Position Type,"
          },
          "phase1IncludeAgency": {
            "type": "boolean",
            "description": "Phase 1 - Include Agencies?"
          },
          "phase2SignupStartDate": {
            "type": "string",
            "description": "Phase 2 is visible when system does not have DISABLE_PHASE_2(63) or system has ENABLE_INTERNAL_NURSE(252).\r\nRequest Phase 2 Signup Start Date, must be between the Signup Start and End Date.",
            "format": "date",
            "nullable": true
          },
          "phase2PositionType": {
            "type": "boolean",
            "description": "Phase 2 - Position Type"
          },
          "phase2Bonus": {
            "type": "number",
            "description": "Phase 2 - Hourly Bonus",
            "format": "double",
            "nullable": true
          },
          "phase2IncludeAgency": {
            "type": "boolean",
            "description": "Phase 2 - Include Agencies?"
          },
          "phase3RestrictionType": {
            "maximum": 3,
            "minimum": 0,
            "type": "integer",
            "description": "Phase 3 is visible when system does not have DISABLE_PHASE_3(51) or system has ENABLE_INTERNAL_NURSE(252).\r\nPhase 3 - Home System/Facility/Units, needs to be one of 0(NONE), 1(HOME_SYSTEM_ONLY), 2(HOME_FACILITY_ONLY), 3(HOME_UNIT_ONLY).",
            "format": "int32",
            "nullable": true
          },
          "phase3Hours": {
            "maximum": 72,
            "minimum": 1,
            "type": "integer",
            "description": "Phase 3 - When?",
            "format": "int32",
            "nullable": true
          },
          "phase3PositionType": {
            "type": "boolean",
            "description": "Phase 3 - Position Type"
          },
          "phase3IncludeAgency": {
            "type": "boolean",
            "description": "Phase 3 - Include Agencies?"
          },
          "performanceEvaluator": {
            "type": "integer",
            "description": "Performance Evaluator - visible and required only for JHU",
            "format": "int32",
            "nullable": true
          },
          "offerIncentive": {
            "type": "boolean",
            "description": "Offer Incentive - visible only when system has HOSPADMIN_OFFER_INCENTIVE(26)"
          },
          "requireAwardConfirmation": {
            "type": "boolean",
            "description": "Require Award Confirmation - check and disable it by default when system has DEFAULT_REQUIRE_CONFIRMATION(30) or it is registry version"
          },
          "shiftContact": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Shift Contact",
            "nullable": true
          },
          "shiftPhone": {
            "maxLength": 17,
            "minLength": 0,
            "type": "string",
            "description": "Shift Phone",
            "nullable": true
          },
          "shiftComments": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "Shift Comments",
            "nullable": true
          },
          "privateShiftComments": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Private Shift Comments",
            "nullable": true
          },
          "patientFirstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Patient First Name - visible only when app version has INCLUDE_PATIENT(79)",
            "nullable": true
          },
          "patientLastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Patient Last Name - visible only when app version has INCLUDE_PATIENT(79)",
            "nullable": true
          },
          "saveSelection": {
            "maximum": 4,
            "minimum": 1,
            "type": "integer",
            "description": "Pass SaveSelection when editing shift that belongs to a batch, needs to be one of 1(Update this Shift only), 2(Update Shifts with date on or after current Shift), \r\n3(Select Shifts to update), 4(Update all Shifts in Batch)",
            "format": "int32",
            "nullable": true
          },
          "selectedShifts": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Pass it when editing shift that belongs to a batch, and SaveSelection is 3(Select Shifts to update)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request for HospitalSaveShift"
      },
      "HospitalSaveShiftResponse": {
        "type": "object",
        "properties": {
          "shiftID": {
            "type": "integer",
            "description": "ShiftID will be greater than zero if shift is created/updated successfully",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of HospitalSaveShift"
      },
      "HospitalShiftItem": {
        "type": "object",
        "properties": {
          "shiftID": {
            "type": "integer",
            "format": "int32"
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "positionName": {
            "type": "string",
            "nullable": true
          },
          "shiftStatusID": {
            "type": "integer",
            "format": "int32"
          },
          "shiftStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftStartBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftEndBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "bidCount": {
            "type": "integer",
            "format": "int32"
          },
          "userFirstName": {
            "type": "string",
            "nullable": true
          },
          "userLastName": {
            "type": "string",
            "nullable": true
          },
          "isAgency": {
            "type": "boolean"
          },
          "agencyName": {
            "type": "string",
            "nullable": true
          },
          "unfilledShiftReason": {
            "type": "string",
            "nullable": true
          },
          "hasTimeCard": {
            "type": "boolean"
          },
          "shiftBreakTime": {
            "type": "integer",
            "format": "int32"
          },
          "shiftReconciled": {
            "type": "boolean"
          },
          "shiftIsExpense": {
            "type": "boolean"
          },
          "shiftReconcileNegativeHours": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "HospitalSplitShiftRequest": {
        "required": [
          "facilityId",
          "firstShiftStartDateTime",
          "payMultiplier",
          "positionId",
          "secondShiftEndDateTime",
          "secondShiftStartDateTime",
          "shiftBreakTime",
          "shiftId",
          "signupEndDateTime",
          "signupStartDateTime",
          "unitId",
          "wageCodeId"
        ],
        "type": "object",
        "properties": {
          "shiftId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "ShiftId",
            "format": "int32"
          },
          "contractId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Pass ContractId when apply contract rate, otherwise pass null",
            "format": "int32",
            "nullable": true
          },
          "facilityId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "unitId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "positionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "programId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Visible and required for Registry version only",
            "format": "int32",
            "nullable": true
          },
          "shiftTimeTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Time Type, visible and required only when app version or system has REQUIRE_ISCHEDULE(119), and it is AMN(AppVersionId=36)",
            "format": "int32",
            "nullable": true
          },
          "useCustomRate": {
            "type": "boolean",
            "description": "Use Custom Rate, visible only when system has SHIFT_CUSTOM_RATE(301)"
          },
          "shiftMaximumBid": {
            "type": "number",
            "description": "Custom Rate, visible only when system has SHIFT_CUSTOM_RATE(301) and required when UseCustomRate is true",
            "format": "double",
            "nullable": true
          },
          "systemPreLoadRateId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Rates, visible only when it is AMN(36) and app version or system has REQUIRE_ISCHEDULE(119).\r\nWhen user choose to use custom rate if system has SHIFT_CUSTOM_RATE(301), it should be null, it is required when system does not have SHIFT_CUSTOM_RATE(301) or user choose to not use custom rate.",
            "format": "int32",
            "nullable": true
          },
          "shiftPayRate": {
            "type": "number",
            "description": "Pay Rate textbox, visible only when app version or system has CUSTOM_PAY_RATE(271), required when 'Use Custom Pay Rate' is Yes",
            "format": "double",
            "nullable": true
          },
          "systemPreLoadPayRateId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Pay Rate dropdown, visible only when app version or system has CUSTOM_PAY_RATE(271), and at the same time it is DEDICATED_NURSES(AppVersionId=32).\r\nIt is required when user choose to not use custom pay rate.",
            "format": "int32",
            "nullable": true
          },
          "firstShiftStartDateTime": {
            "type": "string",
            "description": "First Shift Start Date",
            "format": "date"
          },
          "secondShiftStartDateTime": {
            "type": "string",
            "description": "Second Shift Start Date",
            "format": "date"
          },
          "secondShiftEndDateTime": {
            "type": "string",
            "description": "Second Shift End Date",
            "format": "date"
          },
          "requestedDateTime": {
            "type": "string",
            "description": "Date Order Requested",
            "format": "date",
            "nullable": true
          },
          "offerDateTime": {
            "type": "string",
            "description": "Target Start Date, visible only for JHU(SystemID=112)",
            "format": "date",
            "nullable": true
          },
          "signupStartDateTime": {
            "type": "string",
            "description": "Signup Start Date Time",
            "format": "date"
          },
          "signupEndDateTime": {
            "type": "string",
            "description": "Signup End Date Time",
            "format": "date"
          },
          "urgentNeed": {
            "type": "boolean",
            "description": "Urgent Need, visible only for when system or app version has SHOW_SHIFT_URGENT_NEED(352)"
          },
          "bypassTiering": {
            "type": "boolean",
            "description": "Bypass Tiering, visible only when app version has ALLOW_TIERING(149) and at the same time there are tiers configured for current system"
          },
          "payMultiplier": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "number",
            "description": "Pay Multiplier",
            "format": "double"
          },
          "rateDifferential": {
            "maximum": 99999,
            "minimum": -99999,
            "pattern": "^-?\\d{1,5}([\\.]\\d{0,2})?$",
            "type": "number",
            "description": "Rate Differential",
            "format": "double"
          },
          "isHoliday": {
            "type": "boolean",
            "description": "Is Holiday, visible only for registry version"
          },
          "phase2SignupStartDate": {
            "type": "string",
            "description": "Request Phase 2 Signup Start Date, must be between the Signup Start and End Date. \r\nInvisible when system has CREATE_SHIFT_BIDDING_SCHEDULING_NOT_VISIBLE(6) or when creating new shift.\r\nIf above conditions do not meet, Visible for Duke, JHU, or appversion/system has ENABLE_INTERNAL_NURSE(252) when editing existing shift.",
            "format": "date",
            "nullable": true
          },
          "phase2Bonus": {
            "type": "number",
            "description": "Phase 2 - Hourly Bonus,\r\nInvisible when system has CREATE_SHIFT_BIDDING_SCHEDULING_NOT_VISIBLE(6) or when creating new shift.\r\nIf above conditions do not meet, Visible for Duke, JHU, or appversion/system has ENABLE_INTERNAL_NURSE(252) when editing existing shift.",
            "format": "double",
            "nullable": true
          },
          "wageCodeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "WageCodes, id-name pairs, wage codes of current system(shift.System), select the first wage code where selected is true",
            "format": "int32"
          },
          "billingDate": {
            "type": "string",
            "description": "Billing Date",
            "format": "date",
            "nullable": true
          },
          "negativeHours": {
            "type": "boolean",
            "description": "Negative Hours"
          },
          "reconciledShiftId": {
            "type": "integer",
            "description": "Reconciled Shift ID",
            "format": "int32",
            "nullable": true
          },
          "shiftBreakTime": {
            "type": "integer",
            "description": "Break Time, readonly when app version or system has CAPTURE_BREAK_EXACT_TIME(281)",
            "format": "int32"
          },
          "breakTimeStart": {
            "type": "string",
            "description": "Break Start Date, visible only when app version or system has CAPTURE_BREAK_EXACT_TIME(281)",
            "format": "date",
            "nullable": true
          },
          "breakTimeEnd": {
            "type": "string",
            "description": "Break End Date, visible only when app version or system has CAPTURE_BREAK_EXACT_TIME(281)",
            "format": "date",
            "nullable": true
          },
          "shiftLocked": {
            "type": "boolean",
            "description": "Lock Edit"
          },
          "unfilledShiftReasonId": {
            "type": "integer",
            "description": "Filled/Unfilled Reason",
            "format": "int32",
            "nullable": true
          },
          "customShiftCategoryId": {
            "type": "integer",
            "description": "Pay Code, visible and required only when system has CUSTOM_SHIFT_CATEGORY_WAGE_CODE(172)",
            "format": "int32",
            "nullable": true
          },
          "invoiceComments": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Invoice Comments, visible only when app version has INVOICE_COMMENTS(204)",
            "nullable": true
          },
          "performanceEvaluatorId": {
            "type": "integer",
            "description": "Performance Evaluator, visible and required only for JHU",
            "format": "int32",
            "nullable": true
          },
          "shiftComments": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "Shift Comments",
            "nullable": true
          },
          "privateShiftComments": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Private Shift Comments",
            "nullable": true
          },
          "patientFirstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Patient First Name - visible only when app version has INCLUDE_PATIENT(79)",
            "nullable": true
          },
          "patientLastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Patient Last Name - visible only when app version has INCLUDE_PATIENT(79)",
            "nullable": true
          },
          "reconciled": {
            "type": "boolean",
            "description": "Reconciled"
          },
          "agencyNurseApproved": {
            "type": "boolean",
            "description": "Professional Approved, visible only when IsMsp of current app version is true"
          },
          "approvedToBill": {
            "type": "boolean",
            "description": "Approved to Bill, visible only when IsMsp of current app version is true or system has CONSOLIDATED_INVOICING(110), at the same time the shift is allowed to reconcile"
          }
        },
        "additionalProperties": false,
        "description": "Request for HospitalSplitShift"
      },
      "HospitalSplitShiftResponse": {
        "type": "object",
        "properties": {
          "shiftID": {
            "type": "integer",
            "description": "ShiftID will be greater than zero if shift is split successfully, and it is id of the second shift",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of HospitalSplitShift"
      },
      "HospitalUpdateShiftNeedStatusRequest": {
        "required": [
          "needStatusId",
          "shiftId"
        ],
        "type": "object",
        "properties": {
          "shiftId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "needStatusId": {
            "maximum": 8,
            "minimum": 1,
            "type": "integer",
            "description": "For NuWest, 1: On-Hold, 2: Accepting Profiles, 3: Profiles Submitted, 4: Interviewing, 5: Filled, 6: Offer Out, 7: Not Accepting Profiles, 8: Client Reviewing Profiles\r\nFor Others, 1: On-Hold, 2: Interviewing, 3: Second Request, 4: Need Updated, 5: Filled, 6: Offered, 7: Not Accepting Submissions",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request for HospitalUpdateShiftNeedStatus"
      },
      "HospitalUpdateShiftNeedStatusResponse": {
        "type": "object",
        "properties": {
          "needStatusUpdated": {
            "type": "boolean",
            "description": "Set to true if shift need status is successfully updated"
          }
        },
        "additionalProperties": false,
        "description": "Response of HospitalUpdateShiftNeedStatus"
      },
      "HoursByDate": {
        "type": "object",
        "properties": {
          "shiftDate": {
            "type": "string",
            "format": "date-time"
          },
          "hours": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "IdNamePair": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Gets or sets the Id of the item as an integer.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the name of the item.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdNamePairs": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdNamePair"
            },
            "description": "The list of B4Health.Dto.Response.IdNamePair.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Class that contains the list of B4Health.Dto.Response.IdNamePair."
      },
      "IdenticalLicenseResponseModel": {
        "type": "object",
        "properties": {
          "nurseId": {
            "type": "integer",
            "description": "Nurse Id.",
            "format": "int32"
          },
          "nurseName": {
            "type": "string",
            "description": "Nurse name.",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "State.",
            "nullable": true
          },
          "licenseNumber": {
            "type": "string",
            "description": "License Number.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Identical License will contain nurse's license information."
      },
      "IncidentListItem": {
        "type": "object",
        "properties": {
          "qaIncidentId": {
            "type": "integer",
            "format": "int32"
          },
          "systemId": {
            "type": "integer",
            "format": "int32"
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "agencyID": {
            "type": "integer",
            "format": "int32"
          },
          "agencyName": {
            "type": "string",
            "nullable": true
          },
          "adminUserName": {
            "type": "string",
            "nullable": true
          },
          "agencyUserName": {
            "type": "string",
            "nullable": true
          },
          "professionalNurseID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "professional": {
            "type": "string",
            "nullable": true
          },
          "dateOfIncident": {
            "type": "string",
            "format": "date-time"
          },
          "dateSubmitted": {
            "type": "string",
            "format": "date-time"
          },
          "wasMadeDoNotReturn": {
            "type": "boolean"
          },
          "wasFormalReportSent": {
            "type": "boolean"
          },
          "qaIncidentDescription": {
            "type": "string",
            "nullable": true
          },
          "qaIncidentRegistryAdminComment": {
            "type": "string",
            "nullable": true
          },
          "incidentTypeName": {
            "type": "string",
            "nullable": true
          },
          "incidentTypes": {
            "type": "string",
            "nullable": true
          },
          "boardName": {
            "type": "string",
            "nullable": true
          },
          "parentIncidentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "qaIncidentSubmittedByName": {
            "type": "string",
            "nullable": true
          },
          "qaIncidentCorrectiveAction": {
            "type": "string",
            "nullable": true
          },
          "dateNotifiedOfIncident": {
            "type": "string",
            "format": "date-time"
          },
          "wasAgencyNotified": {
            "type": "boolean"
          },
          "dateNotifiedOfIncidentNonAgency": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "wasProviderTermedFromAgency": {
            "type": "boolean"
          },
          "dateRemedied": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "remediedByName": {
            "type": "string",
            "nullable": true
          },
          "remediedByTitle": {
            "type": "string",
            "nullable": true
          },
          "placeProviderAgainInFacility": {
            "type": "boolean"
          },
          "preventionPlan": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JobCodeItem": {
        "type": "object",
        "properties": {
          "systemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "positionTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalPositionType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LocationModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LocationReponseModel": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationModel"
            },
            "nullable": true
          },
          "totalItems": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MasterCustomConfigAlignmentItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of Custom Config Setting",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Name of Custom Config Setting",
            "nullable": true
          },
          "explanation": {
            "type": "string",
            "description": "Usage Explanation of Custom Config Setting",
            "nullable": true
          },
          "selected": {
            "type": "boolean",
            "description": "Flag to determine if the config has AppVersion Enabled"
          }
        },
        "additionalProperties": false,
        "description": "Master Custom Config Alignment Item"
      },
      "MatchingProfessional": {
        "type": "object",
        "properties": {
          "nurseId": {
            "type": "integer",
            "format": "int32"
          },
          "nurseName": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "mobilePhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MatchingUserModel": {
        "type": "object",
        "properties": {
          "nurseID": {
            "type": "integer",
            "description": "Nurse id.",
            "format": "int32"
          },
          "nurseName": {
            "type": "string",
            "description": "Nurse Name.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MessageApproverRequest": {
        "required": [
          "requisitionId"
        ],
        "type": "object",
        "properties": {
          "requisitionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MessageItem": {
        "type": "object",
        "properties": {
          "messageId": {
            "type": "integer",
            "format": "int32"
          },
          "userFirstName": {
            "type": "string",
            "description": "When it is inbox, this is sender's first name, if it is sent box, this is receiver's first name",
            "nullable": true
          },
          "userLastName": {
            "type": "string",
            "description": "When it is inbox, this is sender's last name, if it is sent box, this is receiver's last name",
            "nullable": true
          },
          "messageSubject": {
            "type": "string",
            "nullable": true
          },
          "messageDateSent": {
            "type": "string",
            "format": "date-time"
          },
          "messageSenderId": {
            "type": "integer",
            "format": "int32"
          },
          "messageReceiverId": {
            "type": "integer",
            "format": "int32"
          },
          "messageDeleted": {
            "type": "boolean"
          },
          "messageDateReceived": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "shiftID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "messageTypeID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MessageSummaryModel": {
        "type": "object",
        "properties": {
          "inbox": {
            "type": "integer",
            "format": "int32"
          },
          "new": {
            "type": "integer",
            "format": "int32"
          },
          "sent": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MultiShift": {
        "required": [
          "agencyFacilityRateTypeId",
          "chosenNurseId",
          "positionId",
          "shiftEndDateTime",
          "shiftStartDateTime",
          "unitId"
        ],
        "type": "object",
        "properties": {
          "shiftId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Pass null when adding a new shift.",
            "format": "int32",
            "nullable": true
          },
          "unitId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "positionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "shiftStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftBreakTime": {
            "type": "integer",
            "description": "Pass null if user does not specify it.",
            "format": "int32",
            "nullable": true
          },
          "programId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "chosenNurseId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "agencyFacilityRateTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "regularRateDiff": {
            "type": "number",
            "format": "double"
          },
          "shiftPayMultiplier": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "NameOnly": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name property",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Class that will hold results for name only return"
      },
      "NameOnlyResponses": {
        "type": "object",
        "properties": {
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameOnly"
            },
            "description": "List of Results",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response for web API that returns Name only, e.g. Job Category by System Id"
      },
      "NotAwardedShiftItem": {
        "type": "object",
        "properties": {
          "shiftId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Always \"Open\".",
            "nullable": true
          },
          "positionName": {
            "type": "string",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "bidCount": {
            "type": "integer",
            "format": "int32"
          },
          "shiftStartDateTime": {
            "type": "string",
            "description": "Shift Start Date",
            "format": "date-time"
          },
          "shiftEndDateTime": {
            "type": "string",
            "description": "Shift End Date",
            "format": "date-time"
          },
          "shiftStartBidDateTime": {
            "type": "string",
            "description": "Signup Start Date Time",
            "format": "date-time"
          },
          "shiftEndBidDateTime": {
            "type": "string",
            "description": "Signup End Date Time",
            "format": "date-time"
          },
          "shiftBreakTime": {
            "type": "integer",
            "format": "int32"
          },
          "programName": {
            "type": "string",
            "description": "Registry version only.",
            "nullable": true
          },
          "postRate": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "NurseCredentialItem": {
        "type": "object",
        "properties": {
          "nurseCredentialId": {
            "type": "integer",
            "description": "Nurse Credential Id",
            "format": "int32"
          },
          "nurseId": {
            "type": "integer",
            "description": "Nurse Id",
            "format": "int32"
          },
          "credentialId": {
            "type": "integer",
            "description": "Credential Id",
            "format": "int32"
          },
          "credentialName": {
            "type": "string",
            "description": "Credential Name",
            "nullable": true
          },
          "nurseCredentialDocument": {
            "type": "string",
            "description": "Nurse Credential Document",
            "nullable": true
          },
          "credentialIsCore": {
            "type": "boolean",
            "description": "Credential IsCore"
          },
          "nurseCredentialFulfilled": {
            "type": "boolean",
            "description": "Nurse Credential Fulfilled"
          },
          "nurseCredentialExpireDate": {
            "type": "string",
            "description": "Nurse Credential ExpireD ate",
            "format": "date-time",
            "nullable": true
          },
          "nurseCredentialDocumentUploaded": {
            "type": "boolean",
            "description": "Nurse Credential Document Uploaded"
          },
          "nurseCredentialArchivedCount": {
            "type": "integer",
            "description": "Nurse Credential Archived Count",
            "format": "int32"
          },
          "nurseCredentialArchived": {
            "type": "boolean",
            "description": "Nurse Credential Archived"
          },
          "nurseCredentialAcquireDate": {
            "type": "string",
            "description": "NurseCredentialAcquireDate",
            "format": "date-time",
            "nullable": true
          },
          "dateTimeUpdated": {
            "type": "string",
            "description": "Date Time Updated",
            "format": "date-time"
          },
          "isValidated": {
            "type": "boolean",
            "description": "Is Validated"
          }
        },
        "additionalProperties": false,
        "description": "Nurse Credential Item"
      },
      "NurseCredentialViewLog": {
        "type": "object",
        "properties": {
          "viewedBy": {
            "type": "string",
            "nullable": true
          },
          "action": {
            "type": "string",
            "nullable": true
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "comments": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NurseLicense": {
        "required": [
          "state"
        ],
        "type": "object",
        "properties": {
          "state": {
            "maxLength": 2,
            "minLength": 1,
            "type": "string",
            "description": "State where nurse license is issued."
          },
          "licenseNumber": {
            "maxLength": 50,
            "type": "string",
            "description": "License number.",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "description": "Nullable license expieration date.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request for Nurse License"
      },
      "NurseLicenseItem": {
        "type": "object",
        "properties": {
          "licenseNumber": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NurseRequiredCredential": {
        "type": "object",
        "properties": {
          "requiredCredentialName": {
            "type": "string",
            "nullable": true
          },
          "requiredCredentialId": {
            "type": "integer",
            "format": "int32"
          },
          "nurseCredentialId": {
            "type": "integer",
            "format": "int32"
          },
          "credentialId": {
            "type": "integer",
            "description": "Will need to pass it as parameter when view nurse credential view log",
            "format": "int32"
          },
          "nurseCredentialName": {
            "type": "string",
            "nullable": true
          },
          "expireDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "documentUploaded": {
            "type": "boolean",
            "description": "When DocumentUploaded is true make NurseCredentialName a link instead of a plain text so users can view/download the document"
          },
          "lastLogViewed": {
            "type": "boolean",
            "description": "Show user an indicator when LastLogViewed is false"
          },
          "requiredCredentialMet": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "NurseSkillsMet": {
        "type": "object",
        "properties": {
          "skillGroup": {
            "type": "string",
            "nullable": true
          },
          "skillOrCertifications": {
            "type": "string",
            "nullable": true
          },
          "experience": {
            "type": "string",
            "nullable": true
          },
          "professionalHas": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "OpenShiftItem": {
        "type": "object",
        "properties": {
          "shiftId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Always \"Open\".",
            "nullable": true
          },
          "positionName": {
            "type": "string",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "bidCount": {
            "type": "integer",
            "format": "int32"
          },
          "needActionSubmissionCount": {
            "type": "integer",
            "format": "int32"
          },
          "shiftStartDateTime": {
            "type": "string",
            "description": "Shift Start Date",
            "format": "date-time"
          },
          "shiftEndDateTime": {
            "type": "string",
            "description": "Shift End Date",
            "format": "date-time"
          },
          "shiftStartBidDateTime": {
            "type": "string",
            "description": "Signup Start Date Time",
            "format": "date-time"
          },
          "shiftEndBidDateTime": {
            "type": "string",
            "description": "Signup End Date Time",
            "format": "date-time"
          },
          "shiftBreakTime": {
            "type": "integer",
            "format": "int32"
          },
          "programName": {
            "type": "string",
            "description": "Registry version only.",
            "nullable": true
          },
          "postRate": {
            "type": "number",
            "format": "double"
          },
          "dateLastViewedByAdmin": {
            "type": "string",
            "description": "It means that bid has been reviewed when DateLastViewedByAdmin > BidDatePlaced, otherwise it is new request",
            "format": "date-time",
            "nullable": true
          },
          "bidDatePlaced": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "OpenShiftWithBidsItem": {
        "type": "object",
        "properties": {
          "shiftId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Always \"Open\".",
            "nullable": true
          },
          "positionName": {
            "type": "string",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "bidCount": {
            "type": "integer",
            "format": "int32"
          },
          "shiftStartDateTime": {
            "type": "string",
            "description": "Shift Start Date",
            "format": "date-time"
          },
          "shiftEndDateTime": {
            "type": "string",
            "description": "Shift End Date",
            "format": "date-time"
          },
          "shiftStartBidDateTime": {
            "type": "string",
            "description": "Signup Start Date Time",
            "format": "date-time"
          },
          "shiftEndBidDateTime": {
            "type": "string",
            "description": "Signup End Date Time",
            "format": "date-time"
          },
          "shiftBreakTime": {
            "type": "integer",
            "format": "int32"
          },
          "programName": {
            "type": "string",
            "description": "Registry version only.",
            "nullable": true
          },
          "postRate": {
            "type": "number",
            "format": "double"
          },
          "dateLastViewedByAdmin": {
            "type": "string",
            "description": "It means that bid has been reviewed when DateLastViewedByAdmin > BidDatePlaced, otherwise it is new request",
            "format": "date-time",
            "nullable": true
          },
          "bidDatePlaced": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "OtherOpenShiftItem": {
        "type": "object",
        "properties": {
          "shiftId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Always \"Open\".",
            "nullable": true
          },
          "positionName": {
            "type": "string",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "bidCount": {
            "type": "integer",
            "format": "int32"
          },
          "shiftStartDateTime": {
            "type": "string",
            "description": "Shift Start Date",
            "format": "date-time"
          },
          "shiftEndDateTime": {
            "type": "string",
            "description": "Shift End Date",
            "format": "date-time"
          },
          "shiftStartBidDateTime": {
            "type": "string",
            "description": "Signup Start Date Time",
            "format": "date-time"
          },
          "shiftEndBidDateTime": {
            "type": "string",
            "description": "Signup End Date Time",
            "format": "date-time"
          },
          "shiftBreakTime": {
            "type": "integer",
            "format": "int32"
          },
          "programName": {
            "type": "string",
            "description": "Registry version only.",
            "nullable": true
          },
          "shiftBatchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedPotentialMatchingUserModel": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MatchingProfessional"
            },
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PaginatedBillingGroupsSummaryItemResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetBillingGroupsSummaryItemResponse"
            },
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PaginatedResultOfFAQItemResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FAQItemResponse"
            },
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PaginatedResultOfRegistryUserItemResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegistryUserItemResponse"
            },
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PaginationInfo": {
        "required": [
          "pageIndex",
          "pageSize"
        ],
        "type": "object",
        "properties": {
          "pageSize": {
            "maximum": 200,
            "minimum": 1,
            "type": "integer",
            "description": "The number of records to show on a single page",
            "format": "int32"
          },
          "pageIndex": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "Starting from 0",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagingParam": {
        "required": [
          "pageIndex",
          "pageSize"
        ],
        "type": "object",
        "properties": {
          "pageSize": {
            "maximum": 200,
            "minimum": 1,
            "type": "integer",
            "description": "The number of records to show on a single page",
            "format": "int32"
          },
          "pageIndex": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "Starting from 0",
            "format": "int32"
          },
          "sortExpressions": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Key: Column Name to Sort the result set\r\nValue: Only \"ASC\" or \"DESC\" accepted\r\nNot Started to use this property yet",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request for paging"
      },
      "PayPeriodShift": {
        "type": "object",
        "properties": {
          "shiftId": {
            "type": "integer",
            "format": "int32"
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "shiftStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "hours": {
            "type": "number",
            "format": "float"
          },
          "rate": {
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "PositionSkillLevel": {
        "required": [
          "skillId",
          "skillLevel"
        ],
        "type": "object",
        "properties": {
          "skillId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "SkillId",
            "format": "int32"
          },
          "skillLevel": {
            "maximum": 2,
            "minimum": 1,
            "type": "integer",
            "description": "SkillLevel, 0 - No Experience, 1 - Less Than 2 Yrs., 2 - More Than 2 Yrs.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PositionSkillModel": {
        "type": "object",
        "properties": {
          "skillPositionID": {
            "type": "integer",
            "format": "int32"
          },
          "skillID": {
            "type": "integer",
            "format": "int32"
          },
          "skillLevel": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PowerBIReportSettingResponse": {
        "type": "object",
        "properties": {
          "dashboardPageName": {
            "type": "string",
            "description": "which page will be dashboard",
            "nullable": true
          },
          "displayPageNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "page names which will be displayed.",
            "nullable": true
          },
          "systemIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "all system user could pull over",
            "nullable": true
          },
          "embedReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmbedReport"
            },
            "description": "Reports to be embedded",
            "nullable": true
          },
          "embedToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmbedToken"
              }
            ],
            "description": "Embed Token for the Power BI report",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of the Power BI report setting."
      },
      "ProfessionalContractOrder": {
        "type": "object",
        "properties": {
          "contractId": {
            "type": "integer",
            "format": "int32"
          },
          "shiftStatusID": {
            "type": "integer",
            "format": "int32"
          },
          "contractStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractStartBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractEndBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftTimeType": {
            "type": "string",
            "nullable": true
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "positionTypeName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProfessionalForwardLogItemResponse": {
        "type": "object",
        "properties": {
          "dateSent": {
            "type": "string",
            "format": "date-time"
          },
          "emails": {
            "type": "string",
            "nullable": true
          },
          "userFirstName": {
            "type": "string",
            "nullable": true
          },
          "userLastName": {
            "type": "string",
            "nullable": true
          },
          "agencyId": {
            "type": "integer",
            "format": "int32"
          },
          "systemId": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProfessionalShiftOrder": {
        "type": "object",
        "properties": {
          "shiftId": {
            "type": "integer",
            "format": "int32"
          },
          "shiftStatusID": {
            "type": "integer",
            "format": "int32"
          },
          "shiftStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftStartBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftEndBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "workHours": {
            "type": "number",
            "format": "float"
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "positionName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProgramSettingsByAgencyItem": {
        "type": "object",
        "properties": {
          "facilityId": {
            "type": "integer",
            "format": "int32"
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "programId": {
            "type": "integer",
            "format": "int32"
          },
          "programName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PublicCommentListItem": {
        "type": "object",
        "properties": {
          "publicCommentId": {
            "type": "integer",
            "format": "int32"
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "commentText": {
            "type": "string",
            "nullable": true
          },
          "datePosted": {
            "type": "string",
            "format": "date-time"
          },
          "postedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PublicToAgencyComment": {
        "type": "object",
        "properties": {
          "privateCommentId": {
            "type": "integer",
            "format": "int32"
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "commentText": {
            "type": "string",
            "nullable": true
          },
          "datePosted": {
            "type": "string",
            "format": "date-time"
          },
          "postedBy": {
            "type": "string",
            "nullable": true
          },
          "systemName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReOpenInvoicePeriodRequest": {
        "required": [
          "invoicePeriodId"
        ],
        "type": "object",
        "properties": {
          "invoicePeriodId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RegistryAgencyCommentItem": {
        "type": "object",
        "properties": {
          "registryAgencyCommentId": {
            "type": "integer",
            "description": "Primary key of RegistryAgencyComment",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "description": "First name of who posted this comment",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Last name of who posted this comment",
            "nullable": true
          },
          "postDate": {
            "type": "string",
            "description": "Datetime the comment was posted",
            "format": "date-time"
          },
          "commentSubject": {
            "type": "string",
            "description": "Subject of comment",
            "nullable": true
          },
          "commentText": {
            "type": "string",
            "description": "Content of comment",
            "nullable": true
          },
          "agencyName": {
            "type": "string",
            "description": "Agency name",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Item of registry agency comments"
      },
      "RegistryAgencyCommentListModel": {
        "type": "object",
        "properties": {
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegistryAgencyCommentModel"
            },
            "description": "Registry agency comments for current page.",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RegistryAgencyCommentModel": {
        "type": "object",
        "properties": {
          "registryAgencyCommentID": {
            "type": "integer",
            "format": "int32"
          },
          "registryAgencyCommentSubject": {
            "type": "string",
            "nullable": true
          },
          "registryAgencyCommentText": {
            "type": "string",
            "nullable": true
          },
          "registryAgencyCommentDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "registryAgencyCommentActive": {
            "type": "boolean"
          },
          "isPublic": {
            "type": "boolean"
          },
          "agencyName": {
            "type": "string",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegistryCommentListItem": {
        "type": "object",
        "properties": {
          "registryCommentId": {
            "type": "integer",
            "format": "int32"
          },
          "commentType": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "commentText": {
            "type": "string",
            "nullable": true
          },
          "datePosted": {
            "type": "string",
            "format": "date-time"
          },
          "postedByFirstName": {
            "type": "string",
            "nullable": true
          },
          "postedByLastName": {
            "type": "string",
            "nullable": true
          },
          "professionalFirstName": {
            "type": "string",
            "nullable": true
          },
          "professionalLastName": {
            "type": "string",
            "nullable": true
          },
          "attachmentName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegistryDocumentItemResponse": {
        "type": "object",
        "properties": {
          "registryDocumentID": {
            "type": "integer",
            "description": "RegistryDocumentID",
            "format": "int32"
          },
          "registryDocumentName": {
            "type": "string",
            "description": "RegistryDocumentName",
            "nullable": true
          },
          "registryCategoryName": {
            "type": "string",
            "description": "RegistryCategoryName",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "contract": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Contract",
            "nullable": true
          },
          "registryDocumentStartDate": {
            "type": "string",
            "description": "RegistryDocumentStartDate",
            "format": "date-time",
            "nullable": true
          },
          "registryDocumentEndDate": {
            "type": "string",
            "description": "RegistryDocumentEndDate",
            "format": "date-time",
            "nullable": true
          },
          "documentUploadedAt": {
            "type": "string",
            "description": "DocumentUploadedAt",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Registry Document Item Model"
      },
      "RegistryDocumentItemResponseList": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegistryDocumentItemResponse"
            },
            "description": "Agency Registry Documents for current page.",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Registry Document List Model"
      },
      "RegistryDocumentListItem": {
        "type": "object",
        "properties": {
          "registryDocumentID": {
            "type": "integer",
            "description": "RegistryDocumentID",
            "format": "int32"
          },
          "registryDocumentName": {
            "type": "string",
            "description": "RegistryDocumentName",
            "nullable": true
          },
          "registryCategoryName": {
            "type": "string",
            "description": "RegistryCategoryName",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "programs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Programs",
            "nullable": true
          },
          "regions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Regions",
            "nullable": true
          },
          "registryDocumentStartDate": {
            "type": "string",
            "description": "RegistryDocumentStartDate",
            "format": "date-time",
            "nullable": true
          },
          "registryDocumentEndDate": {
            "type": "string",
            "description": "RegistryDocumentEndDate",
            "format": "date-time",
            "nullable": true
          },
          "documentUploadedAt": {
            "type": "string",
            "description": "DocumentUploadedAt",
            "format": "date-time",
            "nullable": true
          },
          "createdByFirstName": {
            "type": "string",
            "description": "Created By",
            "nullable": true
          },
          "createdByLastName": {
            "type": "string",
            "description": "Created By",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "1: Active, 0: Not Active",
            "format": "int32"
          },
          "displayFor": {
            "type": "integer",
            "description": "1: All(Facilities and Agencies), 2: Facilities, 3: Agencies, 4: Registry, 5: Region",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Registry Document Item"
      },
      "RegistryFacilityCommentModel": {
        "type": "object",
        "properties": {
          "datePosted": {
            "type": "string",
            "format": "date-time"
          },
          "postedBy": {
            "type": "string",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "facilityID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "adminID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "adminName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegistryHospitalAdminUserItemResponse": {
        "type": "object",
        "properties": {
          "adminId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "systemId": {
            "type": "integer",
            "format": "int32"
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "adminIsSuperUser": {
            "type": "boolean"
          },
          "userFirstName": {
            "type": "string",
            "nullable": true
          },
          "userLastName": {
            "type": "string",
            "nullable": true
          },
          "userEmail": {
            "type": "string",
            "nullable": true
          },
          "userPhone": {
            "type": "string",
            "nullable": true
          },
          "userUserName": {
            "type": "string",
            "nullable": true
          },
          "userLastSignin": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "adminIsBillingContact": {
            "type": "boolean"
          },
          "adminIsPrimary": {
            "type": "boolean"
          },
          "userIsUnitManager": {
            "type": "boolean"
          },
          "userActive": {
            "type": "boolean"
          },
          "facilities": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SelectableItems"
              }
            ],
            "description": "The class the contains the list of B4Health.Dto.Response.SelectableItem.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegistryHospitalAdminUserStatsResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegistryHospitalAdminUserItemResponse"
            },
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          },
          "totalActive": {
            "type": "integer",
            "format": "int32"
          },
          "totalInactive": {
            "type": "integer",
            "format": "int32"
          },
          "totalAll": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RegistrySummaryStatisticsResponse": {
        "type": "object",
        "properties": {
          "totalProgram": {
            "type": "integer",
            "format": "int32"
          },
          "totalAlignedProgramAgency": {
            "type": "integer",
            "format": "int32"
          },
          "totalAlignedProgramFacility": {
            "type": "integer",
            "format": "int32"
          },
          "totalActiveHealthSystem": {
            "type": "integer",
            "format": "int32"
          },
          "totalInactiveHealthSystem": {
            "type": "integer",
            "format": "int32"
          },
          "healthSystemsOrderWithinThreeMonths": {
            "type": "integer",
            "format": "int32"
          },
          "totalActiveFacilities": {
            "type": "integer",
            "format": "int32"
          },
          "totalInactiveFacilities": {
            "type": "integer",
            "format": "int32"
          },
          "facilitiesOrderWithinThreeMonths": {
            "type": "integer",
            "format": "int32"
          },
          "totalAgencies": {
            "type": "integer",
            "format": "int32"
          },
          "totalAgenciesOrderWithinThreeMonths": {
            "type": "integer",
            "format": "int32"
          },
          "totalAgencyContact": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RegistryUserItemDetailedReponse": {
        "type": "object",
        "properties": {
          "registryID": {
            "type": "integer",
            "format": "int32"
          },
          "userID": {
            "type": "integer",
            "format": "int32"
          },
          "userFirstName": {
            "type": "string",
            "nullable": true
          },
          "userLastName": {
            "type": "string",
            "nullable": true
          },
          "userEmail": {
            "type": "string",
            "nullable": true
          },
          "userUsername": {
            "type": "string",
            "nullable": true
          },
          "userActive": {
            "type": "boolean"
          },
          "recieveQAEmail": {
            "type": "boolean"
          },
          "recieveMonthlyUsage": {
            "type": "boolean"
          },
          "recieveAgencyInsuranceLicence": {
            "type": "boolean"
          },
          "recieveExpiringContracts": {
            "type": "boolean"
          },
          "receiveAgencyNurseVerifications": {
            "type": "boolean"
          },
          "recieveCredentialNotification": {
            "type": "boolean"
          },
          "editRegistryUserAccounts": {
            "type": "boolean"
          },
          "allowCredentialView": {
            "type": "boolean"
          },
          "notifyOnContractDateUpdates": {
            "type": "boolean"
          },
          "receiveUnfilledNotify": {
            "type": "boolean"
          },
          "receiveAllShiftRelatedMessages": {
            "type": "boolean"
          },
          "notifyOnAgencyNurseCreation": {
            "type": "boolean"
          },
          "notifyOnUserInactivation": {
            "type": "boolean"
          },
          "notifyOnUserCreation": {
            "type": "boolean"
          },
          "notifyOnUnitCreation": {
            "type": "boolean"
          },
          "allowReverseInvoice": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RegistryUserItemResponse": {
        "type": "object",
        "properties": {
          "registryID": {
            "type": "integer",
            "format": "int32"
          },
          "userID": {
            "type": "integer",
            "format": "int32"
          },
          "userFirstName": {
            "type": "string",
            "nullable": true
          },
          "userLastName": {
            "type": "string",
            "nullable": true
          },
          "userEmail": {
            "type": "string",
            "nullable": true
          },
          "userUsername": {
            "type": "string",
            "nullable": true
          },
          "userActive": {
            "type": "boolean"
          },
          "recieveQAEmail": {
            "type": "boolean"
          },
          "recieveMonthlyUsage": {
            "type": "boolean"
          },
          "recieveAgencyInsuranceLicence": {
            "type": "boolean"
          },
          "recieveExpiringContracts": {
            "type": "boolean"
          },
          "receiveAgencyNurseVerifications": {
            "type": "boolean"
          },
          "recieveCredentialNotification": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RejectNurseCredentialRequest": {
        "required": [
          "nurseCredentialId"
        ],
        "type": "object",
        "properties": {
          "nurseCredentialId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "comments": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RejectNurseCredentialResponse": {
        "type": "object",
        "properties": {
          "rejected": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RemoveFromWatchListModel": {
        "type": "object",
        "properties": {
          "removed": {
            "type": "boolean",
            "description": "Set to true if shift(s) is successfully removed from watch list"
          }
        },
        "additionalProperties": false,
        "description": "Response of RemoveFromWatchList"
      },
      "RemoveFromWatchListParam": {
        "required": [
          "shiftIds"
        ],
        "type": "object",
        "properties": {
          "shiftIds": {
            "maxItems": 200,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "additionalProperties": false,
        "description": "Request for RemoveFromWatchList"
      },
      "RenewAccessTokenModel": {
        "type": "object",
        "properties": {
          "tokenExpiration": {
            "type": "string",
            "description": "Expiration Date renewed",
            "format": "date-time"
          },
          "accessToken": {
            "type": "string",
            "description": "Access Token renewed",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of RenewAccessTokenModel"
      },
      "ReplyMessageModel": {
        "type": "object",
        "properties": {
          "replied": {
            "type": "boolean",
            "description": "Set to true if message is successfully replied"
          }
        },
        "additionalProperties": false,
        "description": "Response of ReplyMessage"
      },
      "ReplyMessageParam": {
        "required": [
          "messageBody",
          "messageId",
          "messageSubject"
        ],
        "type": "object",
        "properties": {
          "messageId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "messageSubject": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string"
          },
          "messageBody": {
            "minLength": 1,
            "type": "string"
          },
          "includeSender": {
            "type": "boolean",
            "description": "Set it to false for now"
          }
        },
        "additionalProperties": false,
        "description": "Request for ReplyMessage"
      },
      "RequestLog": {
        "type": "object",
        "properties": {
          "shiftId": {
            "type": "integer",
            "format": "int32"
          },
          "bidId": {
            "type": "integer",
            "format": "int32"
          },
          "action": {
            "type": "string",
            "nullable": true
          },
          "actionDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestTimeOff": {
        "type": "object",
        "properties": {
          "nurseRtoId": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "requestDate": {
            "type": "string",
            "format": "date-time"
          },
          "requestReason": {
            "type": "string",
            "nullable": true
          },
          "createdby": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedby": {
            "type": "string",
            "nullable": true
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequiredCredentialsItemResponse": {
        "type": "object",
        "properties": {
          "requiredCredentialId": {
            "type": "integer",
            "format": "int32"
          },
          "credentialName": {
            "type": "string",
            "nullable": true
          },
          "systemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "facilityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "positionTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "positionTypeName": {
            "type": "string",
            "nullable": true
          },
          "careTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "programId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "programName": {
            "type": "string",
            "nullable": true
          },
          "requiredExpirationDate": {
            "type": "boolean"
          },
          "allowWaived": {
            "type": "boolean"
          },
          "batchUuid": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequisitionApprovalModel": {
        "type": "object",
        "properties": {
          "requisitionApprovalID": {
            "type": "integer",
            "format": "int32"
          },
          "approvedAdminID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "declinedAdminID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userFirstName": {
            "type": "string",
            "nullable": true
          },
          "userLastName": {
            "type": "string",
            "nullable": true
          },
          "dateApprovedOn": {
            "type": "string",
            "format": "date-time"
          },
          "comments": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequisitionModel": {
        "type": "object",
        "properties": {
          "requisitionID": {
            "type": "integer",
            "description": "Requisition ID",
            "format": "int32"
          },
          "facility": {
            "type": "string",
            "description": "Requisition Facility Name",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "description": "Requisition Unit Name",
            "nullable": true
          },
          "positionType": {
            "type": "string",
            "description": "Requisition Position Type",
            "nullable": true
          },
          "careType": {
            "type": "string",
            "description": "Requisition Care Type",
            "nullable": true
          },
          "requisitionReasonID": {
            "type": "integer",
            "description": "Requisition Reason ID",
            "format": "int32"
          },
          "requisitionReason": {
            "type": "string",
            "description": "Requisition Reason",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Requisition Start Date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "Requisition End Date",
            "format": "date-time"
          },
          "dateCreated": {
            "type": "string",
            "description": "Requisition Date Created",
            "format": "date-time"
          },
          "dateRange": {
            "type": "string",
            "description": "Requisition Date Range",
            "nullable": true
          },
          "numberOfPositions": {
            "type": "integer",
            "description": "Requisition Number of Positions",
            "format": "int32"
          },
          "programName": {
            "type": "string",
            "description": "Requisition Program Name",
            "nullable": true
          },
          "timeType": {
            "type": "string",
            "description": "Requisition Shift Time Type",
            "nullable": true
          },
          "currentStageID": {
            "type": "string",
            "description": "Requisition Current State ID",
            "nullable": true
          },
          "currentStage": {
            "type": "string",
            "description": "Requisition Current State",
            "nullable": true
          },
          "contractIDs": {
            "type": "string",
            "description": "Requisition Contract Assignment IDs",
            "nullable": true
          },
          "statusID": {
            "type": "integer",
            "description": "Requisition Status ID",
            "format": "int32"
          },
          "declinedBy": {
            "type": "string",
            "description": "Requisition Declined By",
            "nullable": true
          },
          "converted": {
            "type": "boolean",
            "description": "Requisition Converted"
          },
          "parentContractID": {
            "type": "integer",
            "description": "Requisition Parent Contract ID",
            "format": "int32"
          },
          "currentLevel": {
            "type": "integer",
            "description": "Requisition Current Level",
            "format": "int32"
          },
          "nextLevel": {
            "type": "boolean",
            "description": "Requisition Next Level"
          },
          "nextLevelApprovers": {
            "type": "string",
            "description": "Requisition Next Level Approvers",
            "nullable": true
          },
          "requestedBy": {
            "type": "string",
            "description": "Requisition Requested By",
            "nullable": true
          },
          "extension": {
            "type": "string",
            "description": "Requisition Extension",
            "nullable": true
          },
          "receivedApprover": {
            "type": "string",
            "description": "Requisition Received Approver",
            "nullable": true
          },
          "requisitionComment": {
            "type": "string",
            "description": "Requisition Requisition Comment",
            "nullable": true
          },
          "showApproveDeclineCurrentLevel": {
            "type": "boolean",
            "description": "Requisition Flag to Show Approve/Decline Current Level"
          },
          "showApproveDeclineNextLevel": {
            "type": "boolean",
            "description": "Requisition Flag to Show Approve/Decline Next level"
          },
          "showEditButton": {
            "type": "boolean",
            "description": "Requisition Flag to Show Edit button in each row"
          }
        },
        "additionalProperties": false,
        "description": "Response Requisition Model"
      },
      "RequisitionSettingLevelAdminItem": {
        "type": "object",
        "properties": {
          "requisitionSettingLevelAdminId": {
            "type": "integer",
            "format": "int32"
          },
          "adminId": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequisitionSettingLevelItem": {
        "type": "object",
        "properties": {
          "requisitionSettingLevelId": {
            "type": "integer",
            "format": "int32"
          },
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "active": {
            "type": "boolean"
          },
          "admins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequisitionSettingLevelAdminItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordModel": {
        "type": "object",
        "properties": {
          "passwordReset": {
            "type": "boolean",
            "description": "Indicates if password has been set successfully"
          },
          "failedReasons": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Why password is not set successfully, make sense only when PasswordReset is false",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response for ResetPasswordModel"
      },
      "ResetPasswordParam": {
        "required": [
          "confirmPassword",
          "password",
          "passwordToken",
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "password": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Encrypt it before sending"
          },
          "confirmPassword": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Encrypt it before sending"
          },
          "passwordToken": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "Request for resetting password"
      },
      "SaveAccountManagerModel": {
        "type": "object",
        "properties": {
          "accountManagerSaved": {
            "type": "boolean",
            "description": "AccountManagerSaved will indicate if successfully save (True) or not."
          }
        },
        "additionalProperties": false,
        "description": "Response of SaveAccountManager"
      },
      "SaveAccountManagerParam": {
        "required": [
          "nurseId"
        ],
        "type": "object",
        "properties": {
          "nurseId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Nurse Id of professional.",
            "format": "int32"
          },
          "agencyContactId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "AgencyContactId of account manager",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request for SaveAccountManager"
      },
      "SaveAdminFacilitiesRequest": {
        "required": [
          "adminId"
        ],
        "type": "object",
        "properties": {
          "adminId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "facilities": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Readonly if current logged-in Admin User is not super user and editing their own profile.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaveAdminFacilitiesResponse": {
        "type": "object",
        "properties": {
          "saved": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SaveAdminMessageReceiversRequest": {
        "required": [
          "adminId"
        ],
        "type": "object",
        "properties": {
          "adminId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "additionalMessageReceivers": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "<strong>Additional Message Receivers:</strong> You may select other Administrators to also receive your message notifications.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaveAdminMessageReceiversResponse": {
        "type": "object",
        "properties": {
          "saved": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SaveAgencyDocumentResponse": {
        "type": "object",
        "properties": {
          "saved": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SaveAgencyInsuranceDocumentResponse": {
        "type": "object",
        "properties": {
          "agencyInsuranceDocumentID": {
            "type": "integer",
            "description": "It means insurance document being saved successfully when AgencyInsuranceDocumentID is greater than 0",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Facility Document Item Response List"
      },
      "SaveAgencyLicenseResponse": {
        "type": "object",
        "properties": {
          "agencyLicenseDocumentId": {
            "type": "integer",
            "description": "It means license document being saved successfully when AgencyLicenseDocumentId is greater than 0",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of SaveAgencyLicense"
      },
      "SaveAgencyNurseSystemCredentialResponse": {
        "type": "object",
        "properties": {
          "agencyNurseSystemCredentialId": {
            "type": "integer",
            "description": "When AgencyNurseSystemCredentialId is greater than 0 it means Agency Nurse System Credential is successfully updated/uploaded.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of SaveAgencyNurseSystemCredential"
      },
      "SaveAgencyNurseUsernameRequest": {
        "required": [
          "newUsername"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "agencyId": {
            "type": "integer",
            "format": "int32"
          },
          "newUsername": {
            "maxLength": 32,
            "minLength": 3,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SaveAllowAccessPositionTypesRequest": {
        "required": [
          "agencyId",
          "selectedPositionTypes"
        ],
        "type": "object",
        "properties": {
          "agencyId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "selectedPositionTypes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "additionalProperties": false
      },
      "SaveAllowAccessPositionTypesResponse": {
        "type": "object",
        "properties": {
          "saved": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SaveAvailabilityRequest": {
        "required": [
          "hours",
          "minutes",
          "startDateTime"
        ],
        "type": "object",
        "properties": {
          "eventId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "EventId, pass EventId when updating an existing record, pass null when creating a new one",
            "format": "int32",
            "nullable": true
          },
          "updateOption": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Constants_EventOption"
              }
            ],
            "description": "Options to update event(s), provide user this option only when EventId has a value and repeatId of the event has a value, otherwise provide user repeating options\r\nThisOccurrenceOnly = 1, ThisAndFutureOccurrences = 2, AllOccurrences = 3",
            "nullable": true
          },
          "userId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "UserId of professional, it is required when agency create/edit availability, while it should be null when professional create/edit availability",
            "format": "int32",
            "nullable": true
          },
          "startDateTime": {
            "type": "string",
            "description": "StartDateTime",
            "format": "date-time"
          },
          "hours": {
            "maximum": 23,
            "minimum": 0,
            "type": "integer",
            "description": "Hours",
            "format": "int32"
          },
          "minutes": {
            "maximum": 59,
            "minimum": 0,
            "type": "integer",
            "description": "Minutes",
            "format": "int32"
          },
          "repeatOption1": {
            "maximum": 4,
            "minimum": 1,
            "type": "integer",
            "description": "Repeat Every(1)/Every other(2)/Every third(3)/Every fourth(4)",
            "format": "int32",
            "nullable": true
          },
          "repeatOption2": {
            "maximum": 9,
            "minimum": 1,
            "type": "integer",
            "description": "Repeat day(1)/week(2)/month(3)/Mon, Wed & Fri(5)/Tues & Thurs(6)/Mon & Wed(7)/Mon through Fri(8)/Sat & Sun(9), required when RepeatOption1 is not null",
            "format": "int32",
            "nullable": true
          },
          "repeatOnOption1": {
            "maximum": 4,
            "minimum": 1,
            "type": "integer",
            "description": "Repeat on first(1)/second(2)/third(3)/fourth(4)/last(5)",
            "format": "int32",
            "nullable": true
          },
          "repeatOnOption2": {
            "maximum": 9,
            "minimum": 1,
            "type": "integer",
            "description": "Repeat on Sunday(1)/Monday(2)/Tuesday(3)/Wednesday(4)/Thursday(5)/Friday(6)/Saturday(7) of every month, required when RepeatOnOption1 is not null",
            "format": "int32",
            "nullable": true
          },
          "repeatUntil": {
            "type": "string",
            "description": "RepeatUntil, required when RepeatOption1 is not null or RepeatOnOption1 is not null",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request of SaveAvailability"
      },
      "SaveAvailabilityResponse": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "integer",
            "description": "EventId, it means that availability gets saved successfully when EventId is greater than 0",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of SaveAvailability"
      },
      "SaveCommentModel": {
        "type": "object",
        "properties": {
          "commentID": {
            "type": "integer",
            "format": "int32"
          },
          "saveStatus": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SaveContractBatchRequest": {
        "required": [
          "batchName",
          "numberOfContracts",
          "positionTypeId"
        ],
        "type": "object",
        "properties": {
          "batchID": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "Batch ID",
            "format": "int32",
            "nullable": true
          },
          "batchName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Batch Name"
          },
          "positionTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Position Type ID",
            "format": "int32"
          },
          "numberOfContracts": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Number of Contracts",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SaveContractBatchResponse": {
        "type": "object",
        "properties": {
          "contactAssignmentBatchID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SaveCustomConfigRequest": {
        "required": [
          "systemId"
        ],
        "type": "object",
        "properties": {
          "masterCustomSettingIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "systemId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SaveFAQResponse": {
        "type": "object",
        "properties": {
          "faqId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SaveFacilityAgencyDocumentResponse": {
        "type": "object",
        "properties": {
          "facilityAgencyDocumentId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SaveFacilityDocumentResponse": {
        "type": "object",
        "properties": {
          "facilityDocumentId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SaveFacilityRequest": {
        "required": [
          "defaultShiftBreakTime",
          "facilityName",
          "regionId",
          "state"
        ],
        "type": "object",
        "properties": {
          "facilityId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Pass null when creating a new facility, pass FacilityId when updating an existing facility",
            "format": "int32",
            "nullable": true
          },
          "regionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Region",
            "format": "int32"
          },
          "timeZoneId": {
            "type": "integer",
            "description": "Visible only when updating an existing facility",
            "format": "int32",
            "nullable": true
          },
          "facilityName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "FacilityName"
          },
          "facilityAbbrv": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "Visible for JHU only",
            "nullable": true
          },
          "address": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Address",
            "nullable": true
          },
          "address2": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Address2",
            "nullable": true
          },
          "city": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "City",
            "nullable": true
          },
          "state": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string",
            "description": "State"
          },
          "country": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "Country",
            "nullable": true
          },
          "zipCode": {
            "maxLength": 10,
            "minLength": 0,
            "pattern": "^(\\d{5}-\\d{4}|\\d{5})$",
            "type": "string",
            "description": "ZipCode",
            "nullable": true
          },
          "phone": {
            "maxLength": 12,
            "minLength": 0,
            "pattern": "^\\d{3}[\\-]\\d{3}[\\-]\\d{4}",
            "type": "string",
            "description": "Phone",
            "nullable": true
          },
          "phoneExt": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "description": "PhoneExt",
            "nullable": true
          },
          "fax": {
            "maxLength": 12,
            "minLength": 0,
            "pattern": "(^([1])?\\s*(\\(\\d{3}\\))?\\s*\\d{3}[\\-\\s]?\\d{4}$)|(^\\+?\\d([\\d\\-\\.]){7,20})",
            "type": "string",
            "description": "Fax",
            "nullable": true
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Email",
            "format": "email",
            "nullable": true
          },
          "billingRemitMessage": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "Visible only when system does not have HOSP_ADMIN_SYSTEMWIDE_VMS_BILLING(59), and system or app version has CONSOLIDATED_INVOICING(110)",
            "nullable": true
          },
          "billingAddress": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "Visible only for system GHR_UNIVERSITY_OF_PENNSYLVANIA(483)",
            "nullable": true
          },
          "poNumber": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "Visible only when system or app version has CONSOLIDATED_INVOICING(110)",
            "nullable": true
          },
          "integrationKey": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Visible only when it is Impersonation Session",
            "nullable": true
          },
          "timeAttendanceIntegrationKey": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Visible only when it is Impersonation Session",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "Facility Active"
          },
          "defaultShiftBreakTime": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "Default Shift Break Time",
            "format": "int32"
          },
          "approvalDayOfWeek": {
            "type": "integer",
            "description": "Visible only when system has UNIT_MANAGER_EMAIL_APPROVAL(152)",
            "format": "int32",
            "nullable": true
          },
          "approvalTimeOfDay": {
            "type": "string",
            "description": "Visible only when system has UNIT_MANAGER_EMAIL_APPROVAL(152), will only save hour and minute",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request of SaveFacility"
      },
      "SaveFacilityResponse": {
        "type": "object",
        "properties": {
          "facilityId": {
            "type": "integer",
            "description": "Facility is created/updated successfully when FacilityId is greater than 0",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of SaveFacility"
      },
      "SaveHospitalAdminProfileRequest": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "adminId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "facilities": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Readonly if current logged-in Admin User is not super user and editing their own profile.",
            "nullable": true
          },
          "jobTitle": {
            "type": "string",
            "description": "Invisible for JHU.",
            "nullable": true
          },
          "jobFunctionId": {
            "type": "integer",
            "description": "For JHU only.",
            "format": "int32",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "Readonly for non-registry version when editing the admin's profile.",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Readonly for non-registry version when editing the admin's profile.",
            "nullable": true
          },
          "username": {
            "type": "string",
            "description": "Add mode: Visible only if system has setting HOSPADMIN_EDIT_USERNAME(15).\r\n\r\nAdd/Edit mode: Enabled only if system has setting HOSPADMIN_EDIT_USERNAME(15).",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "description": "Invisible when updating an admin or system has setting HOSPADMIN_EDIT_USERNAME(15).",
            "format": "date-time",
            "nullable": true
          },
          "phone": {
            "maxLength": 12,
            "minLength": 0,
            "pattern": "^\\d{3}[\\-]\\d{3}[\\-]\\d{4}",
            "type": "string",
            "nullable": true
          },
          "phoneExt": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "maxLength": 12,
            "minLength": 0,
            "pattern": "^\\d{3}[\\-]\\d{3}[\\-]\\d{4}",
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "additionalMessageReceivers": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "<strong>Additional Message Receivers:</strong> You may select other Administrators to also receive your message notifications.",
            "nullable": true
          },
          "subRoles": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Invisible if admin.AdminIsSuperUser is true or SystemEnablePermissionFramework is false.",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Permissions - Modify Shifts/Contract Assignments\r\n\r\nVisible only for registry version and admin.AdminIsSuperUser is false.\r\n\r\nReadonly if current logged-in Admin User is not super user and editing their own profile.",
            "nullable": true
          },
          "programCategoryId": {
            "type": "integer",
            "description": "Registry version only.",
            "format": "int32",
            "nullable": true
          },
          "sendEmail": {
            "type": "boolean",
            "description": "Send Messages to Email."
          },
          "isBillingContact": {
            "type": "boolean",
            "description": "Readonly if current logged-in Admin User is not super user and editing their own profile."
          },
          "receiveInvoiceInEmail": {
            "type": "boolean",
            "description": "Registry version only."
          },
          "agencyNurseCredentialValidation": {
            "type": "boolean",
            "description": "Agency Nurse Credential Validation?\r\n\r\nFor JHU, or system/app version has APPVERSION_VALIDATE_CREDENTIALS(126)."
          },
          "receiveAgencyNurseExpiringCredentials": {
            "type": "boolean",
            "description": "Receive Agency Expiring Credential Notifications?\r\n\r\nAlways visible for non-registry version.\r\nFor registry version, visible only when system/app version has AGENCY_NURSE_CREDENTIAL(272)."
          },
          "receiveAgencyNurseSystemCredentials": {
            "type": "boolean",
            "description": "Receive System Expiring Credential Notifications?\r\n\r\nVisible only when system/app version has AGENCY_NURSE_SYSTEM_CREDENTIAL(136)."
          },
          "receiveNewContractNotifications": {
            "type": "boolean",
            "description": "Receive New Contract Notifications?\r\n\r\nVisible only when system has HOSPADMIN_NEW_CONTRACT_NOTIFICATION(206)."
          },
          "receiveAwardOfferNotifications": {
            "type": "boolean",
            "description": "Receive Award Offer Notifications?\r\n\r\nVisible only when system has HOSPADMIN_AWARD_OFFER_CONTRACT_NOTIFICATION(207)."
          },
          "recieveExpiringContracts": {
            "type": "boolean",
            "description": "Receive Expiring Contracts Notifications?\r\n\r\nFor GHR(17) only."
          },
          "receiveSubmission": {
            "type": "boolean",
            "description": "Receive Submission Notification?\r\n\r\nVisible only when system has HOSPADMIN_CONTRACT_SUBMISSION_NOTIFICATION(302)."
          },
          "receiveContractUpdateNotificaiton": {
            "type": "boolean",
            "description": "Receive Contract Update Notifications?\r\n\r\nVisible only when system has CONTRACT_UPDATE_NOTIFICATE(323)."
          },
          "receivePerformanceEvaluationCompleteNotification": {
            "type": "boolean",
            "description": "Receive Performance Evaluation Complete Notification?\r\n\r\nFor GHR(17) and Impersonation Session."
          },
          "receiveShiftUrgentNeedNotification": {
            "type": "boolean",
            "description": "Receive Shift Urgent Need Notification?\r\n\r\nFor AMN(36) only."
          },
          "allowApproveTimeCard": {
            "type": "boolean",
            "description": "Allow Approve Time Card?\r\n\r\nFor ICON(34) only."
          },
          "requisitionApprover": {
            "type": "boolean",
            "description": "Requsition Approver?\r\n\r\nVisible only when system has CUSTOM_REQUISITION_APPROVAL_FLOW(293)."
          },
          "isSuperUser": {
            "type": "boolean",
            "description": "Is Super User?\r\n\r\nReadonly if admin.AdminIsPrimary is true, or current logged-in Admin User is not super user and editing their own profile."
          },
          "receiveTimeCardApproval": {
            "type": "boolean",
            "description": "Receive Time Card Approval?\r\n\r\nFor non-registry version, always visible.\r\n\r\nFor registry version, visible only when system has ADMIN_RECEIVE_TIME_CARD(183)."
          },
          "isOAUserRole": {
            "type": "boolean",
            "description": "OA User Role?\r\n\r\nVisible only when system has REPORTS_OA(34)."
          },
          "isAccountsPayable": {
            "type": "boolean",
            "description": "Is Accounts Payable?\r\n\r\nVisible only when system has INVOICE_PROCESS_FLAG(142).\r\n\r\nReadonly if current logged-in Admin User is not super user and editing their own profile."
          },
          "active": {
            "type": "boolean",
            "description": "Readonly if current logged-in Admin User is not super user and editing their own profile."
          }
        },
        "additionalProperties": false
      },
      "SaveHospitalAdminProfileResponse": {
        "type": "object",
        "properties": {
          "saved": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SaveHospitalContractRequest": {
        "required": [
          "contractEndBidTime",
          "contractEndDate",
          "contractStartBidTime",
          "contractStartDate",
          "positionTypeId",
          "programId",
          "shiftTimeTypeId",
          "unitId"
        ],
        "type": "object",
        "properties": {
          "contractAssignmentId": {
            "type": "integer",
            "format": "int32"
          },
          "contractAssignmentBatchId": {
            "type": "integer",
            "format": "int32"
          },
          "batchContractActionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BatchContractActionType"
              }
            ]
          },
          "batchContractAssignmentIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "programId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "facilityId": {
            "type": "integer",
            "format": "int32"
          },
          "facilities": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "unitId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "positionTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "shiftTimeTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "numberOfWeeks": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contractStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "contractEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "dateRequested": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "contractStartBidTime": {
            "type": "string",
            "format": "date-time"
          },
          "contractEndBidTime": {
            "type": "string",
            "format": "date-time"
          },
          "bonusRate": {
            "type": "number",
            "format": "double"
          },
          "isCharge": {
            "type": "boolean"
          },
          "isDailyRate": {
            "type": "boolean"
          },
          "secondaryPositionTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isBypassTiering": {
            "type": "boolean"
          },
          "isContractSpecialty": {
            "type": "boolean"
          },
          "offerDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "complianceClearedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "phase2StartBidDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "phase2MaximumBid": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isPhase2RestrictPostionType": {
            "type": "boolean"
          },
          "isPhase2AllowAgency": {
            "type": "boolean"
          },
          "hoursPerWeek": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "careTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isGuaranteedHours": {
            "type": "boolean"
          },
          "isDesiredRate": {
            "type": "boolean"
          },
          "systemPreLoadRateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registryPreLoadRateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "desiredRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isPhase1PositionType": {
            "type": "boolean"
          },
          "isPhase1AllowAgency": {
            "type": "boolean"
          },
          "isPhase1AllowInternal": {
            "type": "boolean"
          },
          "phase1RestrictionType": {
            "maximum": 3,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "privateComments": {
            "type": "string",
            "nullable": true
          },
          "serviceFeeRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isHoldBackByHourlyRate": {
            "type": "boolean"
          },
          "holdBackFeeRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "holdBackRateDifferential": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "thirdPartyId": {
            "type": "string",
            "nullable": true
          },
          "pcn": {
            "type": "string",
            "nullable": true
          },
          "accountManagerAdminId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "assignmentManagerEmail": {
            "type": "string",
            "nullable": true
          },
          "assignmentManagerPhone": {
            "type": "string",
            "nullable": true
          },
          "hiringManager": {
            "type": "string",
            "nullable": true
          },
          "timeSheetApprover": {
            "type": "string",
            "nullable": true
          },
          "contractReasonId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contractUpdateReasonId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pod": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "integrationKey": {
            "type": "string",
            "nullable": true
          },
          "pocId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "copiedFromContractId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customerReference": {
            "type": "string",
            "nullable": true
          },
          "customerReference2": {
            "type": "string",
            "nullable": true
          },
          "rateDifferentialReason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContractRateDifferentialReason"
              }
            ],
            "nullable": true
          },
          "isCustomPayRate": {
            "type": "boolean"
          },
          "customPayRate": {
            "maximum": 1000000000,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "systemPreLoadPayRateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "accountId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taskId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "assignmentManager": {
            "type": "string",
            "nullable": true
          },
          "patientFirstName": {
            "type": "string",
            "nullable": true
          },
          "patientLastName": {
            "type": "string",
            "nullable": true
          },
          "lawsonRequisitionNo": {
            "type": "string",
            "nullable": true
          },
          "isTempToHire": {
            "type": "boolean"
          },
          "requisitionReasonId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "interviewServiceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "floatingRequirementFacilities": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "agencies": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "billingGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "contractAssignmentType": {
            "type": "integer",
            "format": "int32"
          },
          "jobNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaveHospitalContractResponse": {
        "type": "object",
        "properties": {
          "contractId": {
            "type": "integer",
            "format": "int32"
          },
          "subContractIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaveHospitalRequisitionRequest": {
        "required": [
          "contractEndDate",
          "contractStartDate",
          "facilityId",
          "hoursPerWeek",
          "positionTypeId",
          "programId",
          "shiftTimeTypeId",
          "unitId"
        ],
        "type": "object",
        "properties": {
          "requisitionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "facilityId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "unitId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "positionTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "jobCode": {
            "type": "string",
            "nullable": true
          },
          "careTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "requestedByEmail": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "requestedByPhone": {
            "maxLength": 12,
            "minLength": 0,
            "pattern": "^\\d{3}[\\-]\\d{3}[\\-]\\d{4}",
            "type": "string",
            "nullable": true
          },
          "requestedByPager": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "profilesByEmail": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "profilesByPhone": {
            "maxLength": 12,
            "minLength": 0,
            "pattern": "^\\d{3}[\\-]\\d{3}[\\-]\\d{4}",
            "type": "string",
            "nullable": true
          },
          "profilesByPager": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "accountManagerAdminId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "requisitionReasonId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hiringManager": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "timeSheetApprover": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "contractStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "contractEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "shiftTimeTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "isOncall": {
            "type": "boolean"
          },
          "isWeekends": {
            "type": "boolean"
          },
          "alternating": {
            "type": "string",
            "nullable": true
          },
          "numberOfPositions": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isRotating": {
            "type": "boolean"
          },
          "isRewable": {
            "type": "boolean"
          },
          "bonus": {
            "minimum": 1,
            "type": "number",
            "format": "double"
          },
          "isNotAvailableFloatPool": {
            "type": "boolean",
            "nullable": true
          },
          "numberOfWeeks": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "positionControlNumber": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "programId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "isReceivedApproval": {
            "type": "boolean"
          },
          "requisitionFileType": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "receivedApprover": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "hoursPerWeek": {
            "minimum": 1,
            "type": "number",
            "format": "double"
          },
          "requisitionNo": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isTempToHire": {
            "type": "boolean"
          },
          "poc": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isUseCustomRate": {
            "type": "boolean"
          },
          "customRate": {
            "maximum": 9999999,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "systemPreLoadRateId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registryPreLoadRateId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "privateComments": {
            "type": "string",
            "nullable": true
          },
          "nextLevelApprovers": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "floatingRequirements": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaveInvoicePeriodRequest": {
        "required": [
          "endDate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "facilityId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "billingGroupId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "noOfRepeat": {
            "maximum": 20,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SaveMultiShiftsRequest": {
        "type": "object",
        "properties": {
          "shifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MultiShift"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaveMultiShiftsResponse": {
        "type": "object",
        "properties": {
          "savedShifts": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SavePersonalInformationRequest": {
        "required": [
          "birthDate",
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "nurseId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Nurse id.",
            "format": "int32",
            "nullable": true
          },
          "confirm": {
            "type": "boolean",
            "description": "Confirm."
          },
          "title": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Title.",
            "nullable": true
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "FirstName."
          },
          "middleName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "MiddleName.",
            "nullable": true
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "LastName."
          },
          "nickName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "NickName.",
            "nullable": true
          },
          "nurseSSN": {
            "maxLength": 11,
            "minLength": 0,
            "pattern": "^(\\d{3}[-]?\\d{2}[-]?\\d{4}|\\d{4})$",
            "type": "string",
            "description": "NurseSSN",
            "nullable": true
          },
          "username": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "UserName.",
            "nullable": true
          },
          "address": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Address.",
            "nullable": true
          },
          "address2": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Address2.",
            "nullable": true
          },
          "city": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "City.",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "State.",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "Country.",
            "nullable": true
          },
          "zipCode": {
            "maxLength": 10,
            "minLength": 0,
            "pattern": "^(\\d{5}-\\d{4}|\\d{5})$",
            "type": "string",
            "description": "ZipCode.",
            "nullable": true
          },
          "homePhone": {
            "maxLength": 12,
            "minLength": 0,
            "pattern": "^\\d{3}[\\-]\\d{3}[\\-]\\d{4}",
            "type": "string",
            "description": "HomePhone.",
            "nullable": true
          },
          "mobilePhone": {
            "maxLength": 12,
            "minLength": 0,
            "pattern": "^\\d{3}[\\-]\\d{3}[\\-]\\d{4}",
            "type": "string",
            "description": "MobilePhone.",
            "nullable": true
          },
          "receiveTextMessages": {
            "type": "boolean",
            "description": "ReceiveTextMessages."
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$",
            "type": "string",
            "description": "Email.",
            "nullable": true
          },
          "sendMessages": {
            "type": "boolean",
            "description": "SendMessages."
          },
          "secondaryEmail": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$",
            "type": "string",
            "description": "SecondaryEmail.",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "description": "BirthDate.",
            "format": "date-time"
          },
          "targetRecruitID": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "TargetRecruitID.",
            "nullable": true
          },
          "recruiter": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Recruiter.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SavePersonalInformationResponse": {
        "type": "object",
        "properties": {
          "nurseID": {
            "type": "integer",
            "format": "int32"
          },
          "matchingUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MatchingUserModel"
            },
            "nullable": true
          },
          "potentialMatchingUsers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PagedPotentialMatchingUserModel"
              }
            ],
            "nullable": true
          },
          "matchingNurseID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "allowAgencyNuresBid": {
            "type": "boolean",
            "description": "AllowAgencyNuresBid, based on this flag we can show or hide checkboxes 'Allow to Search/Submit on Shifts?' and 'Allow to Search/Submit on Contracts?'"
          }
        },
        "additionalProperties": false
      },
      "SavePositionRequest": {
        "required": [
          "positionName",
          "positionTypeId",
          "unitId"
        ],
        "type": "object",
        "properties": {
          "positionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Pass null when creating a new Position, pass PositionId when updating an existing position",
            "format": "int32",
            "nullable": true
          },
          "unitId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Unit Id",
            "format": "int32"
          },
          "positionTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Position Type Id",
            "format": "int32"
          },
          "careTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Care Type Id",
            "format": "int32",
            "nullable": true
          },
          "positionName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Position Name"
          },
          "positionCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Position Code",
            "nullable": true
          },
          "positionActive": {
            "type": "boolean",
            "description": "Position Active"
          },
          "skillGroupId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Skill Group Id",
            "format": "int32",
            "nullable": true
          },
          "skillLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionSkillLevel"
            },
            "description": "List of skill levels, 0 No Experience, 1 Less than 2 yrs, 2 More than 2 yrs.\r\nNo need to include an item with Skilllevel set to 0 when user selects No Experience",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request of Save Position"
      },
      "SavePositionResponse": {
        "type": "object",
        "properties": {
          "positionId": {
            "type": "integer",
            "description": "Position is created/updated successfully when PositionId is greater than 0",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of SavePosition"
      },
      "SavePositionSkillsRequest": {
        "required": [
          "positionId",
          "skillGroupId",
          "skillLevels"
        ],
        "type": "object",
        "properties": {
          "positionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "PositionId",
            "format": "int32"
          },
          "skillGroupId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "SkillGroupId",
            "format": "int32"
          },
          "skillLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionSkillLevel"
            },
            "description": "List of skill levels, 0 - No Experience, 1 - Less Than 2 Yrs., 2 - More Than 2 Yrs. \r\nNo need to include an item with SkillLevel set to 0 when user selects No Experience"
          }
        },
        "additionalProperties": false,
        "description": "Request of SavePositionSkills"
      },
      "SavePositionSkillsResponse": {
        "type": "object",
        "properties": {
          "positionSkillsSaved": {
            "type": "boolean",
            "description": "Indicates if position skills are saved successfully"
          }
        },
        "additionalProperties": false,
        "description": "Response of SavePositionSkills"
      },
      "SavePrivateCommentRequest": {
        "required": [
          "commentText",
          "nurseID",
          "subject"
        ],
        "type": "object",
        "properties": {
          "nurseID": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Professoinal's NurseId",
            "format": "int32"
          },
          "subject": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Subject of comment"
          },
          "commentText": {
            "minLength": 1,
            "type": "string",
            "description": "Content of comment"
          }
        },
        "additionalProperties": false,
        "description": "Request of SavePrivateComment"
      },
      "SavePrivateCommentResponse": {
        "type": "object",
        "properties": {
          "commentId": {
            "type": "integer",
            "description": "Private comment is saved successfully when CommentId is greater than 0",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of SavePrivateComment"
      },
      "SaveProfessionalInformationRequest": {
        "required": [
          "nurseId",
          "positionTypeId"
        ],
        "type": "object",
        "properties": {
          "nurseId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Nurse id.",
            "format": "int32"
          },
          "positionTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Position type id.",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status is required when user registry version is true otherwise optional.",
            "format": "int32"
          },
          "careTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "List of Care type ids.",
            "nullable": true
          },
          "nurseLicenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NurseLicense"
            },
            "description": "List of Nurse Licenses.",
            "nullable": true
          },
          "nurseNpiNumber": {
            "maxLength": 50,
            "type": "string",
            "description": "Nurse National Provider Identifier (NPI) Number.",
            "nullable": true
          },
          "languagesSpoken": {
            "maxLength": 200,
            "type": "string",
            "description": "Languages spoken.",
            "nullable": true
          },
          "yearsOfExperience": {
            "type": "integer",
            "description": "Years of experience.",
            "format": "int32",
            "nullable": true
          },
          "educationId": {
            "type": "integer",
            "description": "Education Id. Value will be save to the DB if app version has NURSE_EDUCATION(74)",
            "format": "int32",
            "nullable": true
          },
          "allowBidOnShift": {
            "type": "boolean",
            "description": "Allow bid on shift. Value will be save to the DB if app version has ALLOW_AGENCY_NURSE_BID(254).",
            "nullable": true
          },
          "allowBidOnContract": {
            "type": "boolean",
            "description": "Allow bid on contract. Value will be save to the DB if app version is ALLOW_AGENCY_NURSE_BID(254).",
            "nullable": true
          },
          "programType": {
            "maximum": 1,
            "minimum": 0,
            "type": "integer",
            "description": "Program Type. 0 for PerDiem. 1 for Travel.",
            "format": "int32",
            "nullable": true
          },
          "costCenter": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "description": "Visible and required only for VMS_UMMS_STAFFING(3939)",
            "nullable": true
          },
          "secondaryEmail": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$",
            "type": "string",
            "description": "SecondaryEmail.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request for Professional Information"
      },
      "SaveProfessionalInformationResponse": {
        "type": "object",
        "properties": {
          "professionalSaved": {
            "type": "boolean",
            "description": "ProfessionaSaved will indicate if successfully save (True) or not."
          },
          "identicalLicenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdenticalLicenseResponseModel"
            },
            "description": "List of Nurse's licenses.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Professional Information save results return to user."
      },
      "SaveProfessionalStatusModel": {
        "type": "object",
        "properties": {
          "statusSaved": {
            "type": "boolean",
            "description": "StatusSaved will indicate if successfully save (True) or not."
          }
        },
        "additionalProperties": false,
        "description": "Response of SaveProfessionalStatus"
      },
      "SaveProfessionalStatusParam": {
        "required": [
          "nurseId",
          "statusId"
        ],
        "type": "object",
        "properties": {
          "nurseId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Nurse Id of professional.",
            "format": "int32"
          },
          "statusId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": " StatusId: APPROVED = 1, INACTIVE = 2, MINI_PROFILE = 3, IN_PROCESS = 4, PENDING_CONFIRMATION = 5, CREDENTIALED = 6, EXPIRED_CREDENTIAL = 7,\r\nSTAGE_CREDENTIAL = 8, TERMINATED = 9, INACTIVE_LOA_INACTIVITY = 10, INACTIVE_NON_COMPLIANT = 11\r\n\r\n 1, 2 allowed for non-registry version, 2, 3, 4, 5, 6 allowed for registry version where agencyId is not 3939(VMS_UMMS_STAFFING),\r\n\r\n 4, 5, 6, 9, 10, 11 allowed for registry version where agencyId is not 3939(VMS_UMMS_STAFFING)",
            "format": "int32"
          },
          "terminationDate": {
            "type": "string",
            "description": "Required only when StatusId is 9(Terminated)",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request for SaveProfessionalStatus"
      },
      "SaveProgramAgencySettingRequest": {
        "required": [
          "programId",
          "selectedAgencies"
        ],
        "type": "object",
        "properties": {
          "programId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "ProgramId",
            "format": "int32"
          },
          "selectedAgencies": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "SelectedAgencies, it needs to be an empty list(instead of null) when there are no agencies selected"
          }
        },
        "additionalProperties": false,
        "description": "Request of SaveProgramAgencySettings"
      },
      "SaveProgramFacilitySettingsRequest": {
        "required": [
          "programId",
          "selectedFacilities",
          "systemId"
        ],
        "type": "object",
        "properties": {
          "programId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "ProgramId",
            "format": "int32"
          },
          "systemId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "SystemId",
            "format": "int32"
          },
          "selectedFacilities": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "SelectedFacilities, it needs to be an empty list(instead of null) when there are no facilities selected"
          }
        },
        "additionalProperties": false,
        "description": "Request of SaveProgramFacilitySettings"
      },
      "SaveProgramRequest": {
        "required": [
          "active",
          "endDate",
          "programCategoryID",
          "programName",
          "programTypeID",
          "startDate",
          "stateID"
        ],
        "type": "object",
        "properties": {
          "programID": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Program ID null for creating",
            "format": "int32",
            "nullable": true
          },
          "programName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Program Name"
          },
          "programTypeID": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "ProgramTypeID",
            "format": "int32"
          },
          "programCategoryID": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "ProgramCategoryID",
            "format": "int32"
          },
          "stateID": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "StateID",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "description": "Agency Insurance Document Start Date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "Agency Insurance Document End Date",
            "format": "date-time"
          },
          "active": {
            "type": "boolean",
            "description": "Active"
          },
          "isCAP": {
            "type": "boolean",
            "description": "isCAP"
          },
          "isInternational": {
            "type": "boolean",
            "description": "isInternational"
          }
        },
        "additionalProperties": false
      },
      "SaveProgramSettingsRequest": {
        "required": [
          "agencyId",
          "programId",
          "selectedFacilities"
        ],
        "type": "object",
        "properties": {
          "agencyId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "AgencyId",
            "format": "int32"
          },
          "programId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "ProgramId",
            "format": "int32"
          },
          "selectedFacilities": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "SelectedFacilities, it needs to be an empty list(instead of null) when there are no facilities selected"
          }
        },
        "additionalProperties": false,
        "description": "Request of SaveProgramSettings"
      },
      "SaveProgramSettingsResponse": {
        "type": "object",
        "properties": {
          "saved": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Response of SaveProgramSettings"
      },
      "SaveProgramUserPermissionsRequest": {
        "required": [
          "adminId"
        ],
        "type": "object",
        "properties": {
          "adminId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Permissions - Modify Shifts/Contract Assignments\r\n\r\n\r\nSelect the Programs you want this Admin to be able to add, edit and award Shifts and Contract Assignments for.\r\nIf you select a Program that isn't associated with any of the Facilities that the Admin belongs to above, \r\nthen the Program will not be saved to this Admin profile. The Facility will have to be chosen above first. \r\nThe Admin can only have Permissions to Programs that are associated to Facilities the Admin belongs to.\r\n\r\n\r\nFor registry version only, it's editable when this admin is not super user and not the logged-in Admin User.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaveProgramUserPermissionsResponse": {
        "type": "object",
        "properties": {
          "saved": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SavePublicCommentRequest": {
        "required": [
          "commentText",
          "nurseID",
          "subject"
        ],
        "type": "object",
        "properties": {
          "commentID": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "nurseID": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "subject": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "commentText": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SaveRegistryAgencyCommentRequest": {
        "required": [
          "comment",
          "isPublic",
          "subject"
        ],
        "type": "object",
        "properties": {
          "subject": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Subject of comment"
          },
          "comment": {
            "minLength": 1,
            "type": "string",
            "description": "Content of comment"
          },
          "isPublic": {
            "type": "boolean",
            "description": "When agency user log in directly they can only see public comments(where IsPublic is true), when registry admin log in as agency, they can see all comments."
          }
        },
        "additionalProperties": false,
        "description": "Request of SaveRegistryAgencyComment"
      },
      "SaveRegistryAgencyCommentResponse": {
        "type": "object",
        "properties": {
          "commentId": {
            "type": "integer",
            "description": "CommentId is greater than 0 if comment gets saved successfully",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of SaveRegistryAgencyComment"
      },
      "SaveRegistryAgencyRequest": {
        "required": [
          "address",
          "agencyName",
          "city",
          "countryId",
          "firstName",
          "lastName",
          "stateId",
          "userPhone",
          "zipCode"
        ],
        "type": "object",
        "properties": {
          "agencyId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Registry Agency ID",
            "format": "int32",
            "nullable": true
          },
          "agencyName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Registry Agency Name"
          },
          "userTitle": {
            "maxLength": 50,
            "type": "string",
            "description": "Registry Agency User Title",
            "nullable": true
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Registry Agency User First Name"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Registry Agency User Last Name"
          },
          "address": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Registry Agency Nurse Address"
          },
          "address2": {
            "type": "string",
            "description": "Registry Agency Nurse Address2",
            "nullable": true
          },
          "city": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Registry Agency Nurse City"
          },
          "stateId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Registry Agency Nurse State",
            "format": "int32"
          },
          "countryId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Registry Agency Nurse Country",
            "format": "int32"
          },
          "zipCode": {
            "minLength": 1,
            "pattern": "^(\\d{5}-\\d{4}|\\d{5})$",
            "type": "string",
            "description": "Registry Agency Nurse Zip Code"
          },
          "userPhone": {
            "maxLength": 12,
            "minLength": 1,
            "pattern": "^\\d{3}[\\-]\\d{3}[\\-]\\d{4}",
            "type": "string",
            "description": "Registry Agency User Phone"
          },
          "phoneExt": {
            "maxLength": 5,
            "type": "string",
            "description": "Registry Agency Phone Ext",
            "nullable": true
          },
          "afterHoursPhone": {
            "maxLength": 12,
            "pattern": "^\\d{3}[\\-]\\d{3}[\\-]\\d{4}",
            "type": "string",
            "description": "Registry Agency after hours Phone",
            "nullable": true
          },
          "mobilePhone": {
            "maxLength": 12,
            "pattern": "^\\d{3}[\\-]\\d{3}[\\-]\\d{4}",
            "type": "string",
            "description": "Registry Agency Nurse Mobile Phone",
            "nullable": true
          },
          "isReceiveTextMessage": {
            "type": "boolean",
            "description": "Registry Agency Nurse Flag to recieve Text Message"
          },
          "agencyFax": {
            "maxLength": 12,
            "pattern": "(^([1])?\\s*(\\(\\d{3}\\))?\\s*\\d{3}[\\-\\s]?\\d{4}$)|(^\\+?\\d([\\d\\-\\.]){7,20})",
            "type": "string",
            "description": "Registry Agency Fax",
            "nullable": true
          },
          "userEmail": {
            "maxLength": 100,
            "type": "string",
            "description": "Registry Agency User Email. Notification will be forwarded to this address",
            "format": "email",
            "nullable": true
          },
          "isSendEmailMessage": {
            "type": "boolean",
            "description": "Registry Agency User Flag to receive Email Message"
          },
          "birthDate": {
            "type": "string",
            "description": "Registry Agency User Date of Birth",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaveRegistryCommentResponse": {
        "type": "object",
        "properties": {
          "registryCommentId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SaveRegistryDocumentResponse": {
        "type": "object",
        "properties": {
          "registryDocumentId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SaveRegistrySystemAdminUsernameRequest": {
        "required": [
          "newUsername"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "systemId": {
            "type": "integer",
            "format": "int32"
          },
          "newUsername": {
            "maxLength": 32,
            "minLength": 3,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SaveRegistrySystemRequest": {
        "required": [
          "address",
          "birthDate",
          "city",
          "country",
          "email",
          "encryptedPassword",
          "firstName",
          "lastName",
          "state",
          "systemName",
          "systemType",
          "zipCode"
        ],
        "type": "object",
        "properties": {
          "encryptedPassword": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The user's encrypted password."
          },
          "systemName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "The name of the system."
          },
          "systemType": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "The type of the system."
          },
          "title": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "The title of the system.",
            "nullable": true
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "The first name of the user."
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "The last name of the user."
          },
          "birthDate": {
            "type": "string",
            "description": "The date of birth.",
            "format": "date-time"
          },
          "address": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "The address of the system."
          },
          "address2": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "The other address of the system.",
            "nullable": true
          },
          "city": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "The city of the system."
          },
          "state": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string",
            "description": "The state of the system."
          },
          "country": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "The country of the system."
          },
          "zipCode": {
            "maxLength": 10,
            "minLength": 0,
            "pattern": "^(\\d{5}-\\d{4}|\\d{5})$",
            "type": "string",
            "description": "The zip code of the system."
          },
          "phone": {
            "maxLength": 12,
            "minLength": 0,
            "pattern": "^\\d{3}[\\-]\\d{3}[\\-]\\d{4}",
            "type": "string",
            "description": "The phone number of the system.",
            "nullable": true
          },
          "phoneExtension": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "description": "The phone extension of the system.",
            "nullable": true
          },
          "fax": {
            "maxLength": 12,
            "minLength": 0,
            "pattern": "(^([1])?\\s*(\\(\\d{3}\\))?\\s*\\d{3}[\\-\\s]?\\d{4}$)|(^\\+?\\d([\\d\\-\\.]){7,20})",
            "type": "string",
            "description": "The fax of the system.",
            "nullable": true
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "The email of the user.",
            "format": "email"
          },
          "poNumber": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "The PO number of the system.",
            "nullable": true
          },
          "billingRemitMessage": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "The billing remit message of the system.",
            "nullable": true
          },
          "netTerms": {
            "type": "integer",
            "description": "The net terms of the system.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaveRegistrySystemResponse": {
        "type": "object",
        "properties": {
          "registrySystemId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SaveRegistryUserRequest": {
        "required": [
          "userFirstName",
          "userLastName",
          "userUsername"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets the Id of the user.",
            "format": "int32",
            "nullable": true
          },
          "userFirstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the first name of the user. (required)"
          },
          "userLastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the last name of the user. (required)"
          },
          "userUsername": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the username of the user. (required)"
          },
          "userEmail": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the email of the user.",
            "format": "email",
            "nullable": true
          },
          "userActive": {
            "type": "boolean",
            "description": "Gets or sets whether it is an active user or not."
          },
          "recieveQAEmail": {
            "type": "boolean",
            "description": "Gets or sets whether the user can receive QA email."
          },
          "recieveMonthlyUsage": {
            "type": "boolean",
            "description": "Gets or sets whether the user can receive monthly usage."
          },
          "recieveAgencyInsuranceLicence": {
            "type": "boolean",
            "description": "Gets or sets whether the user can receive agency insurance license."
          },
          "recieveExpiringContracts": {
            "type": "boolean",
            "description": "Gets or sets whether the user can receive expiring contracts."
          },
          "receiveAgencyNurseVerifications": {
            "type": "boolean",
            "description": "Gets or sets whether the user can receive agency nurse verifications."
          },
          "recieveCredentialNotification": {
            "type": "boolean",
            "description": "Gets or sets whether the user can receive credential notification."
          },
          "editRegistryUserAccounts": {
            "type": "boolean",
            "description": "Gets or sets whether the user can edit registry user accounts."
          },
          "allowCredentialView": {
            "type": "boolean",
            "description": "Gets or sets whether to allow credential view."
          },
          "notifyOnContractDateUpdates": {
            "type": "boolean",
            "description": "Gets or sets whether to notify the user on contract date updates."
          },
          "receiveUnfilledNotify": {
            "type": "boolean",
            "description": "Gets or sets whether the user can receive unfilled notify."
          },
          "receiveAllShiftRelatedMessages": {
            "type": "boolean",
            "description": "Gets or sets whether the user can receive all shift related messages."
          },
          "notifyOnAgencyNurseCreation": {
            "type": "boolean",
            "description": "Gets or sets whether to notify the user on agency nurse creation."
          },
          "notifyOnUserInactivation": {
            "type": "boolean",
            "description": "Gets or sets whether to notify the user on user inactivation."
          },
          "notifyOnUserCreation": {
            "type": "boolean",
            "description": "Gets or sets whether to notify the user on user creation."
          },
          "notifyOnUnitCreation": {
            "type": "boolean",
            "description": "Gets or sets whether to notify the user on unit creation."
          },
          "allowReverseInvoice": {
            "type": "boolean",
            "description": "Gets or sets whether the user is allowed to reverse invoice."
          }
        },
        "additionalProperties": false,
        "description": "The request for creating a registry user."
      },
      "SaveRegistryUserResponse": {
        "type": "object",
        "properties": {
          "registryUserId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SaveReqIDRequest": {
        "required": [
          "reqID"
        ],
        "type": "object",
        "properties": {
          "contractID": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Contract ID",
            "format": "int32"
          },
          "reqID": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Req ID"
          }
        },
        "additionalProperties": false
      },
      "SaveReqIDResponse": {
        "type": "object",
        "properties": {
          "saved": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SaveRequisitionSettingLevelRequest": {
        "required": [
          "admins",
          "level"
        ],
        "type": "object",
        "properties": {
          "requisitionSettingLevelId": {
            "type": "integer",
            "description": "Required when updating an existing level.",
            "format": "int32",
            "nullable": true
          },
          "facilityId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Required when adding a new level.",
            "format": "int32",
            "nullable": true
          },
          "unitId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "admins": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SaveRequisitionSettingLevelResponse": {
        "type": "object",
        "properties": {
          "requisitionSettingLevelId": {
            "type": "integer",
            "format": "int32"
          },
          "saved": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SaveResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SaveShiftModel": {
        "type": "object",
        "properties": {
          "shiftID": {
            "type": "integer",
            "description": "ShiftID will be greater than zero if shift is created successfully",
            "format": "int32"
          },
          "outOfContractDateRange": {
            "type": "boolean",
            "description": "It is true when shift date does not fall in the range of contract start and contract end, shift is not created"
          },
          "overlapping": {
            "type": "boolean",
            "description": "It is true when the shift you are creating is overlapping with existing shift, shift is not created"
          }
        },
        "additionalProperties": false,
        "description": "Response of SaveShift"
      },
      "SaveShiftParam": {
        "required": [
          "contractId",
          "facilityId",
          "positionId",
          "shiftEndDateTime",
          "shiftStartDateTime",
          "unitId",
          "wageCodeId"
        ],
        "type": "object",
        "properties": {
          "contractId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "facilityId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "unitId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "positionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "wageCodeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "shiftBreakTime": {
            "type": "integer",
            "description": "Pass null if user does not specify it or it captures exact break datetime",
            "format": "int32",
            "nullable": true
          },
          "shiftStartDateTime": {
            "type": "string",
            "format": "date"
          },
          "shiftEndDateTime": {
            "type": "string",
            "format": "date"
          },
          "shiftBreakStartTime": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "shiftBreakEndTime": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "shiftComment": {
            "maxLength": 2500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request for SaveShift"
      },
      "SaveSystemDocumentResponse": {
        "type": "object",
        "properties": {
          "systemDocId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SaveSystemPrivateCommentRequest": {
        "required": [
          "commentText",
          "nurseId",
          "subject"
        ],
        "type": "object",
        "properties": {
          "nurseId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Professoinal's NurseId",
            "format": "int32"
          },
          "subject": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Subject of comment"
          },
          "commentText": {
            "minLength": 1,
            "type": "string",
            "description": "Content of comment"
          },
          "agencyId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Public to agency.",
            "format": "int32",
            "nullable": true
          },
          "facilityId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "For system - VMS_UMMS(433).",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request of SaveSystemPrivateComment"
      },
      "SaveSystemPrivateCommentResponse": {
        "type": "object",
        "properties": {
          "commentId": {
            "type": "integer",
            "description": "Private comment is saved successfully when CommentId is greater than 0",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of SaveSystemPrivateComment"
      },
      "SaveSystemTierRequest": {
        "required": [
          "choosenProgramIds",
          "numberOfDays",
          "numberOfHours",
          "numberOfMinutes",
          "tierNumber"
        ],
        "type": "object",
        "properties": {
          "tierId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tierNumber": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "choosenProgramIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "choosenAgencyIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "facilityId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tierActive": {
            "type": "boolean"
          },
          "unitId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "numberOfDays": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "numberOfHours": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "numberOfMinutes": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "tieringByContractStartDate": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SaveTimeEntryRequest": {
        "required": [
          "positionId",
          "shiftEndDateTime",
          "shiftStartDateTime",
          "unitId",
          "wageCodeId"
        ],
        "type": "object",
        "properties": {
          "shiftId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Pass null when adding a new time entry to a Contract Assignment.",
            "format": "int32",
            "nullable": true
          },
          "contractAssignmentId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Required when adding a new time entry to a Contract Assignment.\r\n\r\nPass null when updating an existing time entry.",
            "format": "int32",
            "nullable": true
          },
          "unitId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "positionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "shiftStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftBreakTime": {
            "type": "integer",
            "description": "Pass null if user does not specify it.",
            "format": "int32",
            "nullable": true
          },
          "wageCodeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "accountId": {
            "type": "integer",
            "description": "Visible for MAXIM(20)",
            "format": "int32",
            "nullable": true
          },
          "projectId": {
            "type": "integer",
            "description": "Visible for MAXIM(20)",
            "format": "int32",
            "nullable": true
          },
          "taskId": {
            "type": "integer",
            "description": "Visible for MAXIM(20)",
            "format": "int32",
            "nullable": true
          },
          "approvedToBill": {
            "type": "boolean"
          },
          "shiftComments": {
            "maxLength": 1000,
            "type": "string",
            "description": "Visible for ICON(34)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request for adding or updating a Time Entry."
      },
      "SaveTimeEntryResponse": {
        "type": "object",
        "properties": {
          "shiftId": {
            "type": "integer",
            "format": "int32"
          },
          "secondShiftId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of adding or editing Time Entry"
      },
      "SaveUnitManagerProfileRequest": {
        "required": [
          "active",
          "firstName",
          "lastName",
          "selectedPermissions",
          "selectedUnits"
        ],
        "type": "object",
        "properties": {
          "adminId": {
            "type": "integer",
            "description": "AdminId, pass null when creating a new unit manager, pass AdminId when edit",
            "format": "int32",
            "nullable": true
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "First Name"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Last Name"
          },
          "userTitle": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "User Title",
            "nullable": true
          },
          "integrationId": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Integration ID, visible and required for system TNAA_MULTICARE(187) only",
            "nullable": true
          },
          "phone": {
            "maxLength": 12,
            "minLength": 0,
            "pattern": "^\\d{3}[\\-]\\d{3}[\\-]\\d{4}",
            "type": "string",
            "description": "Phone",
            "nullable": true
          },
          "phoneExt": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "description": "PhoneExt",
            "nullable": true
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Email",
            "format": "email",
            "nullable": true
          },
          "receiveTimeCardApproval": {
            "type": "boolean",
            "description": "Receive Time Card Approval"
          },
          "receiveExpiringContractsNotifications": {
            "type": "boolean",
            "description": "Receive Expiring Contracts Notifications, visible only for GHR(17)"
          },
          "receiveNewContractNotifications": {
            "type": "boolean",
            "description": "Receive New Contract Notifications, visible only when system has HOSPADMIN_NEW_CONTRACT_NOTIFICATION(206)"
          },
          "receiveAwardOfferNotifications": {
            "type": "boolean",
            "description": "Receive Award Offer Notifications, visible only when system has HOSPADMIN_AWARD_OFFER_CONTRACT_NOTIFICATION(207)"
          },
          "receiveSubmissionNotification": {
            "type": "boolean",
            "description": "Receive Submission Notification, visible only when system has HOSPADMIN_CONTRACT_SUBMISSION_NOTIFICATION(302)"
          },
          "allowRequisitionCreation": {
            "type": "boolean",
            "description": "Allow Requisition Creation, visible only when system has UNIT_MANAGER_LOG_IN(124) and ENABLE_REQUISITION(157)"
          },
          "receivePerformanceEvaluation": {
            "type": "boolean",
            "description": "Receive Performance Evaluation, visible only for JHU(3)"
          },
          "enableCredentialView": {
            "type": "boolean",
            "description": "Enable Credential View, visible only for GHR(17)"
          },
          "active": {
            "type": "boolean",
            "description": "Active"
          },
          "selectedUnits": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "SelectedUnits, pass empty array when no units selected"
          },
          "selectedPermissions": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "SelectedPermissions - Modify Shifts/Contract Assignments, visible only when system has UNIT_MANAGER_ALLOW_CREATE_SHIFT(342), pass empty array when no permissions selected"
          }
        },
        "additionalProperties": false,
        "description": "Request of SaveUnitManagerProfile"
      },
      "SaveUnitManagerProfileResponse": {
        "type": "object",
        "properties": {
          "adminId": {
            "type": "integer",
            "description": "AdminId, when it is greater than 0 it means unit manager gets saved successfully",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of SaveUnitManagerProfile"
      },
      "SaveUnitManagerUnitsRequest": {
        "required": [
          "adminId",
          "selectedUnits"
        ],
        "type": "object",
        "properties": {
          "adminId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "AdminId",
            "format": "int32"
          },
          "selectedUnits": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "SelectedUnits, pass empty array when no units selected"
          },
          "receiveTimeCardApproval": {
            "type": "boolean",
            "description": "Receive Time Card Approval"
          },
          "allowRequisitionCreation": {
            "type": "boolean",
            "description": "Allow Requisition Creation, visible only when system has UNIT_MANAGER_LOG_IN(124) and ENABLE_REQUISITION(157)"
          }
        },
        "additionalProperties": false,
        "description": "Request of SaveUnitManagerUnits"
      },
      "SaveUnitManagerUnitsResponse": {
        "type": "object",
        "properties": {
          "saved": {
            "type": "boolean",
            "description": "Saved, when it is true it means units get saved successfully"
          }
        },
        "additionalProperties": false,
        "description": "Response of SaveUnitManagerUnits"
      },
      "SaveUnitRequest": {
        "required": [
          "unitActive",
          "unitIsLawson",
          "unitNonCOO"
        ],
        "type": "object",
        "properties": {
          "unitId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Pass null when creating a new Unit, pass UnitId when updating an existing Unit",
            "format": "int32",
            "nullable": true
          },
          "facilityId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Facility Id",
            "format": "int32"
          },
          "unitName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Unit Name",
            "nullable": true
          },
          "unitActive": {
            "type": "boolean",
            "description": "Unit Active"
          },
          "costCenterCode": {
            "type": "string",
            "description": "Cost Center Code",
            "nullable": true
          },
          "unitIntegrationKey": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Unit Integration Key",
            "nullable": true
          },
          "unitAbbrv": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "description": "Unit Abbreviation",
            "nullable": true
          },
          "unitIsLawson": {
            "type": "boolean",
            "description": "Unit Is Lawson"
          },
          "unitNonCOO": {
            "type": "boolean",
            "description": "Unit Non COO"
          },
          "unitTypeID": {
            "type": "integer",
            "description": "Unit Type Id",
            "format": "int32",
            "nullable": true
          },
          "timeAttendanceIntegrationKey": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "time Attendance Integration Key",
            "nullable": true
          },
          "careTypesID": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Multiple Care Type Id",
            "nullable": true
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "consecutiveShiftDays": {
            "type": "integer",
            "description": "Consecutive Shift Days",
            "format": "int32",
            "nullable": true
          },
          "scheduleGroupID": {
            "type": "integer",
            "description": "Schedule Group Id",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request of Save Unit"
      },
      "SaveUnitResponse": {
        "type": "object",
        "properties": {
          "unitId": {
            "type": "integer",
            "description": "Unit is created/updated successfully when UnitId is greater than 0",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of Save Unit"
      },
      "SaveWageCodeRequest": {
        "required": [
          "wageCodeActive",
          "wageCodeMultiplier",
          "wageCodeName"
        ],
        "type": "object",
        "properties": {
          "wageCodeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "WageCode ID, pass null when creating a new wage code, pass WageCodeId when updating an existing wage code",
            "format": "int32",
            "nullable": true
          },
          "wageCodeName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "WageCode Name"
          },
          "wageCodeActive": {
            "type": "boolean",
            "description": "Active"
          },
          "wageCodeDescription": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "wageCodeExemptVMSRate": {
            "type": "boolean",
            "description": "Exempt VMS Rate, visible and required only for MSP or impersonation session"
          },
          "wageCodeExemptB4HRate": {
            "type": "boolean",
            "description": "Exempt B4H Rate, visible and required only for MSP or impersonation session"
          },
          "wageCodeNegativeRate": {
            "type": "boolean",
            "description": "Negative Rate, visible and required only for MSP or impersonation session"
          },
          "wageCodeIntegrationKey": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Integration Key, visible and required only for MSP or impersonation session",
            "nullable": true
          },
          "wageCodeMultiplier": {
            "type": "number",
            "description": "Multiplier",
            "format": "float"
          },
          "wageCodeIsOT": {
            "type": "boolean",
            "description": "OT, visible and required only for MSP or impersonation session"
          },
          "wageCodeIsDoubleOT": {
            "type": "boolean",
            "description": "Double OT, visible and required only for MSP or impersonation session"
          },
          "timeAttendanceIntegrationKey": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "wageCodeIsHoliday": {
            "type": "boolean",
            "description": "Holiday, visible and required only for MSP or impersonation session"
          },
          "wageCodeIsOnCall": {
            "type": "boolean",
            "description": "OnCall, visible and required only for MSP or impersonation session"
          },
          "wageCodeIsCharge": {
            "type": "boolean",
            "description": "Charge, visible and required only for MSP or impersonation session"
          },
          "wageCodeIsCallback": {
            "type": "boolean",
            "description": "Callback, visible and required only for MSP or impersonation session"
          },
          "wageCodeIsDefaultStandard": {
            "type": "boolean",
            "description": "Default Standard, visible and required only for MSP or impersonation session"
          },
          "wageCodeRestrictedView": {
            "type": "boolean",
            "description": "Restricted View, visible and required only for MSP or impersonation session"
          },
          "wageCodeSkipOverlapValidation": {
            "type": "boolean",
            "description": "Skip Overlap Validation, visible and required only for MSP or impersonation session"
          },
          "skipInOTProcessing": {
            "type": "boolean",
            "description": "Skip In OT Processing, visible and required only for MSP or impersonation session"
          },
          "isExpense": {
            "type": "boolean",
            "description": "Expense, visible and required only for MSP or impersonation session"
          },
          "wageCodeIsSick": {
            "type": "boolean",
            "description": "Sick, visible and required only for MSP or impersonation session"
          },
          "isOneHourCallback": {
            "type": "boolean",
            "description": "1 Hour Callback, visible and required only for MSP or impersonation session"
          },
          "wageCodeIsOvertimeCharge": {
            "type": "boolean",
            "description": "WageCodeIsOvertimeCharge, visible and required only for MSP or impersonation session - Currently no UI for this"
          },
          "doNotAddDifferential": {
            "type": "boolean",
            "description": "DoNotAddDifferential, visible and required only for MSP or impersonation session - Currently no UI for this"
          },
          "addChargeOnRegular": {
            "type": "boolean",
            "description": "AddChargeOnRegular, visible and required only for MSP or impersonation session - Currently no UI for this"
          },
          "isDailyFlag": {
            "type": "boolean",
            "description": "IsDailyFlag, visible and required only for MSP or impersonation session - Currently no UI for this"
          },
          "wageCodeFlatRate": {
            "type": "number",
            "description": "FlatRate - visible for NU_WEST(22) only or impersonation session",
            "format": "double",
            "nullable": true
          },
          "wageCodeAddFlatRate": {
            "type": "number",
            "description": "WageCodeAddFlatRate, visible and required only for MSP or impersonation session - Currently no UI for this",
            "format": "double",
            "nullable": true
          },
          "hideHour": {
            "type": "boolean",
            "description": "Hide Hour, visible and required only for MSP or impersonation session"
          },
          "excludeFromInvoice": {
            "type": "boolean",
            "description": "Exclude From Invoice, visible and required only for MSP or impersonation session"
          },
          "excludeFromAgency": {
            "type": "boolean",
            "description": "ExcludeFromAgency, visible and required only for MSP or impersonation session - Currently no UI for this"
          },
          "wageCodeAddMultiplierBeforeBonus": {
            "type": "boolean",
            "description": "WageCodeAddMultiplierBeforeBonus, visible and required only for MSP or impersonation session - Currently no UI for this"
          }
        },
        "additionalProperties": false,
        "description": "Request of SaveWageCode"
      },
      "SaveWageCodeResponse": {
        "type": "object",
        "properties": {
          "wageCodeId": {
            "type": "integer",
            "description": "WageCode is created/updated successfully when WageCodeId is greater than 0",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of SaveWageCode"
      },
      "ScheduledContract": {
        "type": "object",
        "properties": {
          "contractAssignmentId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Always \"Scheduled\".",
            "nullable": true
          },
          "contractAssignmentBatchId": {
            "type": "integer",
            "description": "Return the batch id if the contract is in a batch.",
            "format": "int32",
            "nullable": true
          },
          "contractAssignmentStartDateTime": {
            "type": "string",
            "description": "Contract Start Date",
            "format": "date-time"
          },
          "contractAssignmentEndDateTime": {
            "type": "string",
            "description": "Contract End Date",
            "format": "date-time"
          },
          "contractAssignmentStartBidDateTime": {
            "type": "string",
            "description": "Signup Start Date Time",
            "format": "date-time"
          },
          "contractAssignmentEndBidDateTime": {
            "type": "string",
            "description": "Signup End Date Time",
            "format": "date-time"
          },
          "dateCreatedOn": {
            "type": "string",
            "description": "Creation Date",
            "format": "date-time",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "positionTypeName": {
            "type": "string",
            "nullable": true
          },
          "programName": {
            "type": "string",
            "description": "Registry version only.",
            "nullable": true
          },
          "shiftTime": {
            "type": "string",
            "nullable": true
          },
          "bidCount": {
            "type": "integer",
            "format": "int32"
          },
          "hasPrivateComments": {
            "type": "boolean",
            "description": "Indicates if the contrac has private comments. If true, show a pupup for the private comments. For VMS only."
          }
        },
        "additionalProperties": false
      },
      "ScheduledShiftItem": {
        "type": "object",
        "properties": {
          "shiftId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Always \"Scheduled\".",
            "nullable": true
          },
          "positionName": {
            "type": "string",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "bidCount": {
            "type": "integer",
            "format": "int32"
          },
          "shiftStartDateTime": {
            "type": "string",
            "description": "Shift Start Date",
            "format": "date-time"
          },
          "shiftEndDateTime": {
            "type": "string",
            "description": "Shift End Date",
            "format": "date-time"
          },
          "shiftStartBidDateTime": {
            "type": "string",
            "description": "Signup Start Date Time",
            "format": "date-time"
          },
          "shiftEndBidDateTime": {
            "type": "string",
            "description": "Signup End Date Time",
            "format": "date-time"
          },
          "shiftBreakTime": {
            "type": "integer",
            "format": "int32"
          },
          "programName": {
            "type": "string",
            "description": "Registry version only.",
            "nullable": true
          },
          "postRate": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "SearchAdminsModel": {
        "type": "object",
        "properties": {
          "adminID": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "programCategoryName": {
            "type": "string",
            "nullable": true
          },
          "userLastSignIn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "isSuperUser": {
            "type": "boolean"
          },
          "isBillingContract": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SearchAdminsResponse": {
        "type": "object",
        "properties": {
          "adminList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchAdminsModel"
            },
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SearchAgencyNurseModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "agencyName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "positionTypeID": {
            "type": "integer",
            "format": "int32"
          },
          "positionType": {
            "type": "string",
            "nullable": true
          },
          "agencyID": {
            "type": "integer",
            "format": "int32"
          },
          "nurseID": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchInternalNurseModel": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "jobCode": {
            "type": "string",
            "nullable": true
          },
          "positionTypeID": {
            "type": "integer",
            "format": "int32"
          },
          "positionType": {
            "type": "string",
            "nullable": true
          },
          "nurseID": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchProfessionalsResponse": {
        "type": "object",
        "properties": {
          "internalNurseList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchInternalNurseModel"
            },
            "nullable": true
          },
          "agencyNurseList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchAgencyNurseModel"
            },
            "nullable": true
          },
          "internalNurseTotalRecords": {
            "type": "integer",
            "format": "int32"
          },
          "agencyNurseTotalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SelectAgencyNurseItem": {
        "type": "object",
        "properties": {
          "nurseId": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "agencyNurseStatus": {
            "type": "string",
            "description": "Show Professional Name in the pattern of 'FirstName LastName(AgencyNurseStatus)' when AgencyNurseStatus is not empty,\r\nShow Professional Name in the pattern of 'FirstName LastName' when AgencyNurseStatus is empty,\r\nAgencyNurseStatus should be one of the following, 'Approved', 'Inactive', 'Mini Profile', 'In Process', 'Pending', 'Credentialed'.",
            "nullable": true
          },
          "positionTypeName": {
            "type": "string",
            "nullable": true
          },
          "careTypes": {
            "type": "string",
            "nullable": true
          },
          "requiredCredential": {
            "type": "boolean",
            "description": "RequiredCredential is true when app version has REQUIRED_CREDENTIAL(131), and for shift facility.BypassPerDiemRequiredCredential is false"
          },
          "requiredCredentialAdded": {
            "type": "boolean",
            "description": "RequiredCredentialAdded indicates if system has added any required credentials, \r\nwhen both RequiredCredential and RequiredCredentialAdded are true show View Credentials link in the Skills Met column,\r\nshow empty when RequiredCredential is true and RequiredCredentialAdded is false."
          },
          "allRequiredCredentialMet": {
            "type": "boolean"
          },
          "skillsMet": {
            "type": "string",
            "description": "SkillsMet makes sense only when RequiredCredential is false, show empty when it is '0/0', otherwise show it with a link to view skills met",
            "nullable": true
          },
          "canSubmitCandidate": {
            "type": "boolean",
            "description": "When CanSubmitCandidate is true allow the professional to be selected to request a shift"
          },
          "reasonCannotSubmitCandidate": {
            "type": "string",
            "description": "Only make sense when CanSubmitCandidate is false",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SelectableItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Gets or sets the Id of the item as an integer.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the name of the item.",
            "nullable": true
          },
          "selected": {
            "type": "boolean",
            "description": "Gets or sets the selected state of the item."
          }
        },
        "additionalProperties": false,
        "description": "A record class that provides Id, Name and Selected pairing."
      },
      "SelectableItems": {
        "type": "object",
        "properties": {
          "idNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectableItem"
            },
            "description": "The list of B4Health.Dto.Response.SelectableItem.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The class the contains the list of B4Health.Dto.Response.SelectableItem."
      },
      "SendContractMessageModel": {
        "type": "object",
        "properties": {
          "messageSent": {
            "type": "boolean",
            "description": "Set to true if message is successfully sent"
          }
        },
        "additionalProperties": false,
        "description": "Response of SendContractMessage"
      },
      "SendContractMessageParam": {
        "required": [
          "contractId",
          "messageBody",
          "messageSubject"
        ],
        "type": "object",
        "properties": {
          "messageSubject": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "MessageSubject"
          },
          "messageBody": {
            "minLength": 1,
            "type": "string",
            "description": "MessageBody"
          },
          "contractId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "ContractID the message is sent regarding",
            "format": "int32"
          },
          "includeSender": {
            "type": "boolean",
            "description": "Set it to false for now"
          },
          "credentialReady": {
            "type": "boolean",
            "description": "When CredentialReady is true send to hr admins of the facility that the contract belongs to, or send to contract.CreatedByAdminId"
          }
        },
        "additionalProperties": false,
        "description": "Request for SendContractMessage"
      },
      "SendMessageToAdministratorsResponse": {
        "type": "object",
        "properties": {
          "numberOfMessagesSent": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SendMessageToAgenciesResponse": {
        "type": "object",
        "properties": {
          "numberOfMessagesSent": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SendMessageToAgencyProfessionalsResponse": {
        "type": "object",
        "properties": {
          "numberOfMessagesSent": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SendMessageToInternalProfessionalsResponse": {
        "type": "object",
        "properties": {
          "numberOfMessagesSent": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SendMessageToNurseModel": {
        "type": "object",
        "properties": {
          "messageSent": {
            "type": "boolean",
            "description": "Set to true if message is successfully sent"
          }
        },
        "additionalProperties": false,
        "description": "Response of SendMessageToNurse"
      },
      "SendMessageToNurseParam": {
        "required": [
          "messageBody",
          "messageSubject",
          "nurseId"
        ],
        "type": "object",
        "properties": {
          "messageSubject": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "MessageSubject"
          },
          "messageBody": {
            "minLength": 1,
            "type": "string",
            "description": "MessageBody"
          },
          "nurseId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "professional's NurseID",
            "format": "int32"
          },
          "includeSender": {
            "type": "boolean",
            "description": "Set it to false for now"
          }
        },
        "additionalProperties": false,
        "description": "Request for SendMessageToNurse"
      },
      "SendMessageToSystemPrimaryAdminModel": {
        "type": "object",
        "properties": {
          "messageSent": {
            "type": "boolean",
            "description": "Set to true if message is successfully sent"
          }
        },
        "additionalProperties": false,
        "description": "Response of SendMessageToSystemPrimaryAdmin"
      },
      "SendMessageToSystemPrimaryAdminParam": {
        "required": [
          "messageBody",
          "messageSubject",
          "systemId"
        ],
        "type": "object",
        "properties": {
          "messageSubject": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "MessageSubject"
          },
          "messageBody": {
            "minLength": 1,
            "type": "string",
            "description": "MessageBody"
          },
          "systemId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "ShiftID the message is sent regarding",
            "format": "int32"
          },
          "includeSender": {
            "type": "boolean",
            "description": "Set it to false for now"
          }
        },
        "additionalProperties": false,
        "description": "Request for SendMessageToSystemPrimaryAdmin"
      },
      "SendShiftMessageModel": {
        "type": "object",
        "properties": {
          "messageSent": {
            "type": "boolean",
            "description": "Set to true if message is successfully sent"
          }
        },
        "additionalProperties": false,
        "description": "Response of SendShiftMessage"
      },
      "SendShiftMessageParam": {
        "required": [
          "messageBody",
          "messageSubject",
          "shiftId"
        ],
        "type": "object",
        "properties": {
          "messageSubject": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "MessageSubject"
          },
          "messageBody": {
            "minLength": 1,
            "type": "string",
            "description": "MessageBody"
          },
          "shiftId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "ShiftID the message is sent regarding",
            "format": "int32"
          },
          "includeSender": {
            "type": "boolean",
            "description": "Set it to false for now"
          }
        },
        "additionalProperties": false,
        "description": "Request for SendShiftMessage"
      },
      "SendTimeAttendanceLinkRequest": {
        "required": [
          "emails",
          "facilityId",
          "timeAttendanceLink"
        ],
        "type": "object",
        "properties": {
          "facilityId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "FacilityId",
            "format": "int32"
          },
          "timeAttendanceLink": {
            "minLength": 1,
            "type": "string",
            "description": "TimeAttendanceLink consists of protocal, domain, port, path, an example from v1: http://localhostonesource.devbid4health.com:52829/ClockInOutLogin.aspx?FAD=uuQNQ7eErLs=",
            "format": "uri"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Email Addresses to send time attendance link to"
          }
        },
        "additionalProperties": false,
        "description": "Request of SendTimeAttendanceLink"
      },
      "SendTimeAttendanceLinkResponse": {
        "type": "object",
        "properties": {
          "linkSent": {
            "type": "boolean",
            "description": "Indicates if facility time attendance link is sent successfully"
          }
        },
        "additionalProperties": false,
        "description": "Response of SendTimeAttendanceLink"
      },
      "SendUnapprovedShiftsToUnitManagerRequest": {
        "required": [
          "adminId"
        ],
        "type": "object",
        "properties": {
          "adminId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "comments": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SendUnapprovedShiftsToUnitManagerResponse": {
        "type": "object",
        "properties": {
          "numberOfMessagesSent": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ShiftDetailsBase_FacilityModel": {
        "type": "object",
        "properties": {
          "labelAlias": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "directions": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShiftDetailsBase_HomeCarePatientModel": {
        "type": "object",
        "properties": {
          "homeCarePatientId": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "directions": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressModel"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShiftDetailsBase_RejectedCommentModel": {
        "type": "object",
        "properties": {
          "rejectedComments": {
            "type": "string",
            "nullable": true
          },
          "rejectedBy": {
            "type": "string",
            "nullable": true
          },
          "dateRejected": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ShiftDetailsBase_UnitModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "careTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShiftDetailsModel": {
        "type": "object",
        "properties": {
          "shiftId": {
            "type": "integer",
            "format": "int32"
          },
          "shiftStatusId": {
            "type": "integer",
            "description": "Shift Status: 1 - Open, 2 - Pending, 3 - Awarded, 4 - Cancelled, 5 - Scheduled",
            "format": "int32"
          },
          "shiftStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftDateCreatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "shiftStartBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftEndBidDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "needStatus": {
            "type": "string",
            "nullable": true
          },
          "hasTimeCard": {
            "type": "boolean"
          },
          "shiftClockedIn": {
            "type": "boolean"
          },
          "shiftClockedOut": {
            "type": "boolean"
          },
          "originalShiftStartDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "originalShiftEndDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "shiftReconcileNegativeHours": {
            "type": "boolean"
          },
          "numberOfHours": {
            "type": "number",
            "format": "double"
          },
          "shiftIsHoliday": {
            "type": "boolean"
          },
          "wageRate": {
            "type": "string",
            "nullable": true
          },
          "wageRateLabel": {
            "type": "string",
            "nullable": true
          },
          "additionalBillRate": {
            "type": "string",
            "nullable": true
          },
          "additionalPayRate": {
            "type": "string",
            "nullable": true
          },
          "shiftIncentive": {
            "type": "boolean"
          },
          "positionId": {
            "type": "integer",
            "format": "int32"
          },
          "positionName": {
            "type": "string",
            "nullable": true
          },
          "positionTypeName": {
            "type": "string",
            "nullable": true
          },
          "careTypeName": {
            "type": "string",
            "nullable": true
          },
          "secondaryPositionName": {
            "type": "string",
            "nullable": true
          },
          "secondaryPositionTypeName": {
            "type": "string",
            "nullable": true
          },
          "secondaryCareTypeName": {
            "type": "string",
            "nullable": true
          },
          "shiftIntegrationKey": {
            "type": "string",
            "nullable": true
          },
          "regionName": {
            "type": "string",
            "nullable": true
          },
          "programId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "programName": {
            "type": "string",
            "nullable": true
          },
          "systemId": {
            "type": "integer",
            "format": "int32"
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "facility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ShiftDetailsModel_FacilityModel"
              }
            ],
            "nullable": true
          },
          "unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ShiftDetailsModel_UnitModel"
              }
            ],
            "nullable": true
          },
          "patientFirstName": {
            "type": "string",
            "nullable": true
          },
          "patientLastName": {
            "type": "string",
            "nullable": true
          },
          "homeCarePatient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ShiftDetailsModel_HomeCarePatientModel"
              }
            ],
            "nullable": true
          },
          "rejectedComment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ShiftDetailsModel_RejectedCommentModel"
              }
            ],
            "nullable": true
          },
          "shiftContactName": {
            "type": "string",
            "nullable": true
          },
          "shiftContactPhone": {
            "type": "string",
            "nullable": true
          },
          "shiftComments": {
            "type": "string",
            "nullable": true
          },
          "cancelledReason": {
            "type": "string",
            "nullable": true
          },
          "cancelledBy": {
            "type": "string",
            "nullable": true
          },
          "dateCancelled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "requiredCredentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShiftDetailsModel_RequiredCredentialModel"
            },
            "nullable": true
          },
          "showRequestButton": {
            "type": "boolean"
          },
          "showReconcileButton": {
            "type": "boolean"
          },
          "showCancelShiftAwardButton": {
            "type": "boolean"
          },
          "showAddToWatchListButton": {
            "type": "boolean",
            "description": "Only one of ShowAddToWatchListButton and ShowRemoveFromWatchListButton can be true"
          },
          "showRemoveFromWatchListButton": {
            "type": "boolean",
            "description": "Only one of ShowAddToWatchListButton and ShowRemoveFromWatchListButton can be true"
          },
          "showMessageAdminLink": {
            "type": "boolean"
          },
          "biddingStatus": {
            "type": "integer",
            "description": "1 - A Submission For This Shift/Contract Has Been Made \r\n\r\n2 - You Are The Current Low Bidder \r\n\r\n    Important: Another user may still outbid you, so check this shift/contract again on your Home Page before bidding ends. \r\n\r\n    How do you keep track of this item? Use the Home Page, which conveniently keeps track of all your bidding activities. \r\n\r\n\r\n    How does bidding work? Total Shift Control automatically bids on your behalf down to your minimum bid.If the shift ends for more than your minimum, that's all you'll receive the shift at. \r\n\r\n\r\n    Reminder: Being the lowest bidder does not guarantee you to win the shift/contract.Administrator Professionals are able to view your profile which allows them to check your skill sets and level of experience when determining the bid winner. \r\n\r\n\r\n3 - You Have Been Outbid By Another Bidder \r\n\r\n    Important: Another bidder placed a lower minimum bid than yours. To increase your chances of winning, enter the lowest amount you would be willing to work this shift/contract for. Total Shift Control will only use as much of your bid as necessary to win. \r\n\r\n\tHow did this happen? B4Health compares your bid to those of others.You were outbid because another bidder placed a lower minimum bid. \r\n\r\n\r\n\tHow does bidding work? Total Shift Control automatically bids on your behalf down to your minimum bid.If the shift ends for more than your minimum, that's all you'll receive the shift at. \r\n\r\n\r\n\tReminder: Even if you don't bid again, you could still end up as the winning bidder if your skill set matches the required criteria. Continue to check shift/contract status. \r\n\r\n\r\n4 - You Have Been Outbid By Another Bidder, You May Place Another Bid Below \r\n\r\n    Important: Another bidder placed a lower minimum bid than yours. To increase your chances of winning, enter the lowest amount you would be willing to work this shift/contract for.  Total Shift Control will only use as much of your bid as necessary to win. \r\n\r\n\tHow did this happen? B4Health compares your bid to those of others.You were outbid because another bidder placed a lower minimum bid. \r\n\r\n\r\n\tHow does bidding work? Total Shift Control automatically bids on your behalf down to your minimum bid.If the shift ends for more than your minimum, that's all you'll receive the shift at. \r\n\r\n\r\n\tReminder: Even if you don't bid again, you could still end up as the winning bidder if your skill set matches the required criteria. Continue to check shift/contract status.\r\n\r\n\r\n5 - Congratulations! You Have Been Awarded This Shift! \r\n\r\n    Please contact the Unit Manager using the Shift Contact information below.",
            "format": "int32",
            "nullable": true
          },
          "bids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShiftDetailsModel_NurseBid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShiftDetailsModel_FacilityModel": {
        "type": "object",
        "properties": {
          "labelAlias": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "directions": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShiftDetailsModel_HomeCarePatientModel": {
        "type": "object",
        "properties": {
          "homeCarePatientId": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "directions": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressModel"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShiftDetailsModel_NurseBid": {
        "type": "object",
        "properties": {
          "bidId": {
            "type": "integer",
            "format": "int32"
          },
          "bidActive": {
            "type": "boolean"
          },
          "nurseId": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "positionTypeName": {
            "type": "string",
            "nullable": true
          },
          "careTypes": {
            "type": "string",
            "nullable": true
          },
          "rate": {
            "type": "string",
            "nullable": true
          },
          "allowRetract": {
            "type": "boolean"
          },
          "requiredCredential": {
            "type": "boolean",
            "description": "RequiredCredential is true when app version has REQUIRED_CREDENTIAL(131), and for shift facility.BypassPerDiemRequiredCredential is false"
          },
          "requiredCredentialAdded": {
            "type": "boolean",
            "description": "RequiredCredentialAdded indicates if system has added any required credentials, \r\nwhen both RequiredCredential and RequiredCredentialAdded are true show View Credentials link in the Skills Met column,\r\nshow empty when RequiredCredential is true and RequiredCredentialAdded is false."
          },
          "allRequiredCredentialMet": {
            "type": "boolean"
          },
          "agencyNurseStatus": {
            "type": "string",
            "nullable": true
          },
          "submissionStatus": {
            "type": "string",
            "description": "Submission Statuses: \"Retracted\", \"Award Offer Declined\", \"Submission Denied\", \"Award Offer Sent\", \"Awarded\", \"Submitted\"",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShiftDetailsModel_RejectedCommentModel": {
        "type": "object",
        "properties": {
          "rejectedComments": {
            "type": "string",
            "nullable": true
          },
          "rejectedBy": {
            "type": "string",
            "nullable": true
          },
          "dateRejected": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ShiftDetailsModel_RequiredCredentialModel": {
        "type": "object",
        "properties": {
          "credentialName": {
            "type": "string",
            "nullable": true
          },
          "waivable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ShiftDetailsModel_UnitModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "careTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShiftRequiredCredential": {
        "type": "object",
        "properties": {
          "credentialName": {
            "type": "string",
            "nullable": true
          },
          "waivable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ShiftSubmission": {
        "type": "object",
        "properties": {
          "bidId": {
            "type": "integer",
            "format": "int32"
          },
          "shiftId": {
            "type": "integer",
            "format": "int32"
          },
          "nurseId": {
            "type": "integer",
            "description": "If agency requested the shift, then it's the NurseId of the agency; otherwise, it's the NurseId of the internal professional.",
            "format": "int32"
          },
          "userFirstName": {
            "type": "string",
            "description": "The professional's first name.",
            "nullable": true
          },
          "userLastName": {
            "type": "string",
            "description": "The professional's last name.",
            "nullable": true
          },
          "bidDatePlaced": {
            "type": "string",
            "description": "Submission Date",
            "format": "date-time"
          },
          "isAgency": {
            "type": "boolean",
            "description": "Indicates if the agency requested the shift."
          },
          "agencyId": {
            "type": "integer",
            "description": "If the submission is for agency professional, then AgencyId is greater than 0.",
            "format": "int32"
          },
          "agencyName": {
            "type": "string",
            "description": "If the submission is for agency professional, then AgencyName is not null or empty.",
            "nullable": true
          },
          "chosenNurseId": {
            "type": "integer",
            "description": "If the submission is for agency professional, then ChosenNurseId is greater than 0.",
            "format": "int32"
          },
          "jobTitle": {
            "type": "string",
            "description": "Visible for Internal Professional only.",
            "nullable": true
          },
          "agencyFacilityRateTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "agencyNurseFacilityStatus": {
            "type": "integer",
            "description": "For registry version, or system has the setting RESTRICT_AWARD_BY_AGENCY_NURSE_FACILITY(72). Show the status icon in the column 'Notes'.\r\n\r\nUnder Review = 0, Approved by Facility = 1, Denied by Facility = 2",
            "format": "int32"
          },
          "rejectedReason": {
            "type": "string",
            "description": "Decline request reason.",
            "nullable": true
          },
          "rejectedReasonComments": {
            "type": "string",
            "description": "Decline request comments.",
            "nullable": true
          },
          "placedAgencyContactName": {
            "type": "string",
            "description": "Requested by agency contact name.",
            "nullable": true
          },
          "acceptedAgencyContactName": {
            "type": "string",
            "description": "Offer accepted by agency contact name.",
            "nullable": true
          },
          "isHigherBid": {
            "type": "boolean",
            "description": "Indicates if the submission is a higher bid. If it's true, show the higher indicator '(+)'."
          },
          "isLowerBid": {
            "type": "boolean",
            "description": "Indicates if the submission is a lower bid. If it's true, show the lower indicator '(-)'."
          },
          "bidInOvertime": {
            "type": "boolean",
            "description": "Indicates if the submission is in overtime. If it's true, show message 'Puts in Overtime' in the column 'Notes'."
          },
          "requestComment": {
            "type": "string",
            "description": "Show the request comment in the column 'Notes'.",
            "nullable": true
          },
          "cancelShiftReason": {
            "type": "string",
            "description": "For AMN(36) only, show the cancel shift reason in the column 'Award Submission' when awarded shift is cancelled by agency.",
            "nullable": true
          },
          "isRetracted": {
            "type": "boolean",
            "description": "Indicates if the submission is retracted. If it's retracted, show retracted information."
          },
          "dateRetracted": {
            "type": "string",
            "description": "Retracted Date.",
            "format": "date-time",
            "nullable": true
          },
          "retractedBy": {
            "type": "string",
            "nullable": true
          },
          "careTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Nurse Care Types.",
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Notes: HU, HF, HS, PT, EC, NV",
            "nullable": true
          },
          "submissionStatus": {
            "type": "string",
            "description": "Submission Status: 'REQUEST', 'WIN NOW REQUEST', 'AWARD OFFER SENT', 'AWARDED SHIFT', 'CANCELLED'.",
            "nullable": true
          },
          "rateText": {
            "type": "string",
            "description": "By default, the column name is 'Offered Rate', if system has FACILITY_RATE_TYPE(67), change the column name to 'Charge / Pay Rate'.\r\n\r\nThe rate text is similar to these: '$50.00', '$59.76 / $59.76', 'Base Pay Rate', '1.25 x Base Pay Rate'.",
            "nullable": true
          },
          "multipliedRateText": {
            "type": "string",
            "description": "This is multiplied against the Health Care Professional's Base Pay Rate. For example, '(1.25 x Offered Rate)'.",
            "nullable": true
          },
          "bonusRateText": {
            "type": "string",
            "description": "Extra bonuses as a fixed dollar amount. For example, '$10 hourly bonus' or '$10 Overtime'.",
            "nullable": true
          },
          "skillsMet": {
            "type": "string",
            "description": "# Skills Met. For example, '4/4'.",
            "nullable": true
          },
          "viewRequiredSkills": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User is able to view the required shift skills."
          },
          "viewRequiredCredentials": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User is able to view the required credentials."
          },
          "allRequiredCredentialMet": {
            "type": "boolean",
            "description": "Indicates if all required credentials are met."
          },
          "allowAwardRequest": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User is able to award the request."
          },
          "allowDenyRequest": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User is able to decline the request."
          },
          "allowAwardToOtherShift": {
            "type": "boolean",
            "description": "Indicates if the current logged-in Admin User is able to award the request to other shift."
          },
          "overtimeIndicator": {
            "type": "string",
            "description": "Indicates if there will be an indicator in the system when professional is approaching overtime, when the agency is submitting and when the hospital is reviewing the submission.",
            "nullable": true
          },
          "showWorkOver16Hours": {
            "type": "boolean",
            "description": "For UMMS(335) only, indicates if the professional work over 16 hours in 24 hours.\r\nIf it's true, show the message 'Award shift failed because it will make the professional work over 16 hours in 24 hours.'"
          },
          "showWorkOver60Hours": {
            "type": "boolean",
            "description": "For UMMS(335) only, indicates if the professional work over 60 hours a work week.\r\nIf it's true, show the message 'Unable to process request: This provider is scheduled more than 60 hours a work week and/or more than 5 consecutive shifts a pay period. Please contact <a href=\"mailto:UMMS_Staffing_Center@umm.edu\">UMMS_Staffing_Center@umm.edu</a> for more information.'"
          },
          "showFacilityRateType": {
            "type": "boolean",
            "description": "Indicates if showing Facility Rate Type is required when awarding the request."
          }
        },
        "additionalProperties": false
      },
      "ShiftTimeTypeDropdownOption": {
        "type": "object",
        "properties": {
          "timeTypeId": {
            "type": "integer",
            "description": "Shift Time Type ID",
            "format": "int32"
          },
          "timeTypeName": {
            "type": "string",
            "description": "Shift Time Type Name",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "description": "Shift Time Type Start - only the time portion",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "description": "Shift Time Type End - only the time portion",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Option of ShiftTimeTypeDropdown"
      },
      "SkillGroupModel": {
        "type": "object",
        "properties": {
          "skillGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "skillGroupName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SkillModel": {
        "type": "object",
        "properties": {
          "skillID": {
            "type": "integer",
            "format": "int32"
          },
          "skillGroupID": {
            "type": "integer",
            "format": "int32"
          },
          "skillName": {
            "type": "string",
            "nullable": true
          },
          "skillActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SortDescription": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "nullable": true
          },
          "direction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDirection"
              }
            ],
            "description": "Sort direction: 0 - Ascending, 1 - Descending."
          }
        },
        "additionalProperties": false
      },
      "SortDirection": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "Sort direction: 0 - Ascending, 1 - Descending.",
        "format": "int32"
      },
      "SplitShiftModel": {
        "type": "object",
        "properties": {
          "secondShiftId": {
            "type": "integer",
            "description": "When splitting shift, the original shift will be updated and a new shift will be created\r\nSecondShiftId will be greater than zero if the second shift is created successfully\r\nNot currently in use, just in case we need to prompt user with it one day",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of SplitShift"
      },
      "SplitShiftParam": {
        "required": [
          "firstShiftEndDate",
          "firstShiftStartDate",
          "secondShiftEndDate",
          "shiftId"
        ],
        "type": "object",
        "properties": {
          "shiftId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "firstShiftStartDate": {
            "type": "string",
            "format": "date"
          },
          "firstShiftEndDate": {
            "type": "string",
            "format": "date"
          },
          "secondShiftEndDate": {
            "type": "string",
            "format": "date"
          }
        },
        "additionalProperties": false,
        "description": "Request for SplitShift"
      },
      "SplitShiftRequest": {
        "required": [
          "firstShiftEndDate",
          "firstShiftStartDate",
          "positionId",
          "secondShiftEndDate",
          "shiftId",
          "unitId",
          "wageCodeId"
        ],
        "type": "object",
        "properties": {
          "shiftId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "unitId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "positionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "wageCodeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "shiftBreakTime": {
            "type": "integer",
            "description": "Pass null if user does not specify it.",
            "format": "int32",
            "nullable": true
          },
          "firstShiftStartDate": {
            "type": "string",
            "description": "1st Shift Start Date.",
            "format": "date-time"
          },
          "firstShiftEndDate": {
            "type": "string",
            "description": "1st Shift End Date/2nd Shift Start Date.",
            "format": "date-time"
          },
          "secondShiftEndDate": {
            "type": "string",
            "description": "2nd Shift End Date.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Request for SplitShift"
      },
      "SplitShiftResponse": {
        "type": "object",
        "properties": {
          "shiftId": {
            "type": "integer",
            "format": "int32"
          },
          "secondShiftId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of SplitShift"
      },
      "StatusResponse": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "description": "Status (False for failure, True for success)"
          }
        },
        "additionalProperties": false,
        "description": "Shared response status for (Multiple Insert, Update, Delete)"
      },
      "SystemAlignedCustomConfigs": {
        "type": "object",
        "properties": {
          "systemId": {
            "type": "integer",
            "format": "int32"
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "alignedCustomConfigs": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "alignedCustomConfigsTotal": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SystemDocumentModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "documentname": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SystemFacilityTreeModel": {
        "type": "object",
        "properties": {
          "systems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemFacilityTreeModel_SystemNodeModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SystemFacilityTreeModel_FacilityNodeModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "selected": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SystemFacilityTreeModel_SystemNodeModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "selected": {
            "type": "boolean"
          },
          "facilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemFacilityTreeModel_FacilityNodeModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SystemPrivateComment": {
        "type": "object",
        "properties": {
          "privateCommentId": {
            "type": "integer",
            "format": "int32"
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "commentText": {
            "type": "string",
            "nullable": true
          },
          "datePosted": {
            "type": "string",
            "format": "date-time"
          },
          "postedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SystemSetting": {
        "type": "object",
        "properties": {
          "systemId": {
            "type": "integer",
            "format": "int32"
          },
          "settingId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "System Level Setting"
      },
      "SystemWithSettingItem": {
        "type": "object",
        "properties": {
          "systemId": {
            "type": "integer",
            "format": "int32"
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "systemActive": {
            "type": "boolean"
          },
          "appVersionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "appVersionName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "SystemWithSettingItem"
      },
      "TimeEntry": {
        "type": "object",
        "properties": {
          "shiftID": {
            "type": "integer",
            "format": "int32"
          },
          "contractAssignmentID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "systemID": {
            "type": "integer",
            "format": "int32"
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "facilityID": {
            "type": "integer",
            "format": "int32"
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitID": {
            "type": "integer",
            "format": "int32"
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "positionID": {
            "type": "integer",
            "format": "int32"
          },
          "positionName": {
            "type": "string",
            "nullable": true
          },
          "shiftStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftBreakTime": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "wageCodeID": {
            "type": "integer",
            "format": "int32"
          },
          "wageCodeName": {
            "type": "string",
            "nullable": true
          },
          "approvedByNurse": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shiftApprovedToBill": {
            "type": "boolean"
          },
          "shiftRejectedToBill": {
            "type": "boolean"
          },
          "shiftBreakStartDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "shiftBreakEndDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "accountID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taskID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "restrictProviderPortalAccess": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TopMessageItem": {
        "type": "object",
        "properties": {
          "messageID": {
            "type": "integer",
            "format": "int32"
          },
          "userFirstName": {
            "type": "string",
            "nullable": true
          },
          "userLastName": {
            "type": "string",
            "nullable": true
          },
          "messageSubject": {
            "type": "string",
            "nullable": true
          },
          "messageDateSent": {
            "type": "string",
            "format": "date-time"
          },
          "messageDateReceived": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UnapprovedShift": {
        "type": "object",
        "properties": {
          "shiftId": {
            "type": "integer",
            "format": "int32"
          },
          "shiftStartDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftEndDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shiftBreakTime": {
            "type": "integer",
            "format": "int32"
          },
          "totalHours": {
            "type": "number",
            "format": "double"
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "unitId": {
            "type": "integer",
            "format": "int32"
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "costCenterCode": {
            "type": "string",
            "nullable": true
          },
          "agencyId": {
            "type": "integer",
            "format": "int32"
          },
          "agencyName": {
            "type": "string",
            "nullable": true
          },
          "chosenNurseId": {
            "type": "integer",
            "format": "int32"
          },
          "nurseName": {
            "type": "string",
            "nullable": true
          },
          "wageCodeName": {
            "type": "string",
            "nullable": true
          },
          "shiftComments": {
            "type": "string",
            "nullable": true
          },
          "enterMethod": {
            "type": "string",
            "description": "Returns one of these values: Empty, 'Agency Time Entry', 'Professional Clock In/Out', 'Hospital Scheduled'",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateAgencyIntegrationKeyRequest": {
        "required": [
          "agencyId"
        ],
        "type": "object",
        "properties": {
          "agencyId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "agencyIntegrationKey": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request of Update Agency Integration Key."
      },
      "UpdateAgencyProfessionalApprovedFacilitiesRequest": {
        "required": [
          "agencyId",
          "facilityId",
          "nurseId",
          "status"
        ],
        "type": "object",
        "properties": {
          "facilityId": {
            "type": "integer",
            "description": "ALL_FACILITIES = 999999999;",
            "format": "int32"
          },
          "agencyId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "AgencyId",
            "format": "int32"
          },
          "nurseId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Agency Professional's NurseId",
            "format": "int32"
          },
          "status": {
            "maximum": 2,
            "minimum": 0,
            "type": "integer",
            "description": "UNDER_REVIEW = 0;\r\nAPPROVED = 1;\r\nNOT_APPROVED = 2;",
            "format": "int32"
          },
          "deniedReasonId": {
            "type": "integer",
            "description": "For system - VMS_UMMS(433) and Status is NOT_APPROVED.",
            "format": "int32",
            "nullable": true
          },
          "educationId": {
            "type": "integer",
            "description": "Required if AppVersion has the setting NURSE_EDUCATION(74) and Status is APPROVED.",
            "format": "int32",
            "nullable": true
          },
          "facilityStates": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Visible if system has the setting AGENCY_NURSE_STATE(193).",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateAgencyProfessionalApprovedFacilitiesResponse": {
        "type": "object",
        "properties": {
          "updated": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateAgencyProfessionalBadgeID2Request": {
        "required": [
          "agencyId",
          "nurseId"
        ],
        "type": "object",
        "properties": {
          "agencyId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "AgencyId",
            "format": "int32"
          },
          "nurseId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Agency Professional's NurseId",
            "format": "int32"
          },
          "badgeID2": {
            "type": "string",
            "description": "Badge ID #2.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateAgencyProfessionalBadgeID2Response": {
        "type": "object",
        "properties": {
          "updated": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateAgencyProfessionalBusinessUnitAndEmailRequest": {
        "required": [
          "agencyId",
          "nurseId"
        ],
        "type": "object",
        "properties": {
          "agencyId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "AgencyId",
            "format": "int32"
          },
          "nurseId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Agency Professional's NurseId",
            "format": "int32"
          },
          "businessUnit": {
            "type": "string",
            "description": "Business Unit.",
            "nullable": true
          },
          "businessEmail": {
            "type": "string",
            "description": "Business Email.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateAgencyProfessionalBusinessUnitAndEmailResponse": {
        "type": "object",
        "properties": {
          "updated": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateAgencyProfessionalEducationRequest": {
        "required": [
          "agencyId",
          "nurseId"
        ],
        "type": "object",
        "properties": {
          "agencyId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "AgencyId",
            "format": "int32"
          },
          "nurseId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Agency Professional's NurseId",
            "format": "int32"
          },
          "educationId": {
            "type": "integer",
            "description": "Pass null to clear the agency professional's education.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateAgencyProfessionalEducationResponse": {
        "type": "object",
        "properties": {
          "updated": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateAgencyProfessionalJHEDStatusRequest": {
        "required": [
          "agencyId",
          "jhedStatus",
          "nurseId"
        ],
        "type": "object",
        "properties": {
          "agencyId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "AgencyId",
            "format": "int32"
          },
          "nurseId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Agency Professional's NurseId",
            "format": "int32"
          },
          "jhedStatus": {
            "maximum": 4,
            "minimum": 1,
            "type": "integer",
            "description": "JHED Status: Pending = 1, Active=2, Inactive = 3, Terminate = 4.",
            "format": "int32"
          },
          "educationId": {
            "type": "integer",
            "description": "Required if AppVersion has the setting NURSE_EDUCATION(74) and JHED Status is Active or Inactive.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateAgencyProfessionalJHEDStatusResponse": {
        "type": "object",
        "properties": {
          "hasApprovedFacilityStatuses": {
            "type": "boolean",
            "description": "Indicates if this Professional still has Approved Facility Statuses."
          },
          "approvedFacilityStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApprovedFacilityStatusItem"
            },
            "description": "The list of Approved Facility Statuses.",
            "nullable": true
          },
          "hasInternalAccount": {
            "type": "boolean",
            "description": "Indicates if this professional also has an Internal Account."
          },
          "isAffiliatedWithOtherAgencyAccounts": {
            "type": "boolean",
            "description": "Indicates if this Professional is also affiliated with other Agency Accounts."
          },
          "affiliatedAgencies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of agencies that this Professional is affiliated with.",
            "nullable": true
          },
          "updated": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateAgencyProfessionalLicenseRequest": {
        "required": [
          "agencyId",
          "nurseId"
        ],
        "type": "object",
        "properties": {
          "agencyId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "AgencyId",
            "format": "int32"
          },
          "nurseId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Agency Professional's NurseId",
            "format": "int32"
          },
          "nurseLicenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NurseLicense"
            },
            "description": "List of Nurse Licenses.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateAgencyProfessionalLicenseResponse": {
        "type": "object",
        "properties": {
          "updated": {
            "type": "boolean"
          },
          "identicalLicenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdenticalLicenseResponseModel"
            },
            "description": "List of Nurse's licenses.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateAgencyProfessionalUserIntegrationKeyRequest": {
        "required": [
          "agencyId",
          "nurseId"
        ],
        "type": "object",
        "properties": {
          "agencyId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "AgencyId",
            "format": "int32"
          },
          "nurseId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Agency Professional's NurseId",
            "format": "int32"
          },
          "userIntegrationKey": {
            "type": "string",
            "description": "User Integration Key.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateAgencyProfessionalUserIntegrationKeyResponse": {
        "type": "object",
        "properties": {
          "updated": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateAgencyProfileParam": {
        "required": [
          "agencyName",
          "city",
          "country",
          "email",
          "firstName",
          "lastName",
          "mainPhone",
          "state",
          "streetAddress",
          "zipCode"
        ],
        "type": "object",
        "properties": {
          "agencyName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "AgencyName is read only for JHU."
          },
          "title": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "FirstName is editable for Registry version."
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "LastName is editable for Registry version."
          },
          "streetAddress": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "streetAddress2": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "state": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string"
          },
          "country": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "zipCode": {
            "maxLength": 10,
            "minLength": 0,
            "pattern": "^(\\d{5}-\\d{4}|\\d{5})$",
            "type": "string"
          },
          "mainPhone": {
            "maxLength": 12,
            "minLength": 0,
            "pattern": "^\\d{3}[\\-]\\d{3}[\\-]\\d{4}",
            "type": "string"
          },
          "phoneExt": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "afterHoursPhoneNumber": {
            "maxLength": 12,
            "minLength": 0,
            "pattern": "^\\d{3}[\\-]\\d{3}[\\-]\\d{4}",
            "type": "string",
            "nullable": true
          },
          "mobilePhone": {
            "maxLength": 12,
            "minLength": 0,
            "pattern": "^\\d{3}[\\-]\\d{3}[\\-]\\d{4}",
            "type": "string",
            "nullable": true
          },
          "fax": {
            "maxLength": 12,
            "minLength": 0,
            "pattern": "(^([1])?\\s*(\\(\\d{3}\\))?\\s*\\d{3}[\\-\\s]?\\d{4}$)|(^\\+?\\d([\\d\\-\\.]){7,20})",
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "recieveTextMessage": {
            "type": "boolean"
          },
          "sendEmail": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateAgencyStatusRequest": {
        "required": [
          "agencyId"
        ],
        "type": "object",
        "properties": {
          "agencyId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Valid Status: PENDING = \"P\", APPROVED = \"A\", INACTIVE = \"I\", DENIED = \"D\";",
            "nullable": true
          },
          "vendorCode": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "abbreviation": {
            "maxLength": 5,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request of update Agency Status."
      },
      "UpdateAgencyStatusResponse": {
        "type": "object",
        "properties": {
          "isUpdated": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateBillingInfoParam": {
        "required": [
          "city",
          "country",
          "phone",
          "state",
          "streetAddress",
          "zipCode"
        ],
        "type": "object",
        "properties": {
          "streetAddress": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "streetAddress2": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "state": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string"
          },
          "country": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "zipCode": {
            "maxLength": 10,
            "minLength": 0,
            "pattern": "^(\\d{5}-\\d{4}|\\d{5})$",
            "type": "string"
          },
          "phone": {
            "maxLength": 12,
            "minLength": 0,
            "pattern": "^\\d{3}[\\-]\\d{3}[\\-]\\d{4}",
            "type": "string",
            "description": "Billing daytime phone number."
          },
          "phoneExt": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "description": "Billing phone number ext.",
            "nullable": true
          },
          "fax": {
            "pattern": "(^([1])?\\s*(\\(\\d{3}\\))?\\s*\\d{3}[\\-\\s]?\\d{4}$)|(^\\+?\\d([\\d\\-\\.]){7,20})",
            "type": "string",
            "description": "Billing fax.",
            "nullable": true
          },
          "agencyTaxID": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Agency Tax ID.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateContactModel": {
        "type": "object",
        "properties": {
          "isUpdated": {
            "type": "boolean",
            "description": "IsUpdated is true if agency contact gets updated successfully"
          },
          "userAlreadyExists": {
            "type": "boolean",
            "description": "UserAlreadyExists is true if username that user inputs is already there, agency contact was not updated"
          }
        },
        "additionalProperties": false,
        "description": "Response of UpdateContact"
      },
      "UpdateContactParam": {
        "required": [
          "agencyContactId",
          "email",
          "firstName",
          "lastName",
          "phone",
          "title"
        ],
        "type": "object",
        "properties": {
          "agencyContactId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "streetAddress": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "streetAddress2": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "stateId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "zipCode": {
            "maxLength": 10,
            "minLength": 0,
            "pattern": "^(\\d{5}-\\d{4}|\\d{5})$",
            "type": "string",
            "nullable": true
          },
          "phone": {
            "maxLength": 12,
            "minLength": 0,
            "pattern": "^\\d{3}[\\-]\\d{3}[\\-]\\d{4}",
            "type": "string"
          },
          "phoneExt": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "fax": {
            "maxLength": 17,
            "minLength": 0,
            "pattern": "(^([1])?\\s*(\\(\\d{3}\\))?\\s*\\d{3}[\\-\\s]?\\d{4}$)|(^\\+?\\d([\\d\\-\\.]){7,20})",
            "type": "string",
            "nullable": true
          },
          "receiveCredentialMessages": {
            "type": "boolean"
          },
          "receiveAllShiftRelatedMessages": {
            "type": "boolean"
          },
          "billingContact": {
            "type": "boolean"
          },
          "isAdmin": {
            "type": "boolean"
          },
          "rateSurveyKeyContact": {
            "type": "boolean"
          },
          "auditComplianceOfficer": {
            "type": "boolean"
          },
          "usageReportCoordinator": {
            "type": "boolean"
          },
          "agencyLicenseCoordinator": {
            "type": "boolean"
          },
          "agencyInsuranceCoordinator": {
            "type": "boolean"
          },
          "registryLiaisonKeyContact": {
            "type": "boolean"
          },
          "authorizedSigner": {
            "type": "boolean"
          },
          "contractsAdministrator": {
            "type": "boolean"
          },
          "clinicalRepresentative": {
            "type": "boolean"
          },
          "receiveTextCancellations": {
            "type": "boolean"
          },
          "mobilePhone": {
            "maxLength": 12,
            "minLength": 0,
            "pattern": "^\\d{3}[\\-]\\d{3}[\\-]\\d{4}",
            "type": "string",
            "nullable": true
          },
          "selectedPrograms": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Selected program Id",
            "nullable": true
          },
          "selectedFacilities": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Only selected facility Id, no system Id",
            "nullable": true
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "programCategoryKey": {
            "type": "string",
            "nullable": true
          },
          "sendEmail": {
            "type": "boolean"
          },
          "username": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Request for UpdateContact"
      },
      "UpdateInternalProfessionalPersonalProfileRequest": {
        "required": [
          "nurseId"
        ],
        "type": "object",
        "properties": {
          "nurseId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Internal Professional's NurseId",
            "format": "int32"
          },
          "title": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "`First Name:` It's editable if the System has the setting `HOSPADMIN_EDIT_NAME(43)`.\r\n\r\n            For registry version, it's required if it's editable.",
            "nullable": true
          },
          "middleName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "MiddleName.",
            "nullable": true
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "`Last Name:`  It's editable if the System has the setting `HOSPADMIN_EDIT_NAME(43)`.\r\n\r\n            For registry version, it's required if it's editable.",
            "nullable": true
          },
          "nickName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "`Nick Name:` For TNAA only.",
            "nullable": true
          },
          "address": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "`Address:` It's not editable if the System doesn't have the setting `HOSPADMIN_EDIT_NURSE_PERSONAL_PROFILE(35)`, \r\n            or has one of these settings `NO_USERDOB(3)` and `SEND_TO_EMAIL_REQUIRED(52)`.",
            "nullable": true
          },
          "address2": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "`Address 2:`",
            "nullable": true
          },
          "city": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "`City:` It's not editable if the System doesn't have the setting `HOSPADMIN_EDIT_NURSE_PERSONAL_PROFILE(35)`, \r\n            or has one of these settings `NO_USERDOB(3)` and `SEND_TO_EMAIL_REQUIRED(52)`.",
            "nullable": true
          },
          "state": {
            "maxLength": 2,
            "type": "string",
            "description": "`State:` It's not editable if the System doesn't have the setting `HOSPADMIN_EDIT_NURSE_PERSONAL_PROFILE(35)`, \r\n            or has one of these settings `NO_USERDOB(3)` and `SEND_TO_EMAIL_REQUIRED(52)`.",
            "nullable": true
          },
          "country": {
            "maxLength": 35,
            "type": "string",
            "description": "`Country:` It's not editable if the System doesn't have the setting `HOSPADMIN_EDIT_NURSE_PERSONAL_PROFILE(35)`, \r\n            or has one of these settings `NO_USERDOB(3)` and `SEND_TO_EMAIL_REQUIRED(52)`.",
            "nullable": true
          },
          "zipCode": {
            "maxLength": 10,
            "minLength": 0,
            "pattern": "^(\\d{5}-\\d{4}|\\d{5})$",
            "type": "string",
            "description": "`Zip Code:` It's not editable if the System doesn't have the setting `HOSPADMIN_EDIT_NURSE_PERSONAL_PROFILE(35)`, \r\n            or has one of these settings `NO_USERDOB(3)` and `SEND_TO_EMAIL_REQUIRED(52)`.",
            "nullable": true
          },
          "homePhone": {
            "maxLength": 12,
            "minLength": 0,
            "pattern": "^\\d{3}[\\-]\\d{3}[\\-]\\d{4}",
            "type": "string",
            "description": "`Home Phone:` Valid Phone Number format is xxx-xxx-xxxx.\r\n",
            "nullable": true
          },
          "mobilePhone": {
            "maxLength": 12,
            "minLength": 0,
            "pattern": "^\\d{3}[\\-]\\d{3}[\\-]\\d{4}",
            "type": "string",
            "description": "`Mobile Phone:` Valid Phone Number format is xxx-xxx-xxxx.\r\n\r\n            It's required if `Receive Text Messages` is checked.",
            "nullable": true
          },
          "receiveTextMessages": {
            "type": "boolean",
            "description": "`Receive Text Messages:`"
          },
          "email": {
            "maxLength": 100,
            "type": "string",
            "description": "`Email:` For JHU, it's editable if the logged-in user is HOSP_ADMIN or HOSP_SUPER. \r\n\r\n            For other systems, it's not editable if the System doesn't have the setting `HOSPADMIN_EDIT_NURSE_PERSONAL_PROFILE(35)`, \r\n            or has one of these settings `NO_USERDOB(3)` and `SEND_TO_EMAIL_REQUIRED(52)`.\r\n\r\n            It's is required if `Send Messages to Email` is checked.",
            "format": "email",
            "nullable": true
          },
          "sendMessagesToEmail": {
            "type": "boolean",
            "description": "`Send Messages to Email:` It's not visible if the System has the setting `NURSE_LOCK_SEND_AS_EMAIL(108)`.\r\n\r\n            It's not editable if the System has the setting `NURSE_LOCK_SEND_AS_EMAIL(108)` or `SEND_TO_EMAIL_REQUIRED(52)`."
          },
          "birthDate": {
            "type": "string",
            "description": "`Birth Date:` It's not visible if the System has one of these settings: `NO_USERDOB(3)`, `SEND_TO_EMAIL_REQUIRED(52)`.\r\n",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateInternalProfessionalPersonalProfileResponse": {
        "type": "object",
        "properties": {
          "updated": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateInternalProfessionalProfileRequest": {
        "required": [
          "nurseId"
        ],
        "type": "object",
        "properties": {
          "nurseId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Internal Professional's NurseId",
            "format": "int32"
          },
          "positionTypeId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "`Position Type:` It's not editable if the System has one of these settings `NURSE_PROFILE_LOCKDOWN_POSITIONTYPE(18)`, `USER_ACCOUNT_INTEGRATION(8)`.",
            "format": "int32",
            "nullable": true
          },
          "careTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "`Care Types:` List of Care type ids.",
            "nullable": true
          },
          "licensedStates": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "`States Licensed In:`",
            "nullable": true
          },
          "languagesSpoken": {
            "maxLength": 200,
            "type": "string",
            "description": "`Languages Spoken:`",
            "nullable": true
          },
          "educationId": {
            "type": "integer",
            "description": "`Education:` It's visible and editable if the AppVersion has the setting `NURSE_EDUCATION(74)`.",
            "format": "int32",
            "nullable": true
          },
          "facilityId": {
            "type": "integer",
            "description": "`Home Facility:` It's visible if the AppVersion has the setting `APPVERSION_PRE_PROCESS_VALIDATE_CREDENTIALS(178)`, \r\n            or the System doesn't have the setting `NURSE_PROFILE_LOCKDOWN_HOME_FACILITY_UNIT(19)`.\r\n\r\n            It's not editable if the System has the setting `USER_ACCOUNT_INTEGRATION(8)`.",
            "format": "int32",
            "nullable": true
          },
          "unitId": {
            "type": "integer",
            "description": "`Home Unit:` It's visible if the AppVersion has the setting `APPVERSION_PRE_PROCESS_VALIDATE_CREDENTIALS(178)`, \r\n            or the System doesn't have the setting `NURSE_PROFILE_LOCKDOWN_HOME_FACILITY_UNIT(19)`.\r\n\r\n            It's not editable if the System has the setting `USER_ACCOUNT_INTEGRATION(8)`.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateInternalProfessionalProfileResponse": {
        "type": "object",
        "properties": {
          "updated": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateInternalProfessionalStatusRequest": {
        "required": [
          "nurseId",
          "status"
        ],
        "type": "object",
        "properties": {
          "nurseId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Internal Professional's NurseId",
            "format": "int32"
          },
          "status": {
            "minLength": 1,
            "type": "string",
            "description": "`Status:` Professional Status.\r\n`A` - Approved\r\n`P` - Requested/Pending\r\n`I` - Inactive\r\n`D` - Denied"
          },
          "nurseBadgeId2": {
            "type": "string",
            "description": "`Badge ID #2:`\r\n\r\n\r\n            It's visible and editable if AppVersion has the setting `NURSE_BADGE_2(102)`.",
            "nullable": true
          },
          "jobTitleId": {
            "type": "integer",
            "description": "`Job Code:`\r\n\r\n\r\n            It's visible if System doesn't have the setting `EMPLOYEE_STATUS_INTEGRATION(69)`.\r\n\r\n            It's editable if System doesn't have these settings `USER_ACCOUNT_INTEGRATION(8)`, `EMPLOYEE_STATUS_INTEGRATION(69)` and `HOSPADMIN_LOCK_BASE_PAY_RATE(11)`.",
            "format": "int32",
            "nullable": true
          },
          "grade": {
            "type": "integer",
            "description": "`Grade:`\r\n\r\n\r\n            It's visible if System doesn't have the setting `HOSPADMIN_LOCK_BASE_PAY_RATE(11)`.\r\n\r\n            It's editable if System doesn't have these settings `HOSPADMIN_LOCK_BASE_PAY_RATE(11)` and `USER_ACCOUNT_INTEGRATION(8)`.",
            "format": "int32",
            "nullable": true
          },
          "basePayRate": {
            "type": "number",
            "description": "`Base Pay Rate:`\r\n\r\n\r\n            It's visible if System doesn't have the setting `HOSPADMIN_LOCK_BASE_PAY_RATE(11)`.\r\n\r\n            It's editable if System doesn't have these settings `HOSPADMIN_LOCK_BASE_PAY_RATE(11)` and `USER_ACCOUNT_INTEGRATION(8)`.",
            "format": "double",
            "nullable": true
          },
          "unionId": {
            "type": "integer",
            "description": "`Union:`\r\n\r\n\r\n            It's visible if System doesn't have the setting `HOSPADMIN_LOCK_BASE_PAY_RATE(11)`.\r\n\r\n            It's editable if System doesn't have these settings `HOSPADMIN_LOCK_BASE_PAY_RATE(11)` and `USER_ACCOUNT_INTEGRATION(8)`.",
            "format": "int32",
            "nullable": true
          },
          "employeeStatusId": {
            "type": "integer",
            "description": "`Emp. Status:`\r\n\r\n\r\n            It's visible if System doesn't have the setting `HOSPADMIN_LOCK_BASE_PAY_RATE(11)` and AppVersion doesn't have the setting `PAYROLL_ID(83)`.\r\n\r\n            It's editable if System doesn't have these settings `HOSPADMIN_LOCK_BASE_PAY_RATE(11)` and `USER_ACCOUNT_INTEGRATION(8)`, and AppVersion doesn't have the setting `PAYROLL_ID(83)`.",
            "format": "int32",
            "nullable": true
          },
          "nurseADPID": {
            "type": "string",
            "description": "`ADP ID:`\r\n\r\n\r\n            It's visible and editable if AppVersion has the setting `PAYROLL_ID(83)`.",
            "nullable": true
          },
          "employeeNumber": {
            "type": "string",
            "description": "`Employee #:`\r\n\r\n\r\n            It's visible if System doesn't have the setting `HOSPADMIN_LOCK_BASE_PAY_RATE(11)`.\r\n\r\n            It's editable if System doesn't have these settings `HOSPADMIN_LOCK_BASE_PAY_RATE(11)` and `USER_ACCOUNT_INTEGRATION(8)`.",
            "nullable": true
          },
          "fte": {
            "minimum": 0,
            "type": "number",
            "description": "`FTE:`\r\n\r\n\r\n            It's visible if System doesn't have the setting `HOSPADMIN_LOCK_BASE_PAY_RATE(11)`.\r\n\r\n            It's editable if System doesn't have these settings `HOSPADMIN_LOCK_BASE_PAY_RATE(11)` and `USER_ACCOUNT_INTEGRATION(8)`.",
            "format": "double",
            "nullable": true
          },
          "nurseHireDate": {
            "type": "string",
            "description": "`Hire Date:`\r\n\r\n\r\n            It's visible if System doesn't have the setting `HOSPADMIN_LOCK_BASE_PAY_RATE(11)`, or System has the setting `NURSE_HIRE_DATE(85)`.\r\n\r\n            It's editable if one of below is satisfied:\r\n\r\n            1. System doesn't have these settings `HOSPADMIN_LOCK_BASE_PAY_RATE(11)`, `USER_ACCOUNT_INTEGRATION(8)` and `EMPLOYEE_STATUS_INTEGRATION(69)`.\r\n\r\n            2. System has the setting `NURSE_HIRE_DATE(85)`, but doesn't have these settings `USER_ACCOUNT_INTEGRATION(8)` and `EMPLOYEE_STATUS_INTEGRATION(69)`.",
            "format": "date-time",
            "nullable": true
          },
          "terminationDate": {
            "type": "string",
            "description": "`Termination Date:`\r\n\r\n\r\n            It's visible if System doesn't have the setting `HOSPADMIN_LOCK_BASE_PAY_RATE(11)`, or System has the setting `NURSE_HIRE_DATE(85)`.\r\n\r\n            It's editable if one of below is satisfied:\r\n\r\n            1. System doesn't have these settings `HOSPADMIN_LOCK_BASE_PAY_RATE(11)` and `USER_ACCOUNT_INTEGRATION(8)`.\r\n\r\n            2. System has the setting `NURSE_HIRE_DATE(85)`, but doesn't have the setting `USER_ACCOUNT_INTEGRATION(8)`.",
            "format": "date-time",
            "nullable": true
          },
          "educationId": {
            "type": "integer",
            "description": "`Education:`\r\n\r\n\r\n            It's visible and editable if AppVersion has the setting `NURSE_EDUCATION(74)`.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateInternalProfessionalStatusResponse": {
        "type": "object",
        "properties": {
          "updated": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateInternalProfessionalTimeAttendanceStatusRequest": {
        "required": [
          "nurseId",
          "status"
        ],
        "type": "object",
        "properties": {
          "nurseId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Internal Professional's NurseId",
            "format": "int32"
          },
          "status": {
            "maximum": 4,
            "minimum": 1,
            "type": "integer",
            "description": "JHED/T&A Status: Pending = 1, Active=2, Terminate = 4.",
            "format": "int32"
          },
          "educationId": {
            "type": "integer",
            "description": "Required if AppVersion has the setting NURSE_EDUCATION(74) and JHED/T&A Status is Active or Inactive.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateInternalProfessionalTimeAttendanceStatusResponse": {
        "type": "object",
        "properties": {
          "isAffiliatedWithOtherAgencyAccounts": {
            "type": "boolean",
            "description": "Indicates if this Professional is also affiliated with other Agency Accounts."
          },
          "affiliatedAgencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectableItem"
            },
            "description": "The list of agencies that this Professional is affiliated with.",
            "nullable": true
          },
          "updated": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateSystemRequest": {
        "required": [
          "address",
          "city",
          "country",
          "email",
          "state",
          "systemName",
          "systemType",
          "zipCode"
        ],
        "type": "object",
        "properties": {
          "systemName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "SystemName"
          },
          "systemType": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "SystemType, including HOSPITAL, NURSING, DENTAL"
          },
          "address": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Address"
          },
          "address2": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Address2",
            "nullable": true
          },
          "city": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "City"
          },
          "state": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string",
            "description": "State"
          },
          "country": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "Country"
          },
          "zipCode": {
            "maxLength": 10,
            "minLength": 0,
            "pattern": "^(\\d{5}-\\d{4}|\\d{5})$",
            "type": "string",
            "description": "ZipCode"
          },
          "phone": {
            "maxLength": 12,
            "minLength": 0,
            "pattern": "^\\d{3}[\\-]\\d{3}[\\-]\\d{4}",
            "type": "string",
            "description": "Phone",
            "nullable": true
          },
          "phoneExt": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "description": "PhoneExt",
            "nullable": true
          },
          "fax": {
            "maxLength": 12,
            "minLength": 0,
            "pattern": "(^([1])?\\s*(\\(\\d{3}\\))?\\s*\\d{3}[\\-\\s]?\\d{4}$)|(^\\+?\\d([\\d\\-\\.]){7,20})",
            "type": "string",
            "description": "Fax",
            "nullable": true
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Email of primary admin",
            "format": "email"
          },
          "netTerms": {
            "type": "integer",
            "description": "Visible only for NU_WEST(22) and AMN(36)",
            "format": "int32",
            "nullable": true
          },
          "billingRemitMessage": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "Visible only when system has HOSP_ADMIN_SYSTEMWIDE_VMS_BILLING(59), and system or app version has CONSOLIDATED_INVOICING(110)",
            "nullable": true
          },
          "poNumber": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "PoNumber",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request of UpdateSystem"
      },
      "UpdateSystemResponse": {
        "type": "object",
        "properties": {
          "updated": {
            "type": "boolean",
            "description": "Indicates if system is updated successfully"
          }
        },
        "additionalProperties": false,
        "description": "Response of UpdateSystem"
      },
      "UploadCredentialModel": {
        "type": "object",
        "properties": {
          "nurseCredentialId": {
            "type": "integer",
            "description": "When NurseCredentialId is greater than 0 it means Nurse Credential is successfully updated/uploaded",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response of UploadCredential"
      },
      "UploadTimeCardResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UploadUserImageResponse": {
        "type": "object",
        "properties": {
          "uploaded": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ViewMessageModel": {
        "type": "object",
        "properties": {
          "messageID": {
            "type": "integer",
            "format": "int32"
          },
          "messageSubject": {
            "type": "string",
            "nullable": true
          },
          "attachmentName": {
            "type": "string",
            "nullable": true
          },
          "messageBody": {
            "type": "string",
            "nullable": true
          },
          "messageDateSent": {
            "type": "string",
            "description": "For hospital admin apply timezone before return",
            "format": "date-time"
          },
          "messageDateReceived": {
            "type": "string",
            "description": "For hospital admin apply timezone before return",
            "format": "date-time",
            "nullable": true
          },
          "messageTypeName": {
            "type": "string",
            "description": "Message Type, including Agency Award Offer, Agency Award, Request Review, Expiring Credential etc.",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "FirstName of Sender if view message from Inbox, or FirstName of Receiver if view message from Sent message list",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "LastName of Sender if view message from Inbox, or LastName of Receiver if view message from Sent message list",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response of ViewMessage"
      },
      "WageCodeItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "isSick": {
            "type": "boolean"
          },
          "isOt": {
            "type": "boolean"
          },
          "isHoliday": {
            "type": "boolean"
          },
          "isCallback": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Authorization": {
        "type": "apiKey",
        "description": "<strong>Access Token:</strong> Most of our web APIs require role-based authorization, which means user has to sign in first with their username and password to get access token. Then the access token will be sent in request header with key 'Authorization'.<br/><br/>- When playing with SwaggerUI, you call any web API that requires authorization, please call Auth/GetAccessToken first to generate an access token, and put 'Bearer YourTokenString(value of the response.data.AccessToken field)' in the Authorization textbox on the popup that shows up after clicking below Authorize button. <br/>- Please note that access token gets expired in 10 minutes after it is generated, you may need to regenerate one if response says 'Unauthorized.'",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Authorization": [ ]
    }
  ],
  "tags": [
    {
      "name": "AppVersion",
      "description": "AppVersion controller is used to do AppVersion based logic"
    },
    {
      "name": "Auth",
      "description": "Auth controller is used to do user authentication"
    },
    {
      "name": "BasicData",
      "description": "BasicData controller is used to retrieve key/value pairs, e.g. Facility, Unit, WageCode etc."
    },
    {
      "name": "Cache",
      "description": "CacheController is all about caching, including Get/Set/Remove a key"
    },
    {
      "name": "Contract",
      "description": "ContractController is all about Contract Assignment"
    },
    {
      "name": "Credential",
      "description": "CredentialController is all about Credential"
    },
    {
      "name": "CustomConfig",
      "description": "CustomConfig controller is used to retrieve custom setting, system level or app version level"
    },
    {
      "name": "Units",
      "description": "Unit controller"
    },
    {
      "name": "User",
      "description": "User controller is used to do user-related business"
    },
    {
      "name": "Availability",
      "description": "AvailabilityController is used for agency nurse to view/add/export/edit/delete agency professional's availability"
    },
    {
      "name": "Agency",
      "description": "Agency controller is used to do user authentication"
    }
  ]
}
